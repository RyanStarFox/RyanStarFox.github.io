<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RyanStarFox&#39;s Blog</title>
  <icon>https://ryanstarfox.github.io/metadata/avatar.png</icon>
  <subtitle>分享生活、想法与技术</subtitle>
  <link href="https://ryanstarfox.github.io/atom.xml" rel="self"/>
  
  <link href="https://ryanstarfox.github.io/"/>
  <updated>2025-08-17T18:19:05.000Z</updated>
  <id>https://ryanstarfox.github.io/</id>
  
  <author>
    <name>RyanStarFox</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CNN发展总结</title>
    <link href="https://ryanstarfox.github.io/2025/08/18/2025/20250819%20CNN%E5%8F%91%E5%B1%95%E6%80%BB%E7%BB%93/"/>
    <id>https://ryanstarfox.github.io/2025/08/18/2025/20250819%20CNN%E5%8F%91%E5%B1%95%E6%80%BB%E7%BB%93/</id>
    <published>2025-08-17T18:19:05.000Z</published>
    <updated>2025-08-17T18:19:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CNN发展总结"><a href="#CNN发展总结" class="headerlink" title="CNN发展总结"></a>CNN发展总结</h1><p>正在学习李沐老师的d2l课程，梳理一下提到的几个标志性的CNN的逻辑以及发展的逻辑。</p><h2 id="1-LeNet"><a href="#1-LeNet" class="headerlink" title="1 LeNet"></a>1 LeNet</h2><p>LeNet是最早的卷积神经网络，引入了卷积层、池化层等等。其架构如下：</p><p><img src="/images/2025/LeNet.drawio.svg" alt="LeNet.drawio"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>那时的汇聚层、激活函数还是AvergePool和Sigmoid&#x2F;Tanh，并非后来实践表明表现更好的ReLU和MaxPooling。</p><p><img src="/images/2025/AlexNet.drawio.svg" alt="AlexNet.drawio"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="2-AlexNet"><a href="#2-AlexNet" class="headerlink" title="2 AlexNet"></a>2 AlexNet</h2><p>与LeNet思路类似，在imageNet比赛中取得了不错的成绩，证明了更深更大的模型可以有非常好的效果</p><ol><li>更深的模型层数</li><li>卷积通道数目巨大，卷积窗口更大</li><li>激活函数从Sigmoid&#x2F;Tanh改成ReLU</li><li>通过Dropout全连接层控制模型复杂度</li><li>使用大量增强数据：翻转、裁切、变色</li></ol><p>其架构如下：</p><h2 id="3-使用块的网络（VGG）"><a href="#3-使用块的网络（VGG）" class="headerlink" title="3 使用块的网络（VGG）"></a>3 使用块的网络（VGG）</h2><p>在AlexNet的实现中，我们可以意识到两件事：</p><ol><li>更深更大的神经网络确实可以有更好的效果</li><li>有很多层的组合（例如卷积层+池化层）反复出现</li></ol><p>因此为了方便构建模块化地构建更大的网络，我们可以将一系列“层”定义一个“块”，以“块”为基本单位之一构建网络。</p><p><img src="/images/2025/VGG.drawio.svg" alt="VGG.drawio"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="4-网络中的网络（NiN）"><a href="#4-网络中的网络（NiN）" class="headerlink" title="4 网络中的网络（NiN）"></a>4 网络中的网络（NiN）</h2><p>VGG把神经网络的规模做得非常巨大，但是此时又暴露出了内存&#x2F;显存占用巨大的问题——尤其是卷积层之后的第一个全连接层，因输入输出的维度都巨大，参数的数量也巨大。</p><p>为了改善存储占用的问题，NiN网络中使用了使用NiN块与GAP层。</p><ul><li>NiN块中使用了1$\times$1的卷积层，相当于通道维度的全连接层，不仅可以减少参数量，而且可以减少过拟合</li><li>Global Average Pooling （GAP）层被用来代替全连接层，减少了存储的参数的数量</li></ul><p><img src="/images/2025/NiN.drawio.svg" alt="NiN.drawio"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="4-含并⾏连结的⽹络（GoogLeNet）"><a href="#4-含并⾏连结的⽹络（GoogLeNet）" class="headerlink" title="4 含并⾏连结的⽹络（GoogLeNet）"></a>4 含并⾏连结的⽹络（GoogLeNet）</h2><p>有了NiN之后，我们有了控制网络总参数量的工具。由此，我们可以构建更深、更复杂的网络。</p><p>GoogLeNet的想法很自然：</p><ul><li>在我们构建了足够强大的线形网络之后，我们也可以构建一些并行的有分支的网络</li><li>在纠结要用哪一种卷积参数的时候，我们可以选择全都要</li></ul><p>GoogLeNet也借鉴了NiN网络：</p><ul><li>使用了1$\times$1的卷积网络降维通道</li><li>使用GAP层，代替全连接层</li><li>在深度的维度上拼接，实现了并行输出的整合</li></ul><p>首先定义了一个Inception块</p><p><img src="/images/2025/Inception.drawio.svg" alt="Inception.drawio"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>其中白底的仅仅是用于调整深度，深紫底的才是实际提取特征的层。</p><p>由此可以构建出GoogLeNet</p><p>#<img src="/images/2025/GoogLeNet.drawio.svg" alt="GoogLeNet.drawio"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="5-残差网络（ResNet）"><a href="#5-残差网络（ResNet）" class="headerlink" title="5 残差网络（ResNet）"></a>5 残差网络（ResNet）</h2><ul><li>超深神经网络存在两大挑战：<ol><li>参数量庞大，计算和存储开销大。</li><li>深度增加导致梯度消失&#x2F;梯度爆炸，训练困难。</li></ol></li></ul><p>前者在前面的模型中已经解决，后者ResNet可以解决。</p><p>ResNet的核心思想如下：</p><ol><li>更复杂的网络应包含原有的更简单网络，保证性能至少不劣于浅层网络。</li><li>引入残差函数 $F(x) &#x3D; f(x) - x$，将学习目标改写为：$f(x) &#x3D; F(x) + x$</li></ol><p>残差函数的作用主要想概括为以下两点：</p><ol><li><p>保证“性能不劣于浅层网络”</p><ul><li>当 $F(x) &#x3D; 0$ 时，网络输出即退化为恒等映射 $y &#x3D; x$</li><li>网络可以在恒等映射附近开始学习，使训练更容易</li><li>如果$F(x)$对于结果不好，那$F(x)$拿不到梯度，还是在0附近</li></ul></li><li><p>梯度传递优势</p><ul><li>前向传播时，恒等映射提供了直接捷径</li><li>反向传播时，梯度可以沿 $+x$ 这条捷径无衰减地传回，缓解梯度消失问题</li></ul></li></ol><p>ResNet最大的挑战是：相加的时候捷径的形状不同。</p><ol><li><p>通道数量不同</p><p>通过增加$1\times1$卷积层来控制通道数</p></li><li><p>维度不同</p><p>通过卷积核为1，有stride的卷积层来控制维度</p></li></ol><p>ResNet基本结构的图示如下：</p><p><img src="/images/2025/ResNet.drawio.svg" alt="ResNet.drawio"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="6-稠密连接网络（DenseNet）"><a href="#6-稠密连接网络（DenseNet）" class="headerlink" title="6 稠密连接网络（DenseNet）"></a>6 稠密连接网络（DenseNet）</h2><p>DenseNet 继承了ResNet的思想，将其进一步发展。</p><p>如果说ResNet是泰勒展开的一阶近似，那DenseNet就是高阶近似。DenseNet讲更多的过往的层传到现在的结果。</p><p>DenseNet主要由两种块构成：</p><ul><li><p>稠密块</p><p>大量旁路，为了将这么多结果整合在一起，DenseNet像GoogLeNet一样，在通道维度把结果拼接起来。</p></li><li><p>过渡块</p><p>经过稠密块后通道数巨大，因此使用$1\times1$卷积层减小通道数，使用平均汇聚层减小维数。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CNN发展总结&quot;&gt;&lt;a href=&quot;#CNN发展总结&quot; class=&quot;headerlink&quot; title=&quot;CNN发展总结&quot;&gt;&lt;/a&gt;CNN发展总结&lt;/h1&gt;&lt;p&gt;正在学习李沐老师的d2l课程，梳理一下提到的几个标志性的CNN的逻辑以及发展的逻辑。&lt;/p&gt;
&lt;h2</summary>
      
    
    
    
    <category term="学习笔记/Notes" scheme="https://ryanstarfox.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Notes/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="学习笔记/Notes" scheme="https://ryanstarfox.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Notes/"/>
    
  </entry>
  
  <entry>
    <title>影评：《南京照相馆》</title>
    <link href="https://ryanstarfox.github.io/2025/08/03/2025/20250803%20%E5%8D%97%E4%BA%AC%E7%85%A7%E7%9B%B8%E9%A6%86/"/>
    <id>https://ryanstarfox.github.io/2025/08/03/2025/20250803%20%E5%8D%97%E4%BA%AC%E7%85%A7%E7%9B%B8%E9%A6%86/</id>
    <published>2025-08-02T18:19:05.000Z</published>
    <updated>2025-08-02T18:19:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="按下快门，扣下扳机"><a href="#按下快门，扣下扳机" class="headerlink" title="按下快门，扣下扳机"></a>按下快门，扣下扳机</h1><p>第一次发现按下快门和扣下扳机这么像。打开机身，打开枪膛；放入胶片，塞进子弹；按下快门，扣下扳机：前者定格世界，后者定格生命——都是永恒，不过前者创造，后者湮灭。</p><p>影片的开头就用这一段蒙太奇展示了两者的相似性，伊藤秀夫拍下杀人的照片，日军新兵杀人。伊藤秀夫眼中似乎有同情与震撼，甚至还“救”了阿昌——他叫阿昌“朋友”，给阿昌报名表通行证，看似同情中国的动摇者、庇护中国人的善人——影片开头似乎在用尽方法欺骗说服观众：伊藤秀夫是好人。伪善的伏笔暗藏其中：梦想是继承参加甲午战争的爷爷攻入中国、通行证上面的“有效期两日”。或许他有过人性中朴素的对恶行的排斥与对自己所做的动摇，我不认为他毫无人性，但军国主义将他洗脑让他罔顾人性的忠告，他从未正视人性与自己所做所为的矛盾，陷入阿伦特所说的“无思”的状态。</p><p>照相馆是一个很巧妙的切入点，在这个特殊的时候，照片的媒介必须通过照相馆才能刊出，主角一行也由此看到了真实的、血淋淋的南京。但更加令人触目的是，照片里的不是一群陌生人，而是一群街坊邻居。昨日身边活生生的人，成了今日照片里惨死的人，让人感到倒吸凉气但又愤怒——老金说：“我们不能当汉奸。”于是这一行人里，没有一个汉奸， 林毓秀和小孩活了下来，传出了照片；老金妻女死得意外，且因死亡毫无意义，更加令人扼腕愤怒；老金与阿昌用自己的方式，物理、精神上都算是出了口恶气；宋存义用自己的生命换来了其他人的活命，用南京城墙砸死了日本人。只有汉奸死得像狗一样。</p><p>《鬼子来了》中，日本军队在影片开头给小孩糖，在最后杀光了小孩。伊藤秀夫一开始给了阿昌生存——连给生存的权利竟然都能算是恩赐了，甚至或许真的对于阿昌产生了一种近似友谊的情感。但是在长官的催促下，在他自己的军国主义思想下，他拒绝了人性，并且要用杀死阿昌来彻底斩断自己的人性。可怜老金至死也不知道自己的妻女已经死了。伊藤秀夫最后冲进照相馆的时候依然在撒谎：“我当你是朋友。”无牵挂无生路的阿昌说实话：“我们不是朋友。”一句“中日亲善”贯穿始终。</p><p>一般来说，我不爱看主旋律抗战片——反而是被一些手撕鬼子的无端滑稽和强行升华的价值观消磨掉了忍耐力。好的电影想要传达它的情感与价值不需要直白地喊出来，而是让观众自己滑向那种情感，自己解读自己的价值。南京照相馆最后的煽情使用了大量蒙太奇——照片本身就是很好的蒙太奇的桥梁。老金换进伊藤秀夫胶卷的南京市民日常胶卷和南京市民被杀的镜头不断切换，普通生活的美好以这样一种方式在观众眼前被撕碎。日常胶卷掺杂在屠杀胶卷里，伊藤秀夫看后暴怒——<strong>被撕碎的美好用这样一种方式完成了自杀式的反击</strong>，杀死了伊藤秀夫。伊藤秀夫曾说：“支那人的照片不重要。”支那人的照片杀死了他，他自己的照片杀死了日本军官。</p><p>《辛德勒的名单》中，德国军官曾试图枪杀犹太人，扣下扳机之后几次发现枪坏了，最终不杀了，最终他也类似地像个玩具一样被杀死。同样是报应，胜利后，还是在南京，曾经草菅人命的日本军官在同一个地方被枪毙，同样是快门和扳机，这次照片和子弹成功相遇了。</p><p>片尾曲，昔日的南京照片放到今日同样的地方，如今国泰民安，不见昔日日寇，只见车水马龙，感慨万分。</p><p>也在想，这部电影有可能出海嘛？电影本身质量不低，《辛德勒的名单》、《拯救大兵瑞恩》甚至《壮志凌云》都能够在国际上享有自己的话语权，那《南京照相馆》有可能嘛？</p><p>看完电影，骑车回家，下大暴雨了，淋了一身湿——也好久没有淋过雨了。上海在下雨，南京也在下雨吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;按下快门，扣下扳机&quot;&gt;&lt;a href=&quot;#按下快门，扣下扳机&quot; class=&quot;headerlink&quot; title=&quot;按下快门，扣下扳机&quot;&gt;&lt;/a&gt;按下快门，扣下扳机&lt;/h1&gt;&lt;p&gt;第一次发现按下快门和扣下扳机这么像。打开机身，打开枪膛；放入胶片，塞进子弹；按下快门</summary>
      
    
    
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/categories/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="豆瓣/Douban" scheme="https://ryanstarfox.github.io/tags/%E8%B1%86%E7%93%A3-Douban/"/>
    
  </entry>
  
  <entry>
    <title>在新国立做的梦</title>
    <link href="https://ryanstarfox.github.io/2025/07/28/2025/20250718%20%E6%96%B0%E5%8A%A0%E5%9D%A1/"/>
    <id>https://ryanstarfox.github.io/2025/07/28/2025/20250718%20%E6%96%B0%E5%8A%A0%E5%9D%A1/</id>
    <published>2025-07-28T13:30:00.000Z</published>
    <updated>2025-07-28T13:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在新国立做的梦"><a href="#在新国立做的梦" class="headerlink" title="在新国立做的梦"></a>在新国立做的梦</h1><p>6&#x2F;28晚上，我抵达新加坡国立大学，开始近一个月的暑期项目。现在我坐在uTown，不知道应该做什么。项目在今天下午完成了最后的展示，只要明天轮流坐在摊位前介绍就行了。展示之后，我不知道去哪里，想了想，还是来了uTown，一方面自己不习惯一直待在寝室里；另一方面其实是想吃潮州猪脚锅，吃一些猪肉。</p><p>我仍旧坐在Education Resources Center的那个靠近且面对大草坪的位置，但是今天却不知道该做些什么。天气还是很好，很多毕业生穿着学士服在拍毕业照，草地上几只小狗在玩闹，我旁边的一只哈士奇被大爷牵着也在朝那里看——这只哈士奇每天都来。我非常喜欢这里的云，这里的云是立体的，饱满的，竟让我感觉和西藏的云有点像，甚至同样都很低。云飘得很快，天渐渐暗下来，云变成橙色和黄色的了。我去Fine Food吃我心心念念的猪脚锅了。</p><p><img src="/images/2025/IMG_0616.jpeg" alt="IMG_0616"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>我突然间意识到，这可能是我最后一次来uTown了，也可能是最后一次在uTown看夕阳了。我不知所措，是因为已经意识到这段旅程即将结束，我无法暂停时间，因而只想郑重地点上一个句点——这也让我猛然感到，应该写点东西了。</p><p><img src="/images/2025/IMG_0111.JPG" alt="IMG_0111"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>这是7年前的照片了</p><p>新加坡，我第一次来这里是7年之前。那个时候疫情尚未来临，父母还未离婚，经济仍然向好。那段旅程让我不敢忘记，因此我开始写日记，从2018年8月1日，也就是第一天从上海出发抵达新加坡的那一天开始。当时正好赶上了新加坡国庆，看到各种奇怪的飞机飞来飞去，回去的时候在樟宜机场一开始不愿四处逛，临走前又发现来不及去看看仙人掌馆。鸭子船、花穹、云雾岭、夜间动物园……我现在还能记起的似乎也只有这些毫无意义但是充满情感的碎片了——日记就是让我更加放心地遗忘吧。</p><p><img src="/images/2025/55FA7549-F5A0-4CCA-9A73-EE9EA89ED88D_1_105_c.jpeg" alt="55FA7549-F5A0-4CCA-9A73-EE9EA89ED88D_1_105_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>这次出发前，还在做歌手大赛的那段时间，我就经常梦见自己来到新国立——梦中的新国立有一个类似上中的校门，门口就是地铁站和酒吧——我很向往，但是我不敢抱太高的期望，我担心仍是和一群没什么想法的理工男打交道。</p><p>新加坡的气候很好，几乎只有上午下过雨——那时候我还在睡觉，下午也没那么热，晚上开空调会冷——难怪这里有很多挂着大吊扇的开放空间。我十分羡慕新加坡的一点在于新加坡是能够在大楼里面种树的——花园城市名副其实。这里实际上碰到华人面孔都可以说中文——即使用蹩脚的Chinglish问，回答也很有可能是中文。新加坡真的很宜居，很想以后时不时来这里旅居。</p><p>在这里也趁空闲时间看了一些电影，包括飞机上看的《天堂电影院》、周末看的《卧虎藏龙》、《勇敢的心》、《低俗小说》、回家候机时看的《国产凌凌漆》，还看完了《混沌武士》。回想起来《混沌武士》中的三人和nus项目的小组很像——莫名甚至是非常虚的原因聚在一起，在晴朗的日子走了许多路，在皆大欢喜的结局后各自成长分别。闲时间做的最重要的事把《地频线》的决赛录像的录音提取了出来，做成了专辑自己听。于我，新加坡也有了《地频线》的影子。</p><p><img src="/images/2025/IMG_0874.jpeg" alt="IMG_0874"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>我们的课程最终是需要分成小组来做project的模式。我们组基本上是大佬带飞的状态。最开始的时候，我称他们为组员，但是到了最后，我觉得可以称为朋友了——比我预想的好很多，他们目之所及不止眼前的电脑，而是有着对于世界的个人理解。我们一起做project，一起吃饭，一起去市区，一起看电影，一起庆祝一位的生日，甚至一起做了一件疯狂的事——新加坡骑行一圈60公里——骑到东海岸的路不太好骑，常常被红灯阻挠，但是一到东海岸就变得非常顺畅舒适——海边的音乐、椰子树的剪影、海滩黄昏与混杂着咸味和烧烤味的海风让我想起我小时候去普吉岛，也是热带的海滩的日落，海边的果树挂满了青色的芒果。樟宜机场来来往往的飞机从我们头顶飞过，时不时飞过一些为了国庆训练的军机。与其中一位有摩擦，但同样也碰到了只去相投的朋友。感觉在这里我彻底改去了对于电院全是没有想法的nerd的固有印象——其实还是有很多人闪烁着思想的光芒，他们不仅着眼于眼前的技术，也看见技术背后的目的。他们的技术观和世界观、人生观相互支撑，也已经到达相当深入的鲜有人涉足的地方了。其间，我意识到一个有趣的现象：其实有几位我甚至会把他们投射到一些故人上去——气质很像，样貌很像，但是又确确实实不是同一个人。</p><p><img src="/images/2025/IMG_0693.jpeg" alt="IMG_0693"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>当然，我也故地重游。我到新加坡的第二天就去了滨海湾。一切如故，但人变了，世界也变了。让我想起《星际牛仔》里Faye见到夕阳下的鱼尾狮，向着家的方向跑去，但是只见断壁颓垣和那一首《Call me Call me》。云雾林和花穹也还是和原来差不多。云雾岭最近好像在和侏罗纪公园合作，可能是为最近的电影做宣发吧。我小时候在花穹的照片作为个人照，在很多地方使用过——荣誉册、精选PPT，我在同样的位置又拍了一张，但是现在那里全都是玫瑰而不是以前的黄橙色的花儿。曾经的我淹没在花丛中，但是现在花丛却是在脚边。到圣淘沙的时候正好夕阳西下，为了看夕阳，并没有去小时去过的亚洲最南端——不知道现在那里是不是还是那些栈道。我往西走，踩着柔软的沙子，看着紫红色的天水交接之处和停泊在岸边的货轮。</p><p><img src="/images/2025/IMG_0593.jpeg" alt="IMG_0593"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>算是认真、郑重的画了个句号吧。天色已经完全暗下来，uTown优雅的灯光亮起来了。不知以后是否还有缘再来NUS，至于新加坡，想必以后常会再来吧？</p><p><img src="/images/2025/IMG_0881.jpeg" alt="IMG_0881"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;在新国立做的梦&quot;&gt;&lt;a href=&quot;#在新国立做的梦&quot; class=&quot;headerlink&quot; title=&quot;在新国立做的梦&quot;&gt;&lt;/a&gt;在新国立做的梦&lt;/h1&gt;&lt;p&gt;6&amp;#x2F;28晚上，我抵达新加坡国立大学，开始近一个月的暑期项目。现在我坐在uTown，不知道应</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="旅行/Travel" scheme="https://ryanstarfox.github.io/tags/%E6%97%85%E8%A1%8C-Travel/"/>
    
  </entry>
  
  <entry>
    <title>计算机系统结构整理</title>
    <link href="https://ryanstarfox.github.io/2025/06/20/2025/20250620%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    <id>https://ryanstarfox.github.io/2025/06/20/2025/20250620%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/</id>
    <published>2025-06-20T02:17:00.000Z</published>
    <updated>2025-06-20T02:17:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Fundamentals-of-Computer-Science"><a href="#1-Fundamentals-of-Computer-Science" class="headerlink" title="1 Fundamentals of Computer Science"></a>1 Fundamentals of Computer Science</h2><h3 id="1-1-Introduction"><a href="#1-1-Introduction" class="headerlink" title="1.1 Introduction"></a>1.1 Introduction</h3><p>How to make computers faster?</p><ul><li>increase clock rate</li><li>increase logic density</li></ul><h3 id="1-2-Classes-of-Computers"><a href="#1-2-Classes-of-Computers" class="headerlink" title="1.2 Classes of Computers"></a>1.2 Classes of Computers</h3><p>Computer categories:</p><ul><li>Personal Mobile Device<ul><li>Wireless</li><li>Energy efficiency important<ul><li>battery</li><li>no fan</li></ul></li><li>Flash memory instead of disks<ul><li>enery efficiency</li><li>size limit</li></ul></li><li>Responsiveness&#x2F;real-time performance<ul><li>hard real-time</li><li>soft real-time</li></ul></li></ul></li><li>Desktop Computing<ul><li>price</li><li>performance<ul><li>compute</li><li>graphic</li></ul></li></ul></li><li>Servers<ul><li>availability</li><li>scalability</li><li>energy</li></ul></li><li>Clusters&#x2F;Warehouse Scale Computers<ul><li>expensive</li><li>software as a service (SaaS)</li></ul></li><li>Embedded Computers<ul><li>Application-specific</li><li>can be 8-, 16-, 32-bit</li></ul></li></ul><p>2 kinds of parallelism:</p><ul><li><p>data-level parallelism (DLP) &gt; thread-level parallelism (TLP)</p><ul><li>Instruction-Level parallelism (eg. pipelining)</li><li>Vector architecture &#x2F; Graphic Processor Units</li><li>Multi-core (TLP)</li><li>Clusters (Request-level parallelism $\in$ TSP)</li></ul></li></ul><p>Flynn’s Taxonmy</p><table><thead><tr><th align="center"></th><th align="center">Single Data Stream</th><th align="center">Multiple Data Stream</th></tr></thead><tbody><tr><td align="center">Single Intruction Stream</td><td align="center">SISD<br />Simplest</td><td align="center">SIMD<br />Vector Architectures &#x2F; GPU</td></tr><tr><td align="center">Multiple Intructin Stream</td><td align="center">MISD<br />No Commercial Implementation</td><td align="center">MIMD<br />Tightly&#x2F;Loosely-coupled MIMD</td></tr></tbody></table><h3 id="1-3-Defining-Computer-Architecture"><a href="#1-3-Defining-Computer-Architecture" class="headerlink" title="1.3 Defining Computer Architecture"></a>1.3 Defining Computer Architecture</h3><ul><li>ISA: Instruction Set Architecture</li><li>Addressing Modes</li><li>Microarchitecture</li></ul><h3 id="1-4-Trends-in-Technology"><a href="#1-4-Trends-in-Technology" class="headerlink" title="1.4 Trends in Technology"></a>1.4 Trends in Technology</h3><p>5 critical implememtation techs</p><ul><li>Integrated circuit logic technology</li><li>Semiconductor DRAM</li><li>Semiconductor Flash</li><li>Magnetic disk tecknology</li><li>Network technology</li></ul><p>ENIAC(decimal, vacuum tubes)-&gt;transisters-&gt;Microelectronics</p><p>Two Metrics: Bandwidth &amp; Latency (former outpaces latter)</p><h3 id="1-5-Trends-in-Power-and-Energy-in-ICs"><a href="#1-5-Trends-in-Power-and-Energy-in-ICs" class="headerlink" title="1.5 Trends in Power and Energy in ICs"></a>1.5 Trends in Power and Energy in ICs</h3><p>contradiction between power and energy: get power in, get power and heat out</p><ul><li><p>Thermal design power (TDP)</p></li><li><p>Clock rate</p></li><li><p>Dynamic power&#x2F;energy (trans from 0 to 1)–voltage is key</p><p>to reduce:</p><ul><li>Turn off clock of inactive modules</li><li>Dynamic voltage-frequency</li><li>Low power state for DRAM and disks</li><li>Turn off a few cores</li></ul></li><li><p>Static power: leakage current flows</p></li></ul><h3 id="1-6-Trends-in-Cost"><a href="#1-6-Trends-in-Cost" class="headerlink" title="1.6 Trends in Cost"></a>1.6 Trends in Cost</h3><p>IC Cost &#x3D; (Die Cost + Testing Cost + Packaging Cost)&#x2F;Finaltest yield</p><p>Die Cost &#x3D; Wafer cost &#x2F; (Die per Wafer $\times$ Die Yield)</p><h3 id="1-7-Dependability"><a href="#1-7-Dependability" class="headerlink" title="1.7 Dependability"></a>1.7 Dependability</h3><p>MTTF (mean time to failure)</p><p>MTTR (mean time to repair)</p><p>MTBF (mean time between failures &#x3D; MTTF+MTTR)</p><p>Satisfy Poisson Distribution</p><p>If serial, total <strong>MTTF &#x3D; ($\sum$ MTTF$_i^{-1}$)$^{-1}$</strong></p><h3 id="1-8-Measuring-Performance"><a href="#1-8-Measuring-Performance" class="headerlink" title="1.8 Measuring Performance"></a>1.8 Measuring Performance</h3><p>Benchmark Suit: A collection of benchmark programs</p><p>SPEC: Standard Performance Evaluation Corporation</p><h3 id="1-9-Quantitative-Principles"><a href="#1-9-Quantitative-Principles" class="headerlink" title="1.9 Quantitative Principles"></a>1.9 Quantitative Principles</h3><ul><li><p>Take advantage of parallelism</p><ul><li>Data level parallelism and task level parallelism</li><li>Pipelining, set-associative caches</li><li>Multicore, multiprocessor, vector</li></ul></li><li><p>Principle of locality</p><ul><li>reuse recently used data and instructions</li><li>Temporal locality and spatial locality</li></ul></li><li><p>Focus on common use</p></li></ul><p><strong>Amdahl’s Law:</strong></p><ul><li>$Execution\ time_{new} &#x3D; Execution\ time_{old} × (1 - Fraction_{enhanced}) + \dfrac{Fraction_{enhanced}}{ Speedup_{enhanced}}$</li><li>$Speedup_{overall}&#x3D; \dfrac{Execution\ time_{old}}  {Execution\ time_{new}} &#x3D; \dfrac1 { ((1 - Fraction_{enhanced}) + \dfrac{Fraction_{enhanced}}{ Speedup_{enhanced}}}$</li></ul><p>Three factors for processor improvement:</p><ul><li>Clock Cycle</li><li>Cycles per Instruction (CPI)</li><li>Instruction Count (IC)</li></ul><p>CPU clock cycles &#x3D; $\sum$IC<del>i</del>$\times$CPI<del>i</del></p><p>CPU time &#x3D; ($\sum$IC<del>i</del>$\times$CPI<del>i</del>)$\times$Clock cycle time</p><h2 id="2-ISA"><a href="#2-ISA" class="headerlink" title="2 ISA"></a>2 ISA</h2><h3 id="MIPS-RISC"><a href="#MIPS-RISC" class="headerlink" title="MIPS (RISC)"></a>MIPS (RISC)</h3><table><thead><tr><th align="center">op</th><th align="center">rs</th><th align="center">rt</th><th align="center">rd</th><th align="center">shamt</th><th align="center">funct</th></tr></thead></table><table><thead><tr><th align="center">name</th><th align="center">length(bits)</th><th align="center">function</th></tr></thead><tbody><tr><td align="center">op</td><td align="center">6</td><td align="center">opcode that specifies the operation</td></tr><tr><td align="center">rs</td><td align="center">5</td><td align="center">register file address of the first source operand</td></tr><tr><td align="center">rt</td><td align="center">5</td><td align="center">register file address of the second source operand</td></tr><tr><td align="center">rd</td><td align="center">5</td><td align="center">register file address of the result’s destination</td></tr><tr><td align="center">shamt</td><td align="center">5</td><td align="center">shift amount (for shift instructions)</td></tr><tr><td align="center">funct</td><td align="center">6</td><td align="center">function code augmenting the opcode</td></tr></tbody></table><p>3 instruction formats:</p><p>R format</p><table><thead><tr><th align="center">op(6)</th><th align="center">rs (5)</th><th align="center">rt (5)</th><th align="center">rd (5)</th><th align="center">shamt (5)</th><th align="center">funct (6)</th></tr></thead></table><p>I format</p><table><thead><tr><th align="center">op (6)</th><th align="center">rs (5)</th><th align="center">rt (5)</th><th align="center">immediate (16)</th></tr></thead></table><p>J format</p><table><thead><tr><th align="center">op (5)</th><th align="center">jump target (27)</th></tr></thead></table><table><thead><tr><th align="center">Name</th><th align="center">Register Number</th><th align="center">Usage</th></tr></thead><tbody><tr><td align="center">$zero</td><td align="center">0</td><td align="center">constant 0 (hardware)</td></tr><tr><td align="center">$at</td><td align="center">1</td><td align="center">reserved for assembler</td></tr><tr><td align="center">$v0 - $v1</td><td align="center">2-3</td><td align="center">returned values</td></tr><tr><td align="center">$a0 - $a3</td><td align="center">4-7</td><td align="center">arguments</td></tr><tr><td align="center">$t0 - $t7</td><td align="center">8-15</td><td align="center">temporaries</td></tr><tr><td align="center">$s0 - $s7</td><td align="center">16-23</td><td align="center">saved values</td></tr><tr><td align="center">$t8 - $t9</td><td align="center">24-25</td><td align="center">temporaries</td></tr><tr><td align="center">$k0-$k1</td><td align="center">26-28</td><td align="center">reserved for OS kernel</td></tr><tr><td align="center">$gp</td><td align="center">28</td><td align="center">global pointer</td></tr><tr><td align="center">$sp</td><td align="center">29</td><td align="center">stack pointer</td></tr><tr><td align="center">$fp</td><td align="center">30</td><td align="center">frame pointer</td></tr><tr><td align="center">$ra</td><td align="center">31</td><td align="center">return addr (hardware)</td></tr></tbody></table><p>Big endian (MIPS) （高位字节在低地址）vs little endian (8086)（高位字节在高地址）</p><p>Big and little endian are for the position of byte in a word</p><p>The order of the bits in a byte is fixed, regardless of big or small endian</p><p>some examples of MIPS commands</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">add $s3, $t0, $t1//$s3=$t0+$t1</span><br><span class="line">lw $t0, 1($s3)//$(s3+1)=$t0</span><br><span class="line">beq $t0, $t1, label//if $t0==$t1, execute label</span><br><span class="line">bne $t0, $t1, label//if $t0!=$t1, execute label</span><br><span class="line">slti $t0, $t1, immediate//if t1 &lt; immediate, t0=1</span><br><span class="line">sltiu $t0, $t1, $t2//if unsigned t1 &lt; unsigned t2, t0=1</span><br></pre></td></tr></table></figure><p>if jump is to far, assembler will insert an unconditional jump</p><h3 id="RISC-V"><a href="#RISC-V" class="headerlink" title="RISC-V"></a>RISC-V</h3><p>Open, simple, extendable</p><h2 id="3-Single-cycle-Processor"><a href="#3-Single-cycle-Processor" class="headerlink" title="3 Single-cycle Processor"></a>3 Single-cycle Processor</h2><p>4 stages:</p><ul><li>IF (instruction fetch)<ul><li>PC+&#x3D;4 in each cycle</li><li>for branch<ul><li>A PC Ext (signed) to add immediate to PC</li><li>A zero flag to determine whether to add immediate to PC</li></ul></li><li>for I-type: replace lower 28 bits of PC with the lower 26 bits of the fetched instruction shifted left by 2 bits</li></ul></li><li>Decode<ul><li>for R-type<ul><li>Generate a RegWr signal for Registers</li><li>Generate a ALUctr signal for Registers</li></ul></li><li>for I-type<ul><li>calculation, like ori<ul><li>Expand immediate from 16 bits to 32 bits (unsigned&#x2F;zero extension)</li><li>need a multiplexer, because in R-type write to Rd but in I-type write to Rt</li></ul></li><li>memory access, like lw &amp; sw<ul><li>Expand immediate from 16 bits to 32 bits (signed extension)</li></ul></li></ul></li><li>for J-type<ul><li>shift lower 26 bits of the fetched instruction by 2 bits (*4)</li></ul></li></ul></li><li>Execute</li><li>Memory</li><li>(Reister write) only lw</li></ul><p>Two Layers of Decoding: Main Control &amp; ALU Control</p><p>op $\Rightarrow$ other control signals</p><p>ALUop, func $\Rightarrow$ ALUctr</p><h2 id="4-Multi-cycle-Processor"><a href="#4-Multi-cycle-Processor" class="headerlink" title="4 Multi-cycle Processor"></a>4 Multi-cycle Processor</h2><p>硬件中添加5个编译器不能读取的寄存器</p><ul><li>A，B：读出的AB地址的数据</li><li>ALUout：临时存储ALUout的数据</li><li>IR (Instruction Register)：存储指令，有写控制信号——不是每个周期都会写</li><li>MDR （Memory Data Register)：存储内存的数据</li></ul><table><thead><tr><th align="center">Phase</th><th align="center">Instr Fetch</th><th align="center">Decode</th><th align="center">Execute</th><th align="center">Memory Access</th><th align="center">Write-back</th></tr></thead><tbody><tr><td align="center"><strong>R-type</strong></td><td align="center">IR &#x3D; Memory[PC];<code>&lt;br&gt;</code>PC &#x3D; PC + 4;</td><td align="center">A &#x3D; Reg[IR[25-21]];<code>&lt;br&gt;</code>B &#x3D; Reg[IR[20-16]];<code>&lt;br&gt;</code>ALUOut &#x3D; PC + (sign-extend(IR[15-0]) &lt;&lt; 2);</td><td align="center">ALUOut &#x3D; A op B;</td><td align="center">Reg[IR[15-11]] &#x3D; ALUOut;</td><td align="center">—</td></tr><tr><td align="center"><strong>Mem Ref</strong></td><td align="center">IR &#x3D; Memory[PC];<code>&lt;br&gt;</code>PC &#x3D; PC + 4;</td><td align="center">A &#x3D; Reg[IR[25-21]];<code>&lt;br&gt;</code>B &#x3D; Reg[IR[20-16]];<code>&lt;br&gt;</code>ALUOut &#x3D; PC + (sign-extend(IR[15-0]) &lt;&lt; 2);</td><td align="center">ALUOut &#x3D; A + sign-extend(IR[15-0]);</td><td align="center">MDR &#x3D; Memory[ALUOut];<code>&lt;br&gt;</code>or Memory[ALUOut] &#x3D; B;</td><td align="center">Reg[IR[20-16]] &#x3D; MDR;</td></tr><tr><td align="center"><strong>Branch</strong></td><td align="center">IR &#x3D; Memory[PC];<code>&lt;br&gt;</code>PC &#x3D; PC + 4;</td><td align="center">A &#x3D; Reg[IR[25-21]];<code>&lt;br&gt;</code>B &#x3D; Reg[IR[20-16]];<code>&lt;br&gt;</code>ALUOut &#x3D; PC + (sign-extend(IR[15-0]) &lt;&lt; 2);</td><td align="center">if (A &#x3D;&#x3D; B)<code>&lt;br&gt;</code>PC &#x3D; ALUOut;</td><td align="center">—</td><td align="center">—</td></tr><tr><td align="center"><strong>Jump</strong></td><td align="center">IR &#x3D; Memory[PC];<code>&lt;br&gt;</code>PC &#x3D; PC + 4;</td><td align="center">A &#x3D; Reg[IR[25-21]];<code>&lt;br&gt;</code>B &#x3D; Reg[IR[20-16]];<code>&lt;br&gt;</code>ALUOut &#x3D; PC + (sign-extend(IR[15-0]) &lt;&lt; 2);</td><td align="center">PC &#x3D; PC[31-28]|| (IR[25-0] &lt;&lt; 2);</td><td align="center">—</td><td align="center">—</td></tr></tbody></table><ul><li>在IF就执行PC&#x3D;PC+4是为了利用空闲的ALU</li><li>在Decode阶段是为所有可能做好准备。读取A，B是为了准备对A，B地址的数据进行操作；计算Branch Destination并存入ALUout是为可能的branch指令做准备。Decode阶段还会准备好Execute阶段对应的控制信号。</li><li>Execute阶段：<ul><li>R：计算正确的计算结果</li><li>LW&#x2F;SW：正确的地址覆盖掉ALUout（而不是之前算出来的Branch Destination)</li><li>Branch：比较A和B输出一个zero control signal，用于控制PCwrite；ALUout准备传输给PC</li><li>J：Jump Destination给PC</li></ul></li><li>Memory Access阶段：<ul><li>R：ALUout的值写入R[Rd]</li><li>SW：把B存入M[ALUout]，其中B是第二个阶段被更新，第三个阶段被同样的数据覆盖（因为IR没变），第四个阶段被用到</li><li>LW：把M[ALUout]存入MDR</li></ul></li><li>Writeback阶段：<ul><li>LW：MDR写入Reg[IR[20-16]]</li></ul></li></ul><p>控制信号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    Start([Start]) --&gt; IF[&lt;b&gt;1 InstrFetch&lt;/b&gt;&lt;br/&gt;IorD=0&lt;br/&gt;MemRead;IRWrite&lt;br/&gt;ALUSrcA=0&lt;br/&gt;ALUSrcB=1&lt;br/&gt;PCSource, ALUOp=00&lt;br/&gt;PCWrite]</span><br><span class="line">IF --&gt;Decode[&lt;b&gt;2 Decode&lt;/b&gt;&lt;br/&gt;ALUSrcA=0&lt;br/&gt;ALUSrcB=11&lt;br/&gt;ALUOp=00&lt;br/&gt;PCWriteCond=0]</span><br><span class="line"></span><br><span class="line">    Decode --&gt;|Op = lw or sw| ExecMem[&lt;b&gt;3 Execute lw/sw&lt;/b&gt;&lt;br/&gt;ALUSrcA=1&lt;br/&gt;ALUSrcB=10&lt;br/&gt;ALUOp=00&lt;br/&gt;PCWriteCond=0]</span><br><span class="line">    Decode --&gt;|Op = R-type| ExecR[&lt;b&gt;3 Execute R-type&lt;/b&gt;&lt;br/&gt;ALUSrcA=1&lt;br/&gt;ALUSrcB=00&lt;br/&gt;ALUOp=10&lt;br/&gt;PCWriteCond=0]</span><br><span class="line">    Decode --&gt;|Op = beq| ExecBeq[&lt;b&gt;3 Execute beq&lt;/b&gt;&lt;br/&gt;ALUSrcA=1&lt;br/&gt;ALUSrcB=00&lt;br/&gt;ALUOp=01&lt;br/&gt;PCSource=01]</span><br><span class="line">    Decode --&gt;|Op = j| Jump[&lt;b&gt;3 Jump&lt;/b&gt;&lt;br/&gt;PCSource=10&lt;br/&gt;PCWrite]</span><br><span class="line">  </span><br><span class="line">    ExecMem --&gt;|Op = lw| MemRead[&lt;b&gt;4 Memory Access lw&lt;/b&gt;&lt;br/&gt;MemRead&lt;br/&gt;IorD=1&lt;br/&gt;PCWriteCond=0]</span><br><span class="line">    ExecMem --&gt;|Op = sw| MemWrite[&lt;b&gt;4 Memory Access sw&lt;/b&gt;&lt;br/&gt;MemWrite&lt;br/&gt;IorD=1&lt;br/&gt;PCWriteCond=0]</span><br><span class="line">  </span><br><span class="line">    MemRead --&gt; WB[&lt;b&gt;5 Write Back lw&lt;/b&gt;&lt;br/&gt;RegWrite=1&lt;br/&gt;MemtoReg=1]</span><br><span class="line">    MemWrite --&gt; End((End))</span><br><span class="line">    WB --&gt; End</span><br><span class="line">  </span><br><span class="line">    ExecR --&gt; WriteR[&lt;b&gt;4 Memory Access R-type&lt;/b&gt;&lt;br/&gt;RegDst=1&lt;br/&gt;RegWrite=1&lt;br/&gt;MemtoReg=0&lt;br/&gt;PCWriteCond=0]</span><br><span class="line">    WriteR --&gt; End</span><br><span class="line">  </span><br><span class="line">    ExecBeq --&gt; End</span><br><span class="line">    Jump --&gt; End</span><br><span class="line">    End--&gt;Start</span><br></pre></td></tr></table></figure><p>CPI: Cycle per Instruction</p><h2 id="5-Pipelining"><a href="#5-Pipelining" class="headerlink" title="5 Pipelining"></a>5 Pipelining</h2><h3 id="5-1-Introduction-to-Pipelining"><a href="#5-1-Introduction-to-Pipelining" class="headerlink" title="5.1 Introduction to Pipelining"></a>5.1 Introduction to Pipelining</h3><p>Multiple instructions are being executed simultaneously</p><h3 id="5-2-How-Pipelining-is-Implemented"><a href="#5-2-How-Pipelining-is-Implemented" class="headerlink" title="5.2 How Pipelining is Implemented"></a>5.2 How Pipelining is Implemented</h3><p>在Single-cycle processor的基础上修改，分为5个阶段：IF, ID, EX, MEM, WB</p><p>在每两个阶段中间，加入超大Register，存储数据和ID阶段产生的Control Signal</p><p>Branch是在MEM阶段解决的</p><h3 id="5-3-Pipeline-hazards"><a href="#5-3-Pipeline-hazards" class="headerlink" title="5.3 Pipeline hazards"></a>5.3 Pipeline hazards</h3><ul><li><p>Structure hazard：不同指令在统一时间周期内需要访问同一个硬件资源</p><p>解决方法：</p><ul><li>给多个端口访问内存</li><li>Instruction Memory和Data Memory分离</li></ul></li><li><p>Data hazard：前一个指令还没完成对于Data的修改，后一个指令就已经读取了数据，ID阶段就需要检查</p><p>解决方法：</p><ul><li>Code Scheduling：不改变执行结果的情况下，让两条Data hazards的指令隔得远一点</li><li>Forwarding&#x2F;Bypassing：通过硬件，不待数据存回内存，就直接给到下一条指令，但是即便如此，lw后一个需要读寄存器的指令依旧会有Data hazard</li><li>Stalling：给一条空指令（Bubble）</li></ul></li><li><p>Control hazard：Branch影响了Instruction流</p><p>解决方法：</p><ul><li>把branch提前到ID之后，减少Bubble从2个变为1个</li><li>延迟分支和延迟槽：再增加一个无论都会执行的分支，包含两个延迟槽，填充原来两个bubble的位置</li><li>分支预测：预测（猜）下一个进入哪一个分支<ul><li>静态：总是跳转&#x2F;不跳转</li><li>动态：<ul><li>1位预测器：根据上一次的结果</li><li>2位预测器：00，01，10，11，跳转加1，不跳转减1，只有到00和11的时候，才会改变跳不跳转的状态</li><li>全局&#x2F;局部历史预测</li></ul></li><li>prediction correct就继续运行，错误则原来的预测直接flush掉，称为bubble，立即执行正确的</li></ul></li></ul></li></ul><h3 id="5-4-Exceptions"><a href="#5-4-Exceptions" class="headerlink" title="5.4 Exceptions"></a>5.4 Exceptions</h3><p>Also-called Interrupt&#x2F;Fault</p><p>situations where the normal execution order of instruction is changed, CPU may abort instructions in the pipeline</p><p>The most difficult exceptions have 2 properties:</p><ul><li>occur within instructions</li><li>restartable</li></ul><p>to save pipeline state:</p><ul><li>Force a trap instruction into the pipeline on the next IF</li><li>turn off all writes for all the instructions in the pipeline</li><li>After the exception-handling routine in the OS receives control, it immediately saves the PC of the faulting instruction</li></ul><p>two kinds of exceptions</p><ul><li>precise exceptions: 编译器知道哪条异常，它之前的执行完，后面的重新执行</li><li>imprecise exceptions：编译器不知道哪条异常</li></ul><table><thead><tr><th align="center">Pipeline stage</th><th align="center">Problem exceptions occurring</th></tr></thead><tbody><tr><td align="center">IF</td><td align="center">Page fault on instruction fetch; misaligned memory access; memory protection violation</td></tr><tr><td align="center">ID</td><td align="center">Undefined or illegal opcode</td></tr><tr><td align="center">EX</td><td align="center">Arithmetic exception</td></tr><tr><td align="center">MEM</td><td align="center">Page fault on data fetch; misaligned memory access; memory protection violation</td></tr><tr><td align="center">WB</td><td align="center">None</td></tr></tbody></table><h3 id="5-5-Handling-Multicycle-Operations"><a href="#5-5-Handling-Multicycle-Operations" class="headerlink" title="5.5 Handling Multicycle Operations"></a>5.5 Handling Multicycle Operations</h3><p>深pipeline</p><h2 id="6-Instruction-level-Parallelism"><a href="#6-Instruction-level-Parallelism" class="headerlink" title="6 Instruction-level Parallelism"></a>6 Instruction-level Parallelism</h2><h3 id="6-1-Concepts-and-Challenges"><a href="#6-1-Concepts-and-Challenges" class="headerlink" title="6.1 Concepts and Challenges"></a>6.1 Concepts and Challenges</h3><p>trying to minimize CPI</p><p>3 kinds of dependences:</p><ul><li><p>Data Dependences</p><p>指令的结果被另一条指令使用</p><ul><li>True Dependence: 一条指令产生的结果被后续指令使用</li><li>Anti-Dependence: 一条指令读取一个寄存器，而后续指令写入该寄存器</li><li>Output Dependence: 多条指令写入同一个寄存器</li></ul></li><li><p>Name Dependences</p><p>两条指令使用相同的寄存器或内存位置，但它们之间并没有真正的数据依赖，可以用寄存器重命名消除</p></li><li><p>Control Dependences</p><p>指令的执行依赖于控制流（如分支指令）的结果</p></li></ul><p>Data hazards:</p><ul><li>Read after write RAW</li><li>Write after write WAW</li><li>Write after read WAR</li></ul><h3 id="6-2-Basic-Compiler-Techniques"><a href="#6-2-Basic-Compiler-Techniques" class="headerlink" title="6.2 Basic Compiler Techniques"></a>6.2 Basic Compiler Techniques</h3><ol><li><p>Pipelining Stalls</p></li><li><p>Pipelining Scheduling</p></li><li><p>Loop Unrolling</p><p>减少跳转，让一个loop里面执行4个loop的内容</p><p>需要计算好余数</p></li></ol><h3 id="6-3-Reducing-Branch-Costs-with-Advanced-Branch-Prediction"><a href="#6-3-Reducing-Branch-Costs-with-Advanced-Branch-Prediction" class="headerlink" title="6.3 Reducing Branch Costs with Advanced Branch Prediction"></a>6.3 Reducing Branch Costs with Advanced Branch Prediction</h3><p>Control Speculation——if mis-speculated:</p><ul><li>Recovery Mechanism</li><li>Squash instructions on the incorrect path</li></ul><p>Branch Prediction: Dynamic &amp; Static: 见5.3Control hazards部分</p><h3 id="6-4-Overcoming-Data-Hazards-with-Dynamic-Scheduling"><a href="#6-4-Overcoming-Data-Hazards-with-Dynamic-Scheduling" class="headerlink" title="6.4 Overcoming Data Hazards with Dynamic Scheduling"></a>6.4 Overcoming Data Hazards with Dynamic Scheduling</h3><p>The ID stage is divided into two parts</p><ul><li>checking for any structural hazard</li><li>waiting for the absence of a data hazard</li></ul><p>为了进一步提高运行效率，重排指令执行顺序，减少data hazards，可以按序发射，乱序执行(in-order issue, out-of-order execution)</p><ol><li><p>list all WAR and WAW hazards</p></li><li><p>dynamic scheduling</p><ul><li><p>Advantages:</p><ul><li>Compiler doesn’t need to have knowledge of microarchitecture</li><li>Handle cases where dependencies are still unknown</li></ul></li><li><p>Disadvantages:</p><ul><li>More complex hardware</li><li>Complicates execptions</li></ul></li></ul></li></ol><h2 id="7-Memory-Hierarchy-Design"><a href="#7-Memory-Hierarchy-Design" class="headerlink" title="7 Memory Hierarchy Design"></a>7 Memory Hierarchy Design</h2><h3 id="7-1-Cache-Organization"><a href="#7-1-Cache-Organization" class="headerlink" title="7.1 Cache Organization"></a>7.1 Cache Organization</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">Regfile---ITLB</span><br><span class="line">Regfile---DTLB</span><br><span class="line">ITLB---InstrCache</span><br><span class="line">DTLB---DataCache</span><br><span class="line">InstrCache---SRAM[&quot;Second Level Cache (SRAM)&quot;]</span><br><span class="line">DataCache---SRAM</span><br><span class="line">SRAM---DRAM[&quot;Main Memory (DRAM)&quot;]</span><br><span class="line">DRAM---Disk[&quot;Secondary Memory (Disk)&quot;]</span><br></pre></td></tr></table></figure><p>Principle of Locality: Programs tend to reuse data and instructions near those they have used recently, or those were recently referenced themselves.</p><ul><li>Temporal locality: Recently referenced items are likely to be referenced in the near future.</li><li>Spatial locality: Items with nearby addresses tend to be referenced close together in time.</li></ul><p>一个block的结构：</p><table border="1" cellspacing="0" cellpadding="6" style="border-collapse: collapse; text-align: center;">  <tr>    <th colspan="2">Block address</th>    <th rowspan="2">Block<br>offset</th>  </tr>  <tr>    <td>Tag</td>    <td>Index</td>  </tr></table>对于一个Four-Way Set Associative Cache，先通过Index定位到一个包含4个Block的组，再通过tag来找到（或者找不到）正确的block，然后再通过Block Offset找到正确的byte<p>Bits per row &#x3D; Data Bits (Block Size in bits) +Tag Bits+Valid Bit</p><p>Cache大小的计算：如果一个32位block是22位tag，8位index，2位block offset，又是一个4-way cache，则：</p><ul><li>set的数量：2^8</li><li>每个set中block的数量：4&#x3D;2^2</li><li>每个block中Byte的数量：2^2</li></ul><p>所以总大小：2^8^$\times$2^2^$\times$2^2^B&#x3D;2^12^B&#x3D;4KB</p><p>如果出现Miss的情况，需要替换掉一个block，LRU&#x2F;FIFO&#x2F;Random</p><p>Write strategy：</p><ul><li>write through：每次都写进cache和memory</li><li>write back：每次写进cache，只有在替换block的时候写进memory</li></ul><p>Handling</p><ul><li>Cache Hits<ul><li>Read hits: Just read it !</li><li>Write hits<ul><li>require the cache and memory to be consistent<ul><li>write through</li><li>slow</li><li>can use a write buffer or stall when write buffer is full</li></ul></li><li>allow cache and memory to be inconsistent<ul><li>write back</li><li>need dirty bit to tell whether or not required to write back to memory</li><li>can use a write buffer when writing back</li></ul></li></ul></li></ul></li><li>Cache Misses<ul><li>Read Misses: block size增加，miss penalty也增加；miss一个word要从memory获得一整个block<ul><li>一收到block中的word，不等block完全上传完就执行</li><li>需要的word先传，再传block剩下的部分</li><li>非阻塞式cache：处理器在cache在处理先前miss的时候还可以继续获取cache中的内容</li></ul></li><li>Write Misses: 先把block加载到cache，再写</li></ul></li></ul><p><strong>CPU Time &#x3D; (CPU Execution Clock Cycles + Memory Stall Clock Cycles) $\times$ Cycle Time</strong></p><p>因此cache行为对CPU time影响很大</p><h3 id="7-2-Virtual-Memory"><a href="#7-2-Virtual-Memory" class="headerlink" title="7.2 Virtual Memory"></a>7.2 Virtual Memory</h3><p>Virtual page number + page offset -&gt; physical page number + page offset</p><p>因为实际上是在page table里面的physical page里查找哪一个page number和请求的(virtual) page number一致，所以很费时间（查找）</p><p>使用TLB来解决这个问题（这一部分仅仅是用来找数据所在的地址，不找数据本身，找数据本身见7.1）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">VPN[Virtual Page #]--&gt;|TLB hit|TLB[TLB]</span><br><span class="line">VPN--&gt;|TLB miss|PTR[&quot;Page Table&lt;br&gt;(Stored in physical memory)&quot;]</span><br><span class="line">TLB--&gt;Data[&quot;Data&lt;br&gt;in cache, memory or storage&quot;]</span><br><span class="line">PTR--&gt;Data</span><br><span class="line">VPN--&gt;|TLB miss and page fault|Data</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TLB, Page Table查到的地址对应的数据可能存在cache，memory，storage里面</p><table><thead><tr><th>TLB</th><th>Page Table</th><th>Cache</th><th>Possible? Under what circumstances?</th></tr></thead><tbody><tr><td>Hit</td><td>Hit</td><td>Hit</td><td>Yes – what we want!</td></tr><tr><td>Hit</td><td>Hit</td><td>Miss</td><td>Yes – although the page table is not checked if the TLB hits</td></tr><tr><td>Miss</td><td>Hit</td><td>Hit</td><td>Yes – TLB miss, PA in page table</td></tr><tr><td>Miss</td><td>Hit</td><td>Miss</td><td>Yes – TLB miss, PA in page table, but data not in cache</td></tr><tr><td>Miss</td><td>Miss</td><td>Miss</td><td>Yes – page fault</td></tr><tr><td>Hit</td><td>Miss</td><td>Miss&#x2F; Hit</td><td>Impossible – TLB translation not possible if page is not present in memory</td></tr><tr><td>Miss</td><td>Miss</td><td>Hit</td><td>Impossible – data not allowed in cache if page is not in memory</td></tr></tbody></table><h3 id="7-3-Six-Basic-Cache-Optimizations"><a href="#7-3-Six-Basic-Cache-Optimizations" class="headerlink" title="7.3 Six Basic Cache Optimizations"></a>7.3 Six Basic Cache Optimizations</h3><p>Average Memory Access Time &#x3D; Hit Time + Miss Rate $\times$ Miss Penalty</p><ol><li><p>Reducing the miss rate</p><p>Larger block size, larger cache size, higher associativity</p></li><li><p>Reducing the miss penalty</p><p>Multilevel caches, giving reads priority over writes</p></li><li><p>Reducing the time to hit in the cache</p><p>Avoiding address translation when indexing the cache</p></li></ol><p>Three Categories of Misses</p><ul><li><p>Compulsory</p><p>The very first access to a block cannot be in the cache</p></li><li><p>Capacity</p><p>If the cache cannot contain all the blocks needed during execution of a program, capacity misses occur</p></li><li><p>Conflict</p><p>In case of set associative and direct mapped, conflict misses occur. Different blocks mapped onto the same place</p></li></ul><p>Six Basic Cache Optimizations</p><table><thead><tr><th>方法 \ 影响</th><th>Compulsory Miss</th><th>Capacity Miss</th><th>Conflict Miss</th><th>Hit Time</th><th>Power Consumption</th><th>Miss Penalty</th></tr></thead><tbody><tr><td><strong>Larger block size</strong></td><td>⬇️</td><td>⬆️</td><td>⬆️</td><td>—</td><td>—</td><td>⬆️</td></tr><tr><td><strong>Larger total cache capacity</strong></td><td>—</td><td>⬇️</td><td>—</td><td>⬆️</td><td>⬆️</td><td>—</td></tr><tr><td><strong>Higher associativity</strong></td><td>—</td><td>—</td><td>⬇️</td><td>⬆️</td><td>⬆️</td><td>—</td></tr><tr><td><strong>Higher number of cache levels</strong></td><td>—</td><td>—</td><td>—</td><td>—</td><td>—</td><td>⬇️ (access time)</td></tr><tr><td><strong>Giving priority to read misses over writes</strong></td><td>—</td><td>—</td><td>—</td><td>—</td><td>—</td><td>⬇️</td></tr><tr><td><strong>Avoiding address translation in cache indexing</strong></td><td>—</td><td>—</td><td>—</td><td>⬇️</td><td>—</td><td>—</td></tr></tbody></table><ul><li><p>Higher associativity</p><p>more potential place to store data, thus reducing conflict misses</p></li><li><p>Giving priority to read misses over writes</p><p>Usually has a write buffer, so write can wait</p></li><li><p>Avoid address translations</p><p>让cache直接使用虚拟地址访问，省去翻译的步骤，但是也有问题：</p><ul><li>不同正在运行的进程的虚拟地址相互干扰</li><li>进程切换的时候，需要flush cache</li><li>不同的虚拟地址可能映射到同一个物理地址（alias&#x2F;synonym），写数据的时候可能导致数据不同步</li></ul><p>因此，折中一下，使用VIPT：Virtually Indexed, Physically Tagged</p><p>要求：一页只能映射到一个Cache Set</p><p>例如一个4-way的cache</p><ol><li>利用虚拟地址的低位部分（页内偏移），它包含了 cache 的 set index 和 block offset，所以可以立刻查 cache 的某一个set，把里面所有4个block的tag 提取出来</li><li>用VPN查找到了PPN，获得了物理地址的tag</li><li>对比两个tag，判断是否命中，命中就返回，未命中就Cache Miss，进一步访问memory</li></ol><p>Limits: Cache Size &#x3D; page size $\times$ associativity</p><table border="1" cellspacing="0" cellpadding="6" style="border-collapse: collapse; text-align: center;">    <tr>      <th>Virtual Page Number</th>      <th colspan="2">Page offset</th>    </tr>    <tr>      <td>Tag (Physical Page Number)</td>      <td>Index</td>      <td>Block offset</td>    </tr>  </table></li></ul><p><strong>cache size &#x3D; number of sets $\times$ associativity (number of block in a set) $\times$ block size &#x3D; 2^index^ ^bits^$\times$ N $\times$ 2^byte^ ^offset^ ^bits^</strong></p><p><strong>minimum page size &#x3D; cache size $\div$ associativity &#x3D; number of sets$\times$ block size &#x3D; 2^index^ ^bits^ $\times$ 2^byte^ ^offset^ ^bits^</strong></p><h3 id="7-4-Ten-Advanced-Optimizations-of-Cache-Performance"><a href="#7-4-Ten-Advanced-Optimizations-of-Cache-Performance" class="headerlink" title="7.4 Ten Advanced Optimizations of Cache Performance"></a>7.4 Ten Advanced Optimizations of Cache Performance</h3><ol><li><p>Small and simple first level caches</p></li><li><p>Way Prediction</p></li><li><p>Pipelining Cache</p></li><li><p>Nonblocking Caches (allow hits before previous misses complete)</p></li><li><p>Multibanked Caches (support simultaneous access)</p></li><li><p>Critical Word First, Early Restart</p><ul><li>critical word first: 先去请求关键字给CPU</li><li>early restart: 按顺序请求，一到关键字就不等读完立即给CPU</li></ul></li><li><p>Merging Write buffer: 如果要写入的字已经在write buffer里面了，直接更新write buffer</p></li><li><p>Compiler Optimizations: 例如矩阵的读取，从左右上下变为上下左右</p></li><li><p>Hardware Prefetching: utilizing memory bandwidth that otherwise would be unused</p></li><li><p>Compiler Prefetching: Insert prefetch instructions before data is needed (register&#x2F;cache)</p></li></ol><h3 id="7-5-Memory-Technology-and-Optimizations"><a href="#7-5-Memory-Technology-and-Optimizations" class="headerlink" title="7.5 Memory Technology and Optimizations"></a>7.5 Memory Technology and Optimizations</h3><p>performance merits: Latency &amp; Bandwidth</p><p>SRAM (mainly for cache) complex, costly</p><p>DRAM (mainly for memory) simple, cheaper than SRAM</p><p>Flash Memory: type of EEPROM</p><p>new trends: NVM(Non-Volatile Memory)</p><h2 id="8-Data-Level-Parallelism"><a href="#8-Data-Level-Parallelism" class="headerlink" title="8 Data-Level Parallelism"></a>8 Data-Level Parallelism</h2><h3 id="8-1-Introduction"><a href="#8-1-Introduction" class="headerlink" title="8.1 Introduction"></a>8.1 Introduction</h3><p>见1.2最后Flynn’s Classification</p><p>SISD，MISD(x)，SIMD，MIMD</p><p>SIMD advantages:</p><ul><li>exploit data-level parallelism</li><li>more energy efficient</li><li>more comfortable for programmers</li></ul><h3 id="8-2-Vector-Architecture"><a href="#8-2-Vector-Architecture" class="headerlink" title="8.2 Vector Architecture"></a>8.2 Vector Architecture</h3><p>basic idea:</p><ul><li>Read sets of data elements into “vector registers”</li><li>Operate on those registers</li><li>Disperse the results back into memory</li></ul><p>Architecture: VMIPS</p><ul><li>vector registers<ul><li>containing 64 elements, each elements have 64 bits</li><li>16 read ports and 8 write ports (read&#x2F;write an element at a time)</li></ul></li><li>Vector functional units<ul><li>Fully pipelined</li><li>Data and control hazards are detected</li></ul></li><li>Vector load-store unit<ul><li>Fully pipeline</li><li>One word per clock cycle after initial latency</li></ul></li><li>Scalar registers<ul><li>32 general-purpose registers</li><li>32 floating-point registers</li></ul></li></ul><p>for vector arithmetic execution</p><ul><li>use deeper pipeline</li><li>simplify control pf deep pipeline because elements in vector are independent and thus no hazards</li></ul><p>Execution time of a sequence of vector operations</p><p>depends on three factors:</p><ul><li>Length of operand vectors</li><li>Structural hazards</li><li>Data dependencies</li></ul><p>Use Vector Length Register (VLR) to control</p><p>the length of any vector operation, including a</p><p>vector load and store</p><p>Vector Mask Registers：选择哪些bit参与运算</p><p>most vector processors use memory banks to allow multiple independent accesses</p><h3 id="8-3-SIMD-Instruction-Set-Extension"><a href="#8-3-SIMD-Instruction-Set-Extension" class="headerlink" title="8.3 SIMD Instruction Set Extension"></a>8.3 SIMD Instruction Set Extension</h3><p>折中一下，Vector Architecture又贵又难造</p><p>用SIMD指令在普通结构的机器上达到近似Vector Machine 的效果</p><p>很多指令加上类似“.4D”，表示一次处理4个double类型的数据</p><h3 id="8-4-GPU-Graphic-Processing-Unit"><a href="#8-4-GPU-Graphic-Processing-Unit" class="headerlink" title="8.4 GPU (Graphic Processing Unit)"></a>8.4 GPU (Graphic Processing Unit)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">VG[Vertex Generation]--&gt;VP[Vertex Processing]</span><br><span class="line">VP--&gt;PG[Primitive Generation]</span><br><span class="line">PG--&gt;PP[Primitive Processing]</span><br><span class="line">PP--&gt;FG[Fragment Generation]</span><br><span class="line">FG--&gt;FP[Fragment Processing]</span><br><span class="line">FP--&gt;PO[Pixel Operations]</span><br></pre></td></tr></table></figure><p>CUDA （Compute Unified Device Architecture）<br>highly parallel</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">          Grid</span><br><span class="line">┌─────────────────────────────┐</span><br><span class="line">│    Block 0      Block 1     │ ← 一整个 Grid 中有多个 Block</span><br><span class="line">│  ┌──────────┐  ┌──────────┐ │</span><br><span class="line">│  │ Thread x │  │ Thread x │ │ ← 每个 Block 有多个 Thread</span><br><span class="line">│  │ Thread y │  │ Thread y │ │</span><br><span class="line">│  └──────────┘  └──────────┘ │</span><br><span class="line">└─────────────────────────────┘</span><br></pre></td></tr></table></figure><p>1个函数就是1个kernel，对应1个grid，grid之下有多个block，block之中有多个thread</p><p>block之间数据不共享，thread之间数据共享</p><p>block是调度单位，thread是运算单位，一般性一个block内最多1024个thread</p><p>例如：</p><p>一个函数，要把8192位数据取反，实际上这个函数就是一个kernel，对应到了一个grid，grid里可以分成8个block，每一个SM拿一个block去运行，每个SM（Streaming Multiprocessor）内部则是1024个线程同时运行</p><table><thead><tr><th align="center">Memory Type</th><th align="center">R&#x2F;W</th><th align="center">Work for</th><th align="center">Location</th><th align="center">Speed</th></tr></thead><tbody><tr><td align="center"><strong>Registers</strong></td><td align="center">RW</td><td align="center">per thread</td><td align="center">GPU registers</td><td align="center">🚀 Fastest</td></tr><tr><td align="center"><strong>Local Memory</strong></td><td align="center">RW</td><td align="center">per thread</td><td align="center">Global memory</td><td align="center">🐢 Slow <code>&lt;br&gt;</code>(stored in global memory)</td></tr><tr><td align="center"><strong>Shared Memory</strong></td><td align="center">RW</td><td align="center">per block</td><td align="center">On-chip (SM)</td><td align="center">⚡ Fast&#96;&#96;(low latency, manually managed)</td></tr><tr><td align="center"><strong>Global Memory</strong></td><td align="center">RW</td><td align="center">per grid</td><td align="center">Off-chip on GPU DRAM</td><td align="center">🐌 Slowest&#96;&#96;(high latency)</td></tr><tr><td align="center"><strong>Constant Memory</strong></td><td align="center">R</td><td align="center">per grid</td><td align="center">Off-chip on GPU DRAM&#96;&#96; (with read cache)</td><td align="center">⚡ Fast for broadcast&#96;&#96;(cached)</td></tr><tr><td align="center"><strong>Texture Memory</strong></td><td align="center">R</td><td align="center">per grid</td><td align="center">Off-chip on GPU DRAM&#96;&#96;(with texture cache)</td><td align="center">⚡ Fast&#96;&#96;optimized for spatial access</td></tr></tbody></table><p>这里的R指的是对于kernel来说R，可以通过CPU通过CUDA-API写入</p><p>每个kernel支持1，2，3维，可以选择启用几个维度</p><p>warp: SM指挥warp，一个warp一次可以执行32个线程。warp之内的线程是并行的，warp之间的运作类似round robin</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Fundamentals-of-Computer-Science&quot;&gt;&lt;a href=&quot;#1-Fundamentals-of-Computer-Science&quot; class=&quot;headerlink&quot; title=&quot;1 Fundamentals of Comput</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
  </entry>
  
  <entry>
    <title>计算机科学中的数学基础整理</title>
    <link href="https://ryanstarfox.github.io/2025/06/17/2025/20250617%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/"/>
    <id>https://ryanstarfox.github.io/2025/06/17/2025/20250617%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</id>
    <published>2025-06-17T05:42:00.000Z</published>
    <updated>2025-06-20T05:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Set-and-ordering"><a href="#1-Set-and-ordering" class="headerlink" title="1 Set and ordering"></a>1 Set and ordering</h2><h3 id="1-1-Sets-relations-and-functions"><a href="#1-1-Sets-relations-and-functions" class="headerlink" title="1.1 Sets, relations and functions"></a>1.1 Sets, relations and functions</h3><ul><li>计算：$A\cup B, A\cap B,A-B,\bar A, A\oplus B$<ul><li>“-”例子：${1,3,5}-{1,2,3}&#x3D;{5}$</li><li>“$\oplus$”对称差：类似于异或，$A\oplus B&#x3D;(A-B)\cup(B-A)$，$A\oplus B\oplus C &#x3D; \sum(A-B-C)+A\cap B\cap C$</li></ul></li><li>幂集 Power Set $P(S)&#x3D;{s|s\subseteq S}$</li><li>笛卡尔积 Cartesian Product: $A\times B&#x3D;{&lt;x,y&gt;|x\in A\wedge y\in B}$，是有序对！</li><li>关系是有序对的集合，有三种可能的性质<ul><li>反身性 Reflexive，if $(\forall a\in x)(aRa) $</li><li>对称性 Symmetric，if$( \forall a,b\in x)(aRb\rightarrow bRa)$</li><li>传递性 Transitive，if $(\forall a,b,c\in x)[(aRb\wedge bRa)\rightarrow aRc]$</li></ul></li><li>划分 Partition：$\pi$的一个划分是一个集合的集合$A$，$A$中的集合两两没有共同元素，$\pi$中所有元素可以在$A$的元素中找到</li><li>等价类 Equivalence class<ul><li>等价关系：满足自反性、对称性、传递性</li><li>商集$A&#x2F;R$把$A$根据关系$R$分类（事实上，R必须是等价关系）</li><li>等价类就是关于某一个等价关系$R$做商集运算</li><li>例：模6同余的等价关系</li></ul></li><li>函数 Function<ul><li>单射 injective: $x\ne y\rightarrow F(x)\ne F(y)$</li><li>满射 surjective: $ran\ F&#x3D;B$</li><li>一一映射&#x2F;双射 bijective function: 单射且满射</li></ul></li></ul><h3 id="1-2-Paradox-Cardinality"><a href="#1-2-Paradox-Cardinality" class="headerlink" title="1.2 Paradox &amp; Cardinality"></a>1.2 Paradox &amp; Cardinality</h3><ul><li><p>理发师悖论$\rightarrow$罗素提出没有一个包含所有集合的集合</p></li><li><p>集合大小相等（等势）：集合之间存在一一映射关系</p><ul><li><p>$\omega\times\omega\approx\omega$，$\omega$为最小的无限序数（自然数集）</p></li><li><p>$\omega\approx \mathbb Q$</p></li><li><p>$(0,1)\approx \R&#x3D;(n,m)&#x3D;(0,1]&#x3D;[0,1)&#x3D;[0,1]$</p><ul><li><p>proof for [0,1]&#x3D;[0,1):</p><p>$f(x)&#x3D;\begin{cases}x&amp;0\leq x&lt;1\wedge x\ne\dfrac1{2^n}\\dfrac1{2^{n+1}}&amp;x&#x3D;\dfrac1{2^n}\end{cases}$</p></li></ul></li><li><p>没有集合和自己的幂集等势</p></li></ul></li><li><p>无限集合大小的比较</p><ul><li>$A\preccurlyeq B\iff A与B的一个子集等势$</li><li>$A\preccurlyeq B\wedge B\preccurlyeq A\Rightarrow A\approx B$</li><li>$2^{\alef_0}\leq\alef_0\cdot2^{\alef_0}\leq2^{\alef_0}\cdot2^{\alef_0}&#x3D;2^{\alef_0}\ \therefore2^{\alef_0}\approx\alef_0\cdot2^{\alef_0}$</li></ul></li><li><p>可数集：有限或者与自然数集等势</p><ul><li>可数集的子集、并集、笛卡尔积都是可数集</li></ul></li></ul><h3 id="1-3-Orderings-序"><a href="#1-3-Orderings-序" class="headerlink" title="1.3 Orderings 序"></a>1.3 Orderings 序</h3><ul><li><p>偏序：偏序集</p><p>$$<br>(S,R)<br>$$</p><p>: $R$是集合$S$上的偏序关系</p></li><li><p>线性序：任意两个元素均可作比较</p></li><li><p>立即前元：直接的更小的元素，$x$是$y$的直接前元，$x\triangleleft y$</p><ul><li>$x\prec y$</li><li>$\neg(\exists z\in S)(x\prec z\prec y)$</li></ul></li><li><p>极大元、极小元、最大元、最小元</p></li><li><p>有限偏序必含极小（大）元</p></li><li><p>线性扩充定理：对有限偏序集$（S,\preccurlyeq)$，存在线性序集$(S,\preccurlyeq’)满足x\preccurlyeq y\to x\preccurlyeq’y$</p><p>一般地，线性扩充不唯一（类似对于哈斯图作拓扑排序）</p></li></ul><h3 id="1-4-Wide-or-Tall-Mirsky’s-theorem-and-Dilworth’s-theorem"><a href="#1-4-Wide-or-Tall-Mirsky’s-theorem-and-Dilworth’s-theorem" class="headerlink" title="1.4 Wide or Tall - Mirsky’s theorem and Dilworth’s theorem"></a>1.4 Wide or Tall - Mirsky’s theorem and Dilworth’s theorem</h3><ul><li><p>链（可比较元素的集合，高）：$\forall x,y\in A, x\preccurlyeq y或者y\preccurlyeq x$，特别地，$\omega(P)&#x3D;max{|A|:A是P上的链}$</p></li><li><p>反链（不可比较元素的集合，宽）：$\forall x\ne y\in A,x\cancel\preccurlyeq y$,也称独立集，特别地，$\alpha(P)&#x3D;max{|A|:A是P上的反链（独立集）}$</p></li><li><p>Mirsky’s theorem定理：最长链长度&#x3D;最小反链划分数</p><p>推论：$对于P&#x3D;(S,\preccurlyeq),\alpha(P)\cdot\omega(P)\geq |S|$</p><p>应用：</p><p>Erdös-Szekeres引理：任意含有$n^2+1$个元素的实数序列$（x_1,\cdots,x_{n^2+1})z$中都含有一个长度为$n+1$的单调子序列</p></li><li><p>Dilworth定理：最长反链长度&#x3D;最小链划分<br>$P为有限集，min{m:\exists\ chains C_1,C_2,\cdots,\ C_m\ with P &#x3D; \bigcup\limits_{i&#x3D;1}^m C_i}&#x3D;max{|A|:A\ is\ an\ anti-chain}$</p></li></ul><h2 id="2-Combinatorics"><a href="#2-Combinatorics" class="headerlink" title="2 Combinatorics"></a>2 Combinatorics</h2><h3 id="2-1-Combinatorial-Counting"><a href="#2-1-Combinatorial-Counting" class="headerlink" title="2.1 Combinatorial Counting"></a>2.1 Combinatorial Counting</h3><table><thead><tr><th align="center"><strong>balls per bin</strong></th><th align="center"><strong>unrestricted</strong></th><th align="center"><strong>≤1</strong></th><th align="center"><strong>≥1</strong></th></tr></thead><tbody><tr><td align="center">$n$ distinct balls <code>&lt;br&gt;</code>$m$ distinct bins</td><td align="center">$m^n$</td><td align="center">$(m)_n$</td><td align="center">$m!{\begin{smallmatrix}n\m\end{smallmatrix}}$</td></tr><tr><td align="center">$n$ identical balls&#96;&#96;$m$ distinct bins</td><td align="center">$\binom{n+m-1}{m-1}$</td><td align="center">$\binom mn$</td><td align="center">$\binom{n-1}{m-1}$</td></tr><tr><td align="center">$n$ distinct balls&#96;&#96;$m$ identical bin</td><td align="center">$\sum\limits_{k&#x3D;1}^m {\begin{smallmatrix}n\k\end{smallmatrix}}$</td><td align="center">$\begin{cases} 1 &amp; n\leq m\0&amp;n&gt;m\end{cases}$</td><td align="center">${\begin{smallmatrix}n\m\end{smallmatrix}}$</td></tr><tr><td align="center">$n$ identicql balls&#96;&#96;$m$ identical bins</td><td align="center">$\sum\limits_{k&#x3D;1}^mp_k(n)$</td><td align="center">$\begin{cases} 1 &amp; n\leq m\0&amp;n&gt;m\end{cases}$</td><td align="center">$p_m(n)$</td></tr></tbody></table><ul><li><p>$(m)_n&#x3D;\dfrac{m!}{(m-n)!}$</p></li><li><p>$\binom nk&#x3D;\dfrac{n!}{k!\cdot(n-k)!}$</p></li><li><p>$\binom{n-1}{k-1}+\binom{n-1}k&#x3D;\binom nk$</p><ul><li>$\sum\limits_{k&#x3D;0}^n\binom km&#x3D;\binom{n+1}{m+1}$</li><li>$\sum\limits_{k&#x3D;0}^n\binom{m+k-1}k&#x3D;\binom{n+m}n$</li><li>$\sum\limits_{i&#x3D;0}^n\binom ni^2&#x3D;\sum\limits_{i&#x3D;0}^n\binom ni\binom n{n-i}&#x3D;\binom{2n}n$</li><li>$\binom{m+n}r&#x3D;\sum\limits_{k&#x3D;0}^r\binom mk\binom n{r-k}$</li><li>$\binom{n_1+\cdots+n_p}m&#x3D;\sum\limits_{k_1+\cdots+k_p}\prod\limits_{i&#x3D;1}^p\binom{n_i}{k_i}$</li></ul></li><li><p>Binomial theorem:</p><p>$(1+x)^n&#x3D;\sum\limits_{k&#x3D;0}^n\binom nkx^k$</p><p>$if\ \left |x\right |&gt;\left | y\right |,\ (x+y)^r&#x3D;\sum\limits_{k&#x3D;0}^\infty\binom rk x^{r-k}y^k$</p></li><li><p>second Stirling Numbers</p><ul><li>The number of ways to partition a set of $n$ things into $k$ nonempty subsets</li><li>${\begin{smallmatrix}n\k\end{smallmatrix}}&#x3D;k{\begin{smallmatrix}n-1\k\end{smallmatrix}}+{\begin{smallmatrix}n-1\k-1\end{smallmatrix}}$，specifically, ${\begin{smallmatrix}n\2\end{smallmatrix}}&#x3D;2^{n-1}-1$</li></ul></li><li><p>Stirling cycle numbers (first Stirling Numbers)</p><ul><li>The number of ways to partition a set of $n$ things into $k$ nonempty cycles</li><li>$[\begin{smallmatrix}n\k\end{smallmatrix}]\geq {\begin{smallmatrix}n\k\end{smallmatrix}}$</li><li>$[\begin{smallmatrix}n\1\end{smallmatrix}]&#x3D;(n-1)!$</li><li>$\sum\limits_{k&#x3D;0}^n[\begin{smallmatrix}n\k\end{smallmatrix}]&#x3D;n!$</li><li>$[\begin{smallmatrix}n\k\end{smallmatrix}]&#x3D;(n-1)\cdot[\begin{smallmatrix}n-1\k\end{smallmatrix}]+[\begin{smallmatrix}n-1\k-1\end{smallmatrix}]$</li></ul></li><li><p>Partition of a number</p><ul><li>number of partition the positive integer $n$ into $k$ parts</li><li>$P_k(n)&#x3D;P_{k-1}(n-1)+P_k(n-k)$</li><li>$\sum\limits_{k&#x3D;1}^m P_k(n)&#x3D;P_m(n+m)$</li></ul></li></ul><h3 id="2-2-Inclusion-exclusion-principle-and-its-application"><a href="#2-2-Inclusion-exclusion-principle-and-its-application" class="headerlink" title="2.2 Inclusion-exclusion principle and its application"></a>2.2 Inclusion-exclusion principle and its application</h3><p>$$\left|\bigcup\limits_{i&#x3D;1}^nA_i\right|&#x3D;\sum\limits_{k&#x3D;1}^n(-1)^{k-1}\sum\limits_{I\in C({1,2,\cdots,n},k)}\left |\bigcap\limits_{i\in I}A_i\right|$$</p><p>$$&#x3D;\sum\limits_{\emptyset\neq I\subseteq{1,2,\cdots,n}}(-1)^{\left | I \right |-1}\left|\bigcap\limits_{i\in I}A_i\right|$$</p><p>错排公式：没有一个在原来的位置上<br>$D(n)&#x3D;n!-\left | A_1\cup\cdots\cup A_n\right |&#x3D;n!\left (\sum\limits_{k&#x3D;0}^n \dfrac {(-1)^k}{k!}\right )$</p><p>欧拉函数：不超过$n$且与$n$互素的自然数的个数</p><p>$\varphi(n)&#x3D;n\prod\limits_{p_i为n的质因数}\left(1-\dfrac 1p_i\right)$</p><h3 id="2-3-Generating-function"><a href="#2-3-Generating-function" class="headerlink" title="2.3 Generating function"></a>2.3 Generating function</h3><p>Catalan Number</p><p>$C_n&#x3D;\dfrac1{n+1}\binom{2n}n$</p><h3 id="2-4-Recurrence-relations"><a href="#2-4-Recurrence-relations" class="headerlink" title="2.4 Recurrence relations"></a>2.4 Recurrence relations</h3><p>注意首项要带入验算</p><h3 id="2-5-Polya’s-Theory-of-Counting"><a href="#2-5-Polya’s-Theory-of-Counting" class="headerlink" title="2.5 Polya’s Theory of Counting"></a>2.5 Polya’s Theory of Counting</h3><ol><li><strong>Orbits:</strong> $if\ x\in X\ then\ O_x&#x3D;{y\in X:\exists g \in G \ such\ that\ g*x&#x3D;y}$</li><li>**Stabilizer: **$S_x&#x3D;{g:g*x&#x3D;x}$</li><li>**Lemma1: **$The\ orbits\ partition\ X$</li><li>**Lemma2: **$x\in X\ then\left|O_x\right|\left|S_x\right |&#x3D;\left | G\right|$</li><li><strong>Theorem 1:</strong> $\nu_{X,G}&#x3D;\dfrac1{\left |G\right |}\sum\limits_{x\in X}\left| S_x\right |,\nu_{X,G}\ denote\ number\ of\ orbits$</li><li><strong>Theorem 2:</strong> $\nu_{X,G}&#x3D;\dfrac1{\left |G\right |}\sum\limits_{g\in G}\left| Fix\left( g\right )\right |,\ for\ g\in G\ let\ Fix(g)&#x3D;{x\in X:g*x&#x3D;x}$</li></ol><p>本质上：两种数法</p><ol><li>固定颜色的排列，看看它的permutation有几种</li><li>固定operator，看看不变的颜色（stablizer）有几种</li></ol><h3 id="2-6-估值"><a href="#2-6-估值" class="headerlink" title="2.6 估值"></a>2.6 估值</h3><ol><li><p>调和级数估值：$\dfrac12\lfloor\log_2n\rfloor&lt;\sum\limits_{i&#x3D;1}^n\dfrac1i&#x3D;H_n&lt;\log_2n+1,\ \therefore H_n&#x3D;\Theta(\ln n)$</p></li><li><p>阶乘估值（大小为$n$的集合$X$，其上的置换一共有$n!$个）</p><ol><li>极值点估值：$2^n&lt;\left(\dfrac n2\right)^\dfrac n2&lt;\prod\limits_{i&#x3D;n&#x2F;2}^n\dfrac n2&#x3D;n!&lt;n^n$</li><li>高斯估值（均值不等式）:$n^{\frac n2}&#x3D;\prod\limits_{i&#x3D;1}^n\sqrt n\leq\prod\limits_{i&#x3D;1}^n\sqrt{i(n+1-i)}&#x3D;\left (\sqrt{\prod\limits_{i&#x3D;1}^n i(n+1-i)}&#x3D;\sqrt{n!\cdot n!}&#x3D;n!\right )\leq\prod\limits_{i&#x3D;1}^n\dfrac{n+1}2&#x3D;\left(\dfrac{n+1}2\right)^n$</li><li>进一步优化，使用$1+x≤e^x$与归纳，得到$e\left(\dfrac ne\right)^n\leq n\leq en\left(\dfrac ne\right)^n$</li></ol><p>事实上，Stirling公式：$\lim\limits_{n\to \infty}\dfrac{\sqrt{2\pi n}(\frac ne)^n}{n!}&#x3D;1$</p></li><li><p>二项式系数估值：$\left (\dfrac nk\right)^k\leq\binom nk\leq\sum\limits_{i&#x3D;0}^k\binom ni\leq(\dfrac{en}k)^k$，右边的证明利用二项式定理+赋值$x&#x3D;\dfrac kn$</p></li></ol><h2 id="3-Graph-theory-图论"><a href="#3-Graph-theory-图论" class="headerlink" title="3 Graph theory 图论"></a>3 Graph theory 图论</h2><h3 id="3-1-Basic-notions-and-hand-shaking-lemma"><a href="#3-1-Basic-notions-and-hand-shaking-lemma" class="headerlink" title="3.1 Basic notions and hand shaking lemma"></a>3.1 Basic notions and hand shaking lemma</h3><ol><li><p>图的最小度$\delta(G)$，最大度$\Delta G$</p></li><li><p>子图：边集和点集都是子集</p><ol><li>导出子图（induced subgraph）：子图中的点集在原图中的边，都是子图的边</li><li>生成子图 （spanning subgraph）：子图和原图的点集相等</li></ol></li><li><p>特殊图</p><ol><li>路径图（Path P<del>n</del>)：$V&#x3D;{0,1,\cdots,n}$</li></ol><p>$E&#x3D;{(i-1,i):i&#x3D;1,2,\cdots,n}$<br>2. 环（Circle C<del>n</del>）：$V&#x3D;{0,1,\cdots,n}$</p><p>$E&#x3D;{(i,i+1):i&#x3D;1,2,\cdots,n-1}\cup{(1,n)}$<br>3. 二分图（Bipartite graph B<del>n,m</del>）：$V&#x3D;{u_1,\cdots,u_n}\cup{v_1,\cdots,v_m}$</p><p>$E\subseteq{(u_i,v_j):i&#x3D;1,2,\cdots,n;\ j&#x3D;1,2,\cdots,m}$</p><p>   其中$\subseteq$取等号时，为完全二分图（Complete Bipartite graph K<del>n,m</del>）<br>4. 完全图：（Complete graph K<del>n</del>）<br>5. r-正则图（r-regular graph）：所有顶点度数都是常值r的图<br>6. 简单图（Simple Graph）：没有自环（Loop）、重边（Multiedge）<br>7. $\begin{cases}路径(Path)：不允许环，各顶点和边各出现一次\游走(Walk)：允许环，顶点和边可以重复\end{cases}$<br>8. 连通图：任两点存在路径<br>9. 极大连通子图：子图；连通图；极大<br>10. 树；无环连通图</p></li><li><p>握手定理：$\sum\limits_{v\in V}deg_G(v)&#x3D;2\left | E\right|$奇点有偶数个</p></li></ol><h3 id="3-2-Graph-isomorphism-and-graph-score"><a href="#3-2-Graph-isomorphism-and-graph-score" class="headerlink" title="3.2 Graph isomorphism and graph score"></a>3.2 Graph isomorphism and graph score</h3><ol><li><p>有$n$个顶点且不同构的图有$x$个，则$\dfrac{2^\binom n2}{n!}\leq x\leq2^\binom n2$，所以$x&#x3D;2^{\Theta(\frac{n^2}2)}$</p></li><li><p>Graph score: the degree sequence of  G</p><p>Isomorphic graphs $\Rightarrow$ The same scores</p><p>The same scores $\nRightarrow$ Isomorphic graphs</p></li><li><p>Score Theroem：去掉度数最高的点，前最高点数的点度数减一，可以画图性不变</p><p>$D&#x3D;(d_1,d_2,\cdots,d_n)，d_1\leq d_2\leq\cdots\leq d_n$</p><p>$d’&#x3D;\begin{cases}d_i&amp;i&lt;n-d_n\d_i-1&amp;i\geq n-d_n\end{cases}$</p><p>$D与D’可画图性一致$</p></li></ol><h3 id="3-3-Applications-of-handshake-lemma-Parity-argument"><a href="#3-3-Applications-of-handshake-lemma-Parity-argument" class="headerlink" title="3.3 Applications of handshake lemma: Parity argument"></a>3.3 Applications of handshake lemma: Parity argument</h3><ol><li>Sperner’s Lemma：对任意𝑛维单形体(𝑛-simplex)进行分割并用𝑛 + 1种颜色去着色，则任何合适的单形体分割着色方案下，都必有一个包含所有不同颜色的单元。</li><li>对于3-正则图，包含图上任意边$e$的哈密顿回路必有偶数条</li></ol><h3 id="3-5-Isomorphism-of-trees"><a href="#3-5-Isomorphism-of-trees" class="headerlink" title="3.5 Isomorphism of trees"></a>3.5 Isomorphism of trees</h3><ol><li><p>叶子：度数为1的顶点</p></li><li><p>树生长定义：对于图$G$的叶子节点$v$，图$G$是树$\Leftrightarrow$图$G-v$是树</p></li><li><p>树的等价刻画：</p><ol><li>图$G$是树。</li><li>路径唯一：对任意两点 $ u, v \in V$，存在从$u$到$v$的唯一路径。</li><li>最小连通图：$G$是连通图，且去掉任意一条边后都成为非连通图。</li><li>最大无环图：$G$不含环，但增加任何一条边所得到的图$G + e $（其中$e \in \binom{V}{2} \setminus E $）中含有一个环。</li><li>Euler 方程：$ G $ 是连通图，且 $ |V| &#x3D; |E| + 1 $。</li></ol></li><li><p>证明顶点数为$n$的不同构树有$n^{n-2}$</p><ol><li><p>Score硬算，化简得到</p></li><li><p>骨骼标本与V上的函数图一一对应，每棵树对应n<del>2</del>个骨骼标本$\dfrac {n^n}{n^2}&#x3D;n^{n-2}$</p></li><li><p>Prüfer code（逐个记录目前编号最小的叶子的祖先节点）与树一一对应$n^{n-2}$</p></li><li><p>Determinants：G的拉普拉斯矩阵：$a_{ij}&#x3D;\begin{cases}-1&amp;{i,j}\in E(G)\deg_G(i)&amp;i&#x3D;j\0&amp;otherwise\end{cases}$</p><p>$T(G)&#x3D;T(G-e)+T(G:e)&#x3D;\det Q_{11}’+\det Q_{11}’’&#x3D;\det Q_{11}$</p></li></ol></li></ol><h3 id="3-4-The-number-of-spanning-trees"><a href="#3-4-The-number-of-spanning-trees" class="headerlink" title="3.4 The number of spanning trees"></a>3.4 The number of spanning trees</h3><ol><li><p>树同构</p><ol><li>有根树同构$\cong’$，编码（非根叶节点01，每个个节点的编码都是0+所有子树编码+1）后字典序排序即可</li><li>无根树同构$\cong$<ol><li>一些概念<ol><li>两点距离：最短路径长度$dis_G(u,v)$</li><li>一点偏心率：该点与其他点最大距离$ex_G(v)$</li><li>中心：偏心率最小的顶点集合$C(G)$，对于树而言，该集合大小为1或者2</li></ol></li><li>解法<ol><li>找到中心</li><li>中心集合大小为1，其为根，转化为有根树</li><li>中心集合大小为2，去掉中心两点的连线，转化为两棵有根树</li></ol></li></ol></li></ol></li></ol><h2 id="4-概率论-The-probabilistic-method"><a href="#4-概率论-The-probabilistic-method" class="headerlink" title="4 概率论 The probabilistic method"></a>4 概率论 The probabilistic method</h2><h3 id="4-1-Probability-a-quick-review"><a href="#4-1-Probability-a-quick-review" class="headerlink" title="4.1 Probability: a quick review"></a>4.1 Probability: a quick review</h3><ol><li><p>$P(E|F)&#x3D;\dfrac{P(E\cap F)}{P(F)}$，若独立，则$P(E|F)&#x3D;P(E)$</p></li><li><p>全概率公式 Law of total probability: $P(B)&#x3D;\sum P(B|E_i)P(E_i)$</p></li><li><p>条件独立 Conditionally Independent: $P(A\cap B|C)&#x3D;P(A|C)\cdot P(B|C)$</p></li><li><p>贝叶斯定理 Bayes Rules: $P(B|A)&#x3D;\dfrac{P(AB)}{P(A)}&#x3D;\dfrac{P(A|B)P(B)}{P(A)}$</p></li><li><p>$E(X)+E(Y)&#x3D;E(X+Y)$</p><p>$D(X)(Var(X))&#x3D;E((X-E[X])^2)&#x3D;E[X^2]-E[X]^2$</p><table><thead><tr><th>分布</th><th>分布律或概率密度</th><th>期望</th><th>方差</th></tr></thead><tbody><tr><td>0-1分布$B(1,p)$</td><td>$P(X&#x3D;k)&#x3D;p^k(1-p)^{1-k},\quad k&#x3D;0,1,\quad 0&lt;p&lt;1$</td><td>$p$</td><td>$p(1−p)$</td></tr><tr><td>二项分布$B(n,p)$</td><td>$P(X&#x3D;k)&#x3D;C_{n}^{k}p^{k}(1-p)^{n-k},\quad k&#x3D;0,1,2,…,n,\quad 0&lt;p&lt;1 $</td><td>$np$</td><td>$np(1−p)$</td></tr><tr><td>泊松分布$P(\lambda)$</td><td>$P(X&#x3D;k)&#x3D;\frac{\lambda ^{k}}{k!}e^{-λ},\quad \quad k&#x3D;0,1,2,…,\quad λ&gt;0$</td><td>$\lambda$</td><td>$\lambda$</td></tr><tr><td>几何分布$G(p)$</td><td>$P(X&#x3D;k)&#x3D;p(1-p)^{k-1}, k&#x3D;1, 2, \cdots, 0&lt;p&lt;1$</td><td>$\frac{1}{p}$</td><td>$\frac{1-p}{p^{2}}$</td></tr><tr><td>指数分布$E(\lambda)$</td><td>$f(x)&#x3D;\left {\begin{matrix} \lambda e^{-\lambda x}, &amp;x&gt;0\ 0, \end{matrix} \right.$其他</td><td>$\frac{1}{\lambda}$</td><td>$\frac{1}{\lambda^{2}}$</td></tr><tr><td>正态分布$N(\mu, \sigma^{2})$</td><td>$f(x, y)&#x3D;\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^{2}}{2\sigma^{2}}}, -\infty &lt;x&lt;+\infty, -\infty &lt;\mu &lt;+\infty, \sigma &gt;0$</td><td>$\mu$</td><td>$\sigma^{2}$</td></tr></tbody></table></li><li><p>概率的估算</p><ol><li>Markov’s Inequality: $X$ is a random variable that assumes only non-negtive values, $P(X\geq a)\leq\dfrac{E[X]}a$</li><li>Chebyshev’s Inequality: $P(\left|X-E[X]\right|\geq a)\leq\dfrac{Var[X]}{a^2}$</li><li>变形：$P(X\geq a)&#x3D;P_{min}(e^{tX}\geq e^{ta})\leq \min\limits_{t&gt;0}\dfrac{E(e^{tX})}{e^{t\cdot a}}$</li><li>Union bound：并集不等式</li></ol></li></ol><h3 id="4-2-Probabilistic-method"><a href="#4-2-Probabilistic-method" class="headerlink" title="4.2 Probabilistic method"></a>4.2 Probabilistic method</h3><ol><li><p>Ramsey number</p><p>if $\binom nk2^{-\binom nk+1}&lt;1$, then it is possible to color the edges of $K_n$ with two colors so that it has no single-colored $K_k$ subgraphs</p></li><li><p>Any system consisting of fewer than $2^{k-1}$ sets of size k admits a 2-coloring</p></li><li><p>Theorem. Let $G$ be a graph with an even number, $2n$, of vertices and with $m &gt; 0$ edges. Then the set $V &#x3D; V(G)$ can be divided into two disjoint $n$-element subsets $A$ and $B$ in such a way that more than $\frac{m}{2}$ edges go between $A$ and $B$.</p><p>To find the solution, sampling and testing is efficient.</p></li><li><p>Theorem  [Lovasz Local Lemma]:<br>Let</p><p>$$<br>E_1, E_2, \cdots, En<br>$$</p><p>be a set of events, and assume that the following holds:</p><ol><li><p>For all</p><p>$$<br>i$$,<br>$$</p><p>Pr(E_i) \le p$$;</p></li><li><p>The degree of the dependency graph given by</p><p>$$<br>E_1, E_2, \cdots, E_n<br>$$</p><p>is bounded by $d$；</p></li><li><p>$$<br>4dp \le 1$$.<br>$$</p></li></ol><p>Then</p><p>$$<br>Pr\left(\bigcap_{i&#x3D;1}^n \overline{Ei}\right) &gt; 0<br>$$</p><p>.</p></li></ol><h2 id="5-Random-Graphs"><a href="#5-Random-Graphs" class="headerlink" title="5 Random Graphs"></a>5 Random Graphs</h2><ol><li><p>$G(n,p)$ model：$\left|V\right|&#x3D;n,P({u,v}\in E)&#x3D;p$</p><p>存在k-独立集的概率最大为$P(\alpha(G)\geq k)\leq\binom nk(1-p)^\binom nk$</p><p>存在k-团集的概率最大为$P(\omega(G)\geq k)\leq\binom nkp^\binom nk$</p></li><li><p>对于任何一个increasing property的概率$P$，$n\to\infty$时，$P\to0$或者$P\to1$</p><p>具体趋于可能收到$p$影响，边界点称为threshold</p></li><li><p>可以用马尔科夫不等式&#x2F;切比雪夫不等式来推导</p></li></ol><h2 id="6-Introduction-to-data-science"><a href="#6-Introduction-to-data-science" class="headerlink" title="6 Introduction to data science"></a>6 Introduction to data science</h2><h3 id="6-1-High-dimensional-space"><a href="#6-1-High-dimensional-space" class="headerlink" title="6.1 High-dimensional space"></a>6.1 High-dimensional space</h3><ol><li>任意两个高维向量是近似正交的</li><li>单位立方体的顶点在单位球外</li><li>几乎所有的点都在赤道（不论哪个点为北极点）</li><li>体积随着维度增加而趋于0</li><li>变长为2的立方体内撒点，几乎全在内接球外面</li><li>高维高斯分布：体积最多的地方不在零点，在一个半径为$\sqrt d$的环上</li><li>找最近的两个向量-&gt;矩阵降维-&gt;用球状高斯分布生成k个向量，再把原来的向量投影上去，距离相对关系大概率是不变的</li></ol><h3 id="6-2-Best-fit-subspaces-and-Singular-Value-Decomposition"><a href="#6-2-Best-fit-subspaces-and-Singular-Value-Decomposition" class="headerlink" title="6.2 Best-fit subspaces and Singular Value Decomposition"></a>6.2 Best-fit subspaces and Singular Value Decomposition</h3><h4 id="6-2-1-SVD-特征值压缩"><a href="#6-2-1-SVD-特征值压缩" class="headerlink" title="6.2.1 SVD 特征值压缩"></a>6.2.1 SVD 特征值压缩</h4><p>方阵 EVD：通过特征值和特征矩阵，把原矩阵变成$\mathbf{S}&#x3D;U\boldsymbol\Lambda U^{-1}$，</p><p>普通矩阵 SVD：$A&#x3D;\underbrace{U}<em>{m\times m}\underbrace{\Sigma}</em>{m\times n} \underbrace{V^T}_{n\times n}$</p><p>$U$的列是$AA^T$的特征向量，$V$的列是$A^TA$的特征向量，$\Sigma$对角是特征值，其余为0</p><p>为了压缩矩阵，可以把最小的特征值置零</p><h4 id="6-2-2-投影压缩"><a href="#6-2-2-投影压缩" class="headerlink" title="6.2.2 投影压缩"></a>6.2.2 投影压缩</h4><p>和线形回归类似，目标是让原数据和新数据的协方差尽可能小，但是实现上可以用SVD</p><ol><li>中心化数据：将每个特征减去其均值，使数据均值为零</li><li>计算协方差矩阵</li><li>特征值分解</li><li>选择主成分</li><li>投影数据</li></ol><h3 id="6-3-Introduction-to-Markov-Chain-Monte-Carlo"><a href="#6-3-Introduction-to-Markov-Chain-Monte-Carlo" class="headerlink" title="6.3 Introduction to Markov Chain Monte Carlo"></a>6.3 Introduction to Markov Chain Monte Carlo</h3><ul><li><p>Persistent state (recurrence): If the state ever be reached, the random process will return to it with probability 1.</p></li><li><p>Markov Chain Monte Carlo: $E(f)&#x3D;\sum\limits_xf(x)\cdot p(x)$</p></li><li><p>Metropolis-Hastings Algorithm: 构造指定stationary distribution的Markov Chain</p><p>$\begin{cases}p_{ij}&#x3D;\dfrac 1r\min\left (1,\dfrac {p_j}{p_i}\right )\p_{ii}&#x3D;1-\sum\limits_{i\ne j}p_{ij}\end{cases}$</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Set-and-ordering&quot;&gt;&lt;a href=&quot;#1-Set-and-ordering&quot; class=&quot;headerlink&quot; title=&quot;1 Set and ordering&quot;&gt;&lt;/a&gt;1 Set and ordering&lt;/h2&gt;&lt;h3 id=&quot;1</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
  </entry>
  
  <entry>
    <title>影评：《姊妹之歌》</title>
    <link href="https://ryanstarfox.github.io/2025/06/15/2025/20250615%20%E5%A7%8A%E5%A6%B9%E4%B9%8B%E6%AD%8C/"/>
    <id>https://ryanstarfox.github.io/2025/06/15/2025/20250615%20%E5%A7%8A%E5%A6%B9%E4%B9%8B%E6%AD%8C/</id>
    <published>2025-06-15T08:16:05.000Z</published>
    <updated>2025-06-15T08:16:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>#SIFF2025 长宁百丽宫影城</p><p>这部电影给我的感觉是：有真实的复杂性：其对于桎梏的描述有两重性。</p><p>电影中对于桎梏的展示是非常具有层次性：由宏观到微观，由背景到具体的事情：</p><p>最开始展现出来的Nasreen的家庭，无疑是美满的——与丈夫、孩子非常幸福地生活。伊朗这个国家看上去和世俗国家也别无二异：唱歌的母亲，看球的父子，拿着xbox手柄的儿子，iPhone，google。</p><p>第一层桎梏是国家、社会带来的，在电影开头就提到：女性不能在公开场合唱歌。警车在旁边时感受到的不是安全，而是警觉：停止唱歌，戴上头纱，小心摄像机。纹身师说：“我给xxx（那个女歌手，忘记名字了）纹过身，她戴着头巾唱歌，谷歌上都查不到她的脸，女性在国内唱歌有限制。”摄影师应：“女性在国内有很多限制。”纹身师问：“纹这个真的值得这么痛嘛？”Nasreen在手指上纹上了women。</p><p>第二层桎梏是丈夫：开始时的幸福，后面才知道这只不过是一个不具体的表象，一旦到具体的生活，这就是一段不幸福的婚姻。太经典了：晚归的丈夫、不爱的丈夫、自私的丈夫。甚至其实两人一开始在一起都是因为家庭内部的催婚压力，甚至抚养小孩对于丈夫的付出小于儿子的付出。</p><p>第三层桎梏是原生家庭：母亲一直支持Nasreen，Nasreen也一直认为父亲在的话会支持自己唱歌，会保护自己免于丈夫的冷暴力。但是母亲还是传统的，父亲的支持最终还是父权赋予的权利，而不是个人独立带来的力量，当初Nasreen结婚都是半处于家庭给到的压力。</p><p>但是这部电影的对于整个事件的刻画是具体的，不是一昧地否定。母亲最终也还是尊重女儿离婚的意愿，并且为了帮女儿承担压力而陪同女儿一起去离婚，原生家庭是桎梏，但也是支撑。和前夫也算是离婚离得干净，获得抚养权、抚养费，Nasreen在法律的支持下也获得了应有的保障。</p><p>离婚之后Nasreen走出家门，不为家庭所累（当然也是因为母亲的支持和子女的成长），找到了一份支持自己的职业（伊朗的女性生存状况，至少没有差到一个女人养不活自己，完全依附于一个男人）。其实这在某种程度上，回答了“娜拉出走之后，然后呢”的问题。</p><p>影片的结尾还是秉有对未来的希望：伊朗知名女歌手牵头，希望改变伊朗对于女性的偏见与歧视。Nasreen的母亲生日，许下了伊朗和平的宏大愿望。儿子Hamid说，乌龟会把头抬出水面呼吸——下一代会好吗？Hamid支持母亲唱歌，未来的伊朗，会支持女性平等的地位吗？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#SIFF2025 长宁百丽宫影城&lt;/p&gt;
&lt;p&gt;这部电影给我的感觉是：有真实的复杂性：其对于桎梏的描述有两重性。&lt;/p&gt;
&lt;p&gt;电影中对于桎梏的展示是非常具有层次性：由宏观到微观，由背景到具体的事情：&lt;/p&gt;
&lt;p&gt;最开始展现出来的Nasreen的家庭，无疑是美满的——与</summary>
      
    
    
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/categories/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="豆瓣/Douban" scheme="https://ryanstarfox.github.io/tags/%E8%B1%86%E7%93%A3-Douban/"/>
    
  </entry>
  
  <entry>
    <title>2025 WWDC 小谈</title>
    <link href="https://ryanstarfox.github.io/2025/06/13/2025/20250622%20WWDC2025/"/>
    <id>https://ryanstarfox.github.io/2025/06/13/2025/20250622%20WWDC2025/</id>
    <published>2025-06-13T07:15:00.000Z</published>
    <updated>2025-06-13T07:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2025-WWDC-小谈"><a href="#2025-WWDC-小谈" class="headerlink" title="2025 WWDC 小谈"></a>2025 WWDC 小谈</h1><p><img src="/images/2025/f882568ce4_wwdc-2025-apple.webp" alt="f882568ce4_wwdc-2025-apple"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><blockquote><p>说来好笑，正是因为复习量子物理到深夜，我才得以观看2025WWDC的直播。这是我第一次看WWDC的直播，第二次看苹果发布会的直播（上一次是“scary fast”)。对于这次WWDC，我觉得还算是满意吧，虽然没怎么回答我想问的问题，但是至少还算是给了一份答卷。</p></blockquote><h2 id="Apple-Intelligence——失望与期望"><a href="#Apple-Intelligence——失望与期望" class="headerlink" title="Apple Intelligence——失望与期望"></a>Apple Intelligence——失望与期望</h2><p>2024年的苹果发布会，画了一张巨大的大饼——<strong>Apple Intelligence</strong>。这是苹果近年来唯一的一次食言，起了个大早，赶了个晚集。去年刚发布的时候，这看上去又是“Only Apple can do”，提出了既能保护用户隐私又能帮助用户的人工智能的结构概念，都以为是又一次苹果为一片混沌的新领域证明正确的发展和应用的方向，但结果却是一场惨痛的滑铁卢，甚至让苹果背上“虚假宣传”的骂名。</p><p><img src="/images/2025/Apple_Intelligence_top_banner_157c9e61-a3b4-405c-a873-a472ee9deb84.jpg.webp" alt="Apple_Intelligence_top_banner_157c9e61-a3b4-405c-a873-a472ee9deb84.jpg"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>目前为止，我听到的消息来自<a href="https://www.bilibili.com/video/BV1VYjnzuEkg">林亦LYi</a>，认为他讲得还是较为详细有理。简言之苹果机器学习的高管<a href="https://www.apple.com.cn/leadership/john-giannandrea/">John Giannandrea</a>面对ChatGPT的横空出世不作为，没有跟上AI发展的浪潮，但又做足了面子工程，画了很多饼，目前机器学习相关团队被重组给了帅气迷人幽默的<a href="https://www.apple.com.cn/leadership/craig-federighi/">Craig Federighi</a>（主管软件工程）和<a href="">Mike Rockwell</a>（Vision Pro总负责）。这两人由于John的不作为积怨已久，且专业能力管理能力均较强，我本以为今年可能就已经会有很大的改观，但是事实上并没有这么快。希望WWDC2026上苹果给出一份满意的答卷！</p><p><img src="/images/2025/111.jpg" alt="battle of Apple Intelligence"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>Apple Intelligence落后了吗？落后了！但是，我认同，现在也没有落后很多。因为其他厂商对于AI功能加入系统的方式仍然是一片混沌，并没有找到一种深刻影响工作效率的方法。而且仍然有许多亟待解决的<strong>伦理问题</strong>——例如荣耀MagicOS的“一句话点外卖”功能，是基于AI对于屏幕内容的识别，一方面这是对于隐私的侵犯；另一方面误操作的成本谁来负担，这都是目前没有伦理共识。所以，其实在这个时候各个厂商都有点踟蹰不前，因为有点没有前进的空间。但是苹果提出要端侧模型和云端模型并重，提出了一个合理的结构，规避了这个伦理问题，所以其实苹果是由前进空间，只是在科技方面有点落后了。诚然如此，但是苹果其实依然没有为伦理的讨论做出贡献，苹果只是规避了这个问题，纳入旧伦理的体系中去解决这个问题。</p><p>我比较感兴趣的Apple intelligence的理念反而是在WatchOS的部分提到的，里面提到一个关键词**“主动性”**，我认为这其实一针见血地指出了AI应用发展的一个重要方向。希望不要沦落到概念先行，从未落地的田地。</p><h2 id="Liquid-Glass——松了一口气"><a href="#Liquid-Glass——松了一口气" class="headerlink" title="Liquid Glass——松了一口气"></a>Liquid Glass——松了一口气</h2><p><strong>UI更新</strong>是本次发布会又一次比较重要的内容。本来听过太多rumor，见过太多丑丑的渲染图，祈祷过无数次不会改不要乱改，不要为了改而改。最终给出的答卷还算满意。最终听到的消息是要统一为Vision Pro的视觉语言，之后就被曲解为圆形图标——我为此担心了很久，直至被这个来自<a href="https://www.bilibili.com/video/BV1B1jYzUERX/">谐门东西</a>的视频说服。简言之，圆形图标只有Vision Pro和Apple Watch的“无限平面”的设计语言才会出现，且为蜂窝状排列，不仅如此，Vision pro里的iPad兼容app还需要通过图标的方圆来区分。因此不可能改为圆形图标，一切只是以讹传讹。</p><p><img src="/images/2025/maxresdefault.jpg" alt="maxresdefault"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>最终的设计，我认为还是维持了苹果的审美的——甚至加入了透明app图标，这多像是概念版的iOS啊！（但是其实我不喜透明图标，因为丧失了<strong>颜色对于视觉的传达</strong>。）新的UI最被人诟病的是<strong>可读性</strong>的问题——透明让底层的内容影响了顶层内容的阅读。这个问题在这个<a href="https://www.bilibili.com/video/BV1noMczkEMP/">四位up主对谈</a>的视频里讨论过。新UI的实现分为四层——Lense层（基础的材质）、Diffusion层（让透视光线变柔和）、高光层（控制透明度）、 文字与UI。为了改善可读性，苹果官方的文档都指出可以调整Diffusion层与高光层。事实上，在视频播放器界面，暂停按钮（纯SVG图标）和+10s、-10s按钮（混合了文字的图标）已经做了可读性的区别。但是在控制中心，苹果对于可读性的控制就非常差——明明通过调整参数就可以解决。不知道是不是为了小小引起热度，还是纯粹是beta版系统不够完善。我看到的小道消息是，控制中心就是还没有做完。</p><p><img src="/images/2025/%E6%88%AA%E5%B1%8F%202025-06-13%2001.02.56.png" alt="截屏 2025-06-13 01.02.56"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>（感觉对第三方未适配app的支持还不错）</p><p>这个UI的另外一个争议是<strong>对性能和续航的损耗</strong>。WWDC引出新UI的方式都是说“随着算力的提高”，而且这种材质和效果势必会增加性能与续航的压力。我看到的小道消息，说是并没有用到光追，但是也确实非常吃性能和能耗。就我自己而言，我本来想为了体验iPad版的Journal（事实上也并未上线），把我的A15 iPad mini 6升级至了Developer Beta，结果系统卡顿到了一个完全不可用的状态。我现在手持的还是续航尿崩的苹果小火龙——iPhone 15 pro，在极客湾续航排行榜中垫底，已经开始担心续航了。</p><h2 id="iPadOS——史诗级提升"><a href="#iPadOS——史诗级提升" class="headerlink" title="iPadOS——史诗级提升"></a>iPadOS——史诗级提升</h2><p><img src="/images/2025/image-20250613021244187.png" alt="image-20250613021244187"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>iPadOS<strong>红绿灯</strong>冒出来的那一刻，我就震惊了。</p><p>我认为桌面操作系统和移动端操作系统的根本区别有两个</p><ul><li><strong>手动杀后台vs自动杀后台</strong></li><li><strong>以文件为中心vs以应用为中心</strong></li></ul><p>其实这次iPadOS确实在这两个方向发力。</p><p>对于前者，iPadOS允许了应用保持在后台，但是它的逻辑其实是折中的：对于桌面操作系统来说，默认不自动杀后台；对于移动操作系统，默认自动杀后台；而对于这次的iPadOS，默认自动杀后台，但是程序可以调取API，申请自己不被杀掉的权限。这这种操作逻辑足够简单，保持了移动端方面管理窗口的优势；又足够精细，保持了桌面端管理进程的优势。期待实际使用的效果。</p><p>对于后者，传统来说，桌面操作系统的应用可以对所有的文件都可以方便地获得相关权限，移动操作系统的应用只能获取该应用下文件的相关权限，想要获得全局的权限就相对麻烦。新的iPadOS维持了这一点不变，但是改变了其表现形式——桌面系统的表现也是以文件为中心的，其桌面上是文件；移动操作系统是以应用为中心的，其桌面上是应用。但是新的iPadOS允许将文件固定到Docker栏上，这已经部分地把文件和应用放到同一个等级上了（虽然安卓早已可以）。没有实际体验过，不知道这种程度的对于文件的地位的提升是否足够生产力的发展。</p><p>所以，<strong>你的下一台电脑，是否还需要是一台电脑吗？</strong></p><p><img src="/images/2025/images-2.jpeg" alt="images-2"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>iPadOS更新至此，生产力的瓶颈就不是系统了，而是应用了，之前被系统困太久的厂商可以发力了，做出一些更加像样的iPad端桌面级App了。</p><p>但是，随之我们又有了另外一个问题，<strong>那Mac呢？</strong></p><p>上文所提的<a href="">四位up对谈</a>视频中有人提出，Mac和iPad只是占据各自舒适的生态位，我对此不完全赞同。我对于它的最直觉的感受是，iPad采用更加接近Mac的逻辑反而使得Mac的逻辑更容易被大家接受，反而会促进大家对于Mac的接受。而iPad本身承担的是“触屏电脑”的地位——Mac从来不做触控屏，是因为那个角度触控很别扭，但是触控放到iPad形态的桌面端设备，反而就合理起来，不论是硬件形态还是系统上。</p><p>可喜可贺，可喜可贺！不知道二手的iPad pro会不会涨价。这下12.9英寸和13英寸的iPad，M系列芯片的Mac，全部都更加合理了。</p><p><img src="/images/2025/image-20250613021059582.png" alt="image-20250613021059582"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="3D照片——新的护城河？"><a href="#3D照片——新的护城河？" class="headerlink" title="3D照片——新的护城河？"></a>3D照片——新的护城河？</h2><p>之前up主<a href="https://www.bilibili.com/video/BV1V14y1R7Rk/?spm_id_from=333.1387.collection.video_card.click">两颗皮蛋</a>制作过系列节目【<a href="">苹果护城河</a>】，其中就有一期讲的是HDR，深以为然。</p><p>我认为，苹果在影像方面的护城河，历来有三：</p><p>其一为<strong>实况</strong>：前些年不受到广泛支持，从各个app对其适配，推动安卓也对其适配，其中经过近10年；</p><p>其二为<strong>HDR</strong>：苹果的HDR管理真的最完善最简单，而安卓与Windows的HDR管理总是相当麻烦。现在印象里安卓已经做得不错了，对安卓不构成护城河了，但是Windows的HDR管理依旧一言难尽，HDR与SDR的区分做得很差（不过近年来不怎么用Windows尤其是高端Windows了，也只是印象，欢迎反驳）；</p><p>其三为<strong>视频</strong>：iPhone的视频能力就是一直都一骑绝尘：尤其是稳定的4k60Hz和防抖性能更是，还有一些电影效果之类的有意思的功能，至今应当仍为护城河（也是印象里，欢迎举反例）。</p><p>而今年增加了<strong>照片3D化</strong>的功能，我认为很有可能是新的护城河。我更新了beta版的iPadOS之后的体验还是相对来说满意的，虽然达不到Vision Pro的效果，虽然只有富有层次感&#x2F;主体在照片中心&#x2F;使用广角拍摄的效果较好，但是依然让我很激动，感觉照片真的比以前更加鲜活了。上文所提的<a href="">四位Up对谈</a>中提出，这不是简单的双眼视察，而是运用了近1，2年兴起的<strong>高斯泼溅</strong>技术，迅速地将其应用到了新系统，确实让人印象深刻。</p><h2 id="一些笑点"><a href="#一些笑点" class="headerlink" title="一些笑点"></a>一些笑点</h2><h3 id="伟大的Apple-Music支持了歌词翻译和读音！！"><a href="#伟大的Apple-Music支持了歌词翻译和读音！！" class="headerlink" title="伟大的Apple Music支持了歌词翻译和读音！！"></a>伟大的Apple Music支持了歌词翻译和读音！！</h3><p><img src="/images/2025/image-20250613022531348.png" alt="image-20250613022531348"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="什么聊天工具现在才支持换背景"><a href="#什么聊天工具现在才支持换背景" class="headerlink" title="什么聊天工具现在才支持换背景"></a>什么聊天工具现在才支持换背景</h3><p><img src="/images/2025/ios26-imessagre.jpg" alt="ios26-imessagre"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="向飞书学习——多彩文件夹-emoji"><a href="#向飞书学习——多彩文件夹-emoji" class="headerlink" title="向飞书学习——多彩文件夹+emoji"></a>向飞书学习——多彩文件夹+emoji</h3><p><img src="/images/2025/image-20250613022818070.png" alt="image-20250613022818070"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="Duolingo"><a href="#Duolingo" class="headerlink" title="Duolingo"></a>Duolingo</h3><p><img src="/images/2025/IMG_5323.png" alt="IMG_5323"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="让我吃惊的几幕"><a href="#让我吃惊的几幕" class="headerlink" title="让我吃惊的几幕"></a>让我吃惊的几幕</h2><h3 id="全是国产车"><a href="#全是国产车" class="headerlink" title="全是国产车"></a>全是国产车</h3><p><img src="/images/2025/image-20250613022834244.png" alt="image-20250613022834244"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="insta360有出息了"><a href="#insta360有出息了" class="headerlink" title="insta360有出息了"></a>insta360有出息了</h3><p><img src="/images/2025/image-20250613023023211.png" alt="image-20250613023023211"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h1 id="以上"><a href="#以上" class="headerlink" title="以上"></a>以上</h1><blockquote><p>参考：</p><ol><li>林亦LYi 苹果AI怎么就鸽了？ <a href="https://www.bilibili.com/video/BV1VYjnzuEkg/">https://www.bilibili.com/video/BV1VYjnzuEkg/</a></li><li>谐门东西 ⭕️iOS 19图标变圆？别扯了…… <a href="https://www.bilibili.com/video/BV1B1jYzUERX/">https://www.bilibili.com/video/BV1B1jYzUERX/</a></li><li>Apple Apple管理层 <a href="https://www.apple.com.cn/leadership/">https://www.apple.com.cn/leadership/</a></li><li>爱否科技FView、极客湾Geekerwan、ZEALER官方频道、电丸科技AK【WWDC25 特别节目】Apple 新系统们怎么样？且听四位科技 UP 锐评 <a href="https://www.bilibili.com/video/BV1noMczkEMP/">https://www.bilibili.com/video/BV1noMczkEMP/</a></li><li>两颗皮蛋 [护城河]苹果，重新定义HDR <a href="https://www.bilibili.com/video/BV1V14y1R7Rk">https://www.bilibili.com/video/BV1V14y1R7Rk</a></li><li>Apple WWDC25 Keynote <a href="https://podcasts.apple.com/us/podcast/apple-events-video/id275834665">https://podcasts.apple.com/us/podcast/apple-events-video/id275834665</a></li></ol><p>感谢以下朋友与我交换信息、探讨WWDC2025：</p><ul><li>Apple fans群聊</li><li>JWST</li><li>Stephen Chen</li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2025-WWDC-小谈&quot;&gt;&lt;a href=&quot;#2025-WWDC-小谈&quot; class=&quot;headerlink&quot; title=&quot;2025 WWDC 小谈&quot;&gt;&lt;/a&gt;2025 WWDC 小谈&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/images/2025/f882568</summary>
      
    
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/categories/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="Apple" scheme="https://ryanstarfox.github.io/tags/Apple/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
  </entry>
  
  <entry>
    <title>量子物理整理</title>
    <link href="https://ryanstarfox.github.io/2025/06/11/2025/20250611%20%E9%87%8F%E5%AD%90%E7%89%A9%E7%90%86/"/>
    <id>https://ryanstarfox.github.io/2025/06/11/2025/20250611%20%E9%87%8F%E5%AD%90%E7%89%A9%E7%90%86/</id>
    <published>2025-06-10T17:49:00.000Z</published>
    <updated>2025-06-10T17:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-量子物理基础"><a href="#第一章-量子物理基础" class="headerlink" title="第一章 量子物理基础"></a>第一章 量子物理基础</h1><h2 id="1-1-光量子、玻尔原子"><a href="#1-1-光量子、玻尔原子" class="headerlink" title="1.1 光量子、玻尔原子"></a>1.1 光量子、玻尔原子</h2><h3 id="1-1-1-黑体辐射与普朗克的量子假设"><a href="#1-1-1-黑体辐射与普朗克的量子假设" class="headerlink" title="1.1.1 黑体辐射与普朗克的量子假设"></a>1.1.1 黑体辐射与普朗克的量子假设</h3><h4 id="基尔霍夫辐射定律"><a href="#基尔霍夫辐射定律" class="headerlink" title="基尔霍夫辐射定律"></a>基尔霍夫辐射定律</h4><p>单色辐出度$M(\lambda,T)&#x3D;\dfrac{dE_\lambda}{d\lambda}(w&#x2F;m^3)$：单位时间物体表面单位面积内发射的波长在$\lambda$附近单位波长间隔内的辐射能</p><p>总辐出度$M(T)&#x3D;\int_0^{+\infty}M(\lambda,T)d\lambda$</p><p>物体向周围发射辐射能的同时，也吸收周围物体的辐射能。辐射从外界入射到不透明物体时，一部分吸收，一部分反射（一部分透射）</p><p>单色吸收比$\alpha(\lambda,T)$在波长为$\lambda\sim\lambda+d\lambda$范围内的吸收比</p><p>任何温度下吸收比&#x3D;1称为（绝对）黑体</p><p>$\dfrac{M_1(\lambda,T)}{\alpha_1(\lambda,T)}&#x3D;\dfrac{M_2(\lambda,T)}{\alpha_2(\lambda,T)}&#x3D;\cdots&#x3D;M_0(\lambda,T),M_0(\lambda,T)是黑体单色辐出度$</p><p>带小孔孔腔视为绝对黑体的模型</p><p>黑体辐射基本规律：</p><ol><li>斯特藩-玻尔兹曼定律：&#x3D;&#x3D;$M_0(T)&#x3D;\sigma T^4$&#x3D;&#x3D;，总辐出度$M_0(T)$</li><li>维恩位移定律：&#x3D;&#x3D;$\lambda_mT&#x3D;b$&#x3D;&#x3D;，单色辐出度的峰值波长$\lambda_m$</li></ol><h4 id="普朗克能量子假说"><a href="#普朗克能量子假说" class="headerlink" title="普朗克能量子假说"></a>普朗克能量子假说</h4><p>普朗克公式：&#x3D;&#x3D;$M_0(\lambda,T)&#x3D;2\pi hc^2\lambda^{-5}\dfrac1{e^{hc&#x2F;k_BT\lambda}-1}$&#x3D;&#x3D;</p><ul><li><p>波长短&#x2F;温度低的近似：</p><p>维恩公式：$M_0(\lambda,T)&#x3D;2\pi hc^2\lambda^{-5}e^{-hc&#x2F;k_BT\lambda}$</p></li><li><p>波长高&#x2F;温度高的近似：</p><p>瑞利-金斯公式：$M_0(\lambda,T)&#x3D;2\pi k_Bc\lambda^{-4}T$</p></li></ul><p>普朗克假定：$谐振子能量值只取某个最小能量的整数倍\epsilon &#x3D; h\nu$</p><h3 id="1-1-2-光的波粒二象性"><a href="#1-1-2-光的波粒二象性" class="headerlink" title="1.1.2 光的波粒二象性"></a>1.1.2 光的波粒二象性</h3><ol><li><p>光电效应</p><ol><li><p>电势差足够大时，光电流饱和，饱和电流大小与入射光强成正比</p></li><li><p>遏制电压$U_0$，$U&#x3D;-U_0$，光电流为0。光电子从表面逸出最大初速度$v_m$满足：$\dfrac12mv_m^2&#x3D;eU_0$。最大初动能于入射光强度无关</p></li><li><p>红限频率</p><p>遏制电势差与入射光频率有线性关系，斜率与金属种类无关</p></li><li><p>弛豫时间</p><p>几乎瞬时</p></li></ol></li><li><p>爱因斯坦光电效应方程</p><ol><li>光强：$nh\nu$</li><li>遏制电压：$\dfrac12mv^2&#x3D;h\nu-A&#x3D;eU_c,\ A:逸出功$</li><li>红限频率：$v_0&#x3D;\dfrac Ah$</li></ol></li><li><p>康普顿散射</p><p>&#x3D;&#x3D;$\Delta\lambda&#x3D;\lambda-\lambda_0&#x3D;\dfrac h{m_ec}(1-\cos\theta)$&#x3D;&#x3D;</p></li></ol><h3 id="1-1-3-玻尔原子理论"><a href="#1-1-3-玻尔原子理论" class="headerlink" title="1.1.3 玻尔原子理论"></a>1.1.3 玻尔原子理论</h3><p>氢原子光谱来自电子跃迁，因此不是连续谱</p><p>里德伯公式：$\tilde{\nu}&#x3D;\dfrac1\lambda&#x3D;R_H(\dfrac1{m^2}-\dfrac1{n^2})$, $R_H&#x3D;1.0967758\times10^7 m^{-1}$，单位是$1&#x2F;m$</p><p>玻尔假设：</p><ol><li>定态条件：电子绕核圆周运动，不辐射能量，处于稳定状态称为<strong>定态</strong>，相应的能量称为<strong>能级</strong></li><li>频率条件：跃迁能量$h\nu&#x3D;E_n-E_m$</li><li>角动量量子化条件：&#x3D;&#x3D;$mv_nr_n&#x3D;n\hbar&#x3D;n\dfrac h{2\pi}$;$\dfrac {e^2}{4\pi\varepsilon_0 r^2}&#x3D;m\dfrac{v^2}r$&#x3D;&#x3D;</li></ol><p>&#x3D;&#x3D;$E_1&#x3D;-13.6eV$&#x3D;&#x3D;单位是eV</p><h2 id="1-2-物质波"><a href="#1-2-物质波" class="headerlink" title="1.2 物质波"></a>1.2 物质波</h2><h3 id="1-2-1-物质波"><a href="#1-2-1-物质波" class="headerlink" title="1.2.1 物质波"></a>1.2.1 物质波</h3><p>实物粒子具有波动性</p><p>$E&#x3D;h\nu&#x3D;\hbar\omega$</p><p>$\vec p&#x3D;\dfrac h\lambda\vec n&#x3D;\hbar k\vec n$</p><h2 id="1-3-1-4-波函数和态叠加原理-薛定谔方程"><a href="#1-3-1-4-波函数和态叠加原理-薛定谔方程" class="headerlink" title="1.3&amp;1.4 波函数和态叠加原理&amp;薛定谔方程"></a>1.3&amp;1.4 波函数和态叠加原理&amp;薛定谔方程</h2><h3 id="1-4-1-波函数"><a href="#1-4-1-波函数" class="headerlink" title="1.4.1 波函数"></a>1.4.1 波函数</h3><p>波函数用平面波描述：</p><ol><li>&#x3D;&#x3D;自由粒子：$\Psi(x,t)&#x3D;Ae^{i(kx-\omega t)}&#x3D;Ae^{\frac i\hbar(px-Et)}$&#x3D;&#x3D;</li><li>势场中的粒子：$\Phi(\vec r,t)$</li></ol><p>纹间距$\Delta\propto\lambda,\lambda&#x3D;\dfrac h{mv}$</p><p>性质：单值、有限（全空间中模长积分为0）、连续</p><p>$\int_{-\infty}^{\infty} x^n e^{-\alpha x^2} dx &#x3D; 0 \quad \text{（n 为奇数）}$</p><p>$\int_{-\infty}^{\infty} x^{2k} e^{-\alpha x^2} dx &#x3D; \frac{(2k - 1)!!}{(2\alpha)^k} \sqrt{\frac{\pi}{\alpha}}$</p><p>&#x3D;&#x3D;特别一些，$\int_{-\infty}^\infty x^{2k}e^{-x^2}dx&#x3D;(2k-1)!!\sqrt{\pi}$&#x3D;&#x3D;</p><p>&#x3D;&#x3D;再特别一些，$\int_{-\infty}^\infty e^{-x^2}dx&#x3D;\sqrt{\pi}$&#x3D;&#x3D;</p><h3 id="1-4-2波函数的应用"><a href="#1-4-2波函数的应用" class="headerlink" title="1.4.2波函数的应用"></a>1.4.2波函数的应用</h3><ol><li>电子绕核转动形成环形驻波：$2\pi r&#x3D;n\lambda;\lambda&#x3D;\dfrac h{mv}\Rightarrow L&#x3D;mvr&#x3D;n\hbar$</li><li>一维无限深势阱驻波：$L&#x3D;n\dfrac \lambda 2\Rightarrow p &#x3D; \dfrac h\lambda&#x3D;n\dfrac h{2L};E_n&#x3D;\dfrac{p^2}{2m}&#x3D;n^2\dfrac{h^2}{8mL^2}$</li></ol><h3 id="1-4-3波函数的统计解释"><a href="#1-4-3波函数的统计解释" class="headerlink" title="1.4.3波函数的统计解释"></a>1.4.3波函数的统计解释</h3><ol><li><p>亮度：德布罗意波强度的大小$\left |\Psi\right |^2&#x3D;\Psi\Psi^*&#x3D;\begin{cases}极大值，&amp;亮条纹\0，极小值，&amp;暗条纹\end{cases}$</p><p>亮度的物理意义为概率密度</p></li><li><p>波函数满足条件</p><ol><li><p>单值，任何地方不可能有多个波函数（概率密度）</p></li><li><p>有限：$\int\limits_\Omega\left | \Psi(\vec r,t)\right |^2dV&#x3D;1（\Omega为全空间）$</p><p>（但不排除有些孤立奇点趋于无穷</p></li><li><p>连续：二阶导存在</p></li></ol></li></ol><h3 id="1-3-1-薛定谔方程"><a href="#1-3-1-薛定谔方程" class="headerlink" title="1.3.1 薛定谔方程"></a>1.3.1 薛定谔方程</h3><ol><li><p>自由粒子的薛定谔方程</p><p>&#x3D;&#x3D;$i\hbar \dfrac{\partial}{\partial t}\Psi(x,t)&#x3D;-\dfrac{\hbar^2}{2m}\dfrac{\partial}{\partial x    ^2}\Psi(x,t)$&#x3D;&#x3D;</p><ol><li><p>推广到势场$U(x,t)$</p><p>&#x3D;&#x3D;$i\hbar \dfrac{\partial}{\partial t}\Psi(x,t)&#x3D;\left[-\dfrac{\hbar^2}{2m}\dfrac{\partial}{\partial x    ^2}+U(x,t)\right]\Psi(x,t)$&#x3D;&#x3D;</p></li><li><p>推广到三维情况</p><p>$\nabla^2&#x3D;\dfrac{\partial^2}{\partial x^2}+\dfrac{\partial^2}{\partial y^2}+\dfrac{\partial^2}{\partial z^2}$</p><p>&#x3D;&#x3D;$\hat H&#x3D;-\dfrac{\hbar^2}{2m}\nabla^2+U(\vec r,t)$&#x3D;&#x3D;</p><p>$i\hbar\dfrac{\partial}{\partial t}\Psi(\vec r,t)&#x3D;\hat H\Psi(\vec r, t)$</p></li></ol></li><li><p>定态薛定谔方程(粒子在空间中出现的概率是稳定不变的)</p><p>若$\dfrac{\partial\hat H}{\partial t}&#x3D;0$或者$U$与时间无关，则薛定谔方程可以分离变量</p><ol><li><p>分离变量</p><ol><li>&#x3D;&#x3D;$i\hbar\dfrac{dT(t)}{dt}&#x3D;ET(t)$&#x3D;&#x3D;</li><li>&#x3D;&#x3D;$\hat H\Phi(\vec r)&#x3D;E\Phi(\vec r)$&#x3D;&#x3D;</li></ol></li><li><p>振动因子</p><p>分离变量方程1的解为$T(t)&#x3D;Ce^{-\frac ihEt}$</p></li><li><p>定态薛定谔方程（能量本征方程）就是方程2</p><p>&#x3D;&#x3D;$\left(-\dfrac{\hbar^2}{2m}\nabla^2+U(\vec r)\right)\Phi(\vec r)&#x3D;E\Phi(\vec r)$&#x3D;&#x3D;</p><p>通解：$\Psi(x,t)&#x3D;\sum\limits_{n&#x3D;1}^{\infty}c_ne^{-\frac{iE_nt}\hbar}\Phi_n(x)$</p></li></ol><p>定态：能量取特定值的状态，薛定谔方程的特解</p><p>&#x3D;&#x3D;判断是否是定态：$\left | \Psi(x,t)\right |^2&#x3D;\Psi(x,t)^*\cdot\Psi(x,t)$是否与$t$相关，不相关则定态&#x3D;&#x3D;</p></li></ol><h3 id="1-3-2-不确定度关系"><a href="#1-3-2-不确定度关系" class="headerlink" title="1.3.2 不确定度关系"></a>1.3.2 不确定度关系</h3><p>$\Delta x\cdot\Delta p_x\geq\dfrac{\hbar}2$</p><p>$\Delta y\cdot\Delta p_y\geq\dfrac{\hbar}2$</p><p>$\Delta z\cdot\Delta p_z\geq\dfrac{\hbar}2$</p><p>$\Delta E\cdot \Delta t\geq \dfrac \hbar 2$</p><h3 id="1-3-3-几率流密度矢量"><a href="#1-3-3-几率流密度矢量" class="headerlink" title="1.3.3 几率流密度矢量"></a>1.3.3 几率流密度矢量</h3><p>&#x3D;&#x3D;$i\hbar(\Psi^<em>\Psi)&#x3D;\dfrac{\hbar^2}{2m}\nabla\cdot[\Psi\nabla\Psi^</em>-\Psi^*\nabla\Psi]$&#x3D;&#x3D;</p><p>几率密度：$\rho&#x3D;\Psi^*\Psi$</p><p>几率流密度矢量：&#x3D;&#x3D;$\vec J&#x3D;\dfrac{i\hbar}{2m}[\Psi\nabla\Psi^<em>-\Psi^</em>\nabla\Psi]$&#x3D;&#x3D;</p><p>几率守恒方程：</p><pre><code>微分形式：$\dfrac \partial&#123;\partial t&#125;\rho+\nabla\cdot\vec J=0$积分形式：$\frac&#123;d&#125;&#123;dt&#125;\int_\tau\rho(\vec r,t)d\tau=-\oint_S \vec J\cdot d\vec S$</code></pre><p>左边：闭区域$\tau$内找到粒子的总几率（或粒子数）在单位时间内的增量</p><p>右边：单位时间内通过$\tau$的封闭表面 $S$流入（面积分前面的负号）$\tau$内的几率（或粒子数）</p><h3 id="1-3-3-叠加态"><a href="#1-3-3-叠加态" class="headerlink" title="1.3.3 叠加态"></a>1.3.3 叠加态</h3><ol><li><p>若$\Psi_1,\Psi_2,\cdots,\Psi_n$是粒子的可能状态，则粒子也可处在它们的线性叠加态$\Psi&#x3D;\sum\limits_{i&#x3D;1}^nc_i\Psi_i$</p></li><li><p>处于$\Psi态时，部分地处于每种态，处于\Psi_k态的几率是\left|c_k\right|^2$，且$\sum\limits_{k&#x3D;1}^n\left|c_k\right|^2&#x3D;1$</p><p>条件：</p><ol><li>$\Psi_1,\cdots,\Psi_n$正交归一</li><li>$\Psi$满足归一化条件$\int\Psi^*\Psi_ldx&#x3D;\delta_{kl}&#x3D;\begin{cases}1&amp;k&#x3D;l\0&amp;k\neq l\end{cases}$</li></ol></li></ol><h3 id="1-4-4-无限深阱势中的粒子"><a href="#1-4-4-无限深阱势中的粒子" class="headerlink" title="1.4.4 无限深阱势中的粒子"></a>1.4.4 无限深阱势中的粒子</h3><p>&#x3D;&#x3D;$\Phi(x)&#x3D;\begin{cases}\sqrt{\dfrac{2}{a}}\sin\dfrac{n\pi}ax &amp;0&lt;x&lt;a&amp;阱内\0&amp;x\leq0,x\geq a&amp;阱外\end{cases}$&#x3D;&#x3D;</p><p>性质：</p><ol><li>正交性：$\int\limits_{-\infty}^{+\infty}\Phi^*<em>m(x)\Phi_n(x)dx&#x3D;\delta</em>{mn}&#x3D;\begin{cases}1&amp;m&#x3D;n\0&amp;m\ne n\end{cases}$</li><li>通过初始状态确定每一个本征波函数的系数</li><li>基态是$E_1$，第n激发态是$E_{n+1}$，&#x3D;&#x3D;$E_n&#x3D;\dfrac{n^2\pi^2\hbar^2}{2ma^2}$&#x3D;&#x3D;</li><li>边界条件：函数连续且一阶导连续</li></ol><h2 id="1-5-物理量与算符"><a href="#1-5-物理量与算符" class="headerlink" title="1.5 物理量与算符"></a>1.5 物理量与算符</h2><ol><li><p>位置算符：$\hat x\rightleftharpoons x$</p></li><li><p>动量算符：$\hat p \rightleftharpoons -i\hbar\nabla$</p></li><li><p>总能量算符：$\hat H\rightleftharpoons-\dfrac{\hbar^2}{2m}\nabla^2+U(\vec r)$</p></li><li><p>设算符为$\hat A$，则以下物理量的&#x3D;&#x3D;平均值为$\int_{-\infty}^\infty \Psi^*\hat A\Psi dx$&#x3D;&#x3D;</p><table><thead><tr><th>物理量</th><th>坐标空间表示（$x$ 表象）</th><th>动量空间表示（$p$ 表象）</th><th>说明</th></tr></thead><tbody><tr><td>位置算符$\hat{x}$</td><td>$\hat{x} &#x3D; x$</td><td>$\hat{x} &#x3D; i\hbar \frac{d}{dp}$</td><td>乘法&#x2F;导数互为傅里叶对</td></tr><tr><td>动量算符$\hat{p}$</td><td>&#x3D;&#x3D;$\hat{p} &#x3D; -i\hbar \frac{d}{dx}$&#x3D;&#x3D;</td><td>$\hat{p} &#x3D; p$</td><td></td></tr><tr><td>动能算符$\hat{T}$</td><td>&#x3D;&#x3D;$\hat{T} &#x3D; -\frac{\hbar^2}{2m} \frac{d^2}{dx^2}$&#x3D;&#x3D;</td><td>$\hat{T} &#x3D; \frac{p^2}{2m}$</td><td></td></tr><tr><td>势能算符$\hat{U}(x)$</td><td>&#x3D;&#x3D;$\hat{U}(x) &#x3D; U(x)$&#x3D;&#x3D;</td><td>$\hat{U}(x) &#x3D; U(i\hbar \frac{d}{dp})$</td><td>非平移不变势变成微分算符</td></tr><tr><td>哈密顿量$\hat{H}$</td><td>&#x3D;&#x3D;$\hat{H} &#x3D; -\frac{\hbar^2}{2m} \nabla^2 + U(x)$&#x3D;&#x3D;</td><td>$\hat{H} &#x3D; \frac{p^2}{2m} + U(i\hbar \frac{d}{dp})$</td><td>总能量</td></tr><tr><td>力矩$\hat{L}_z$</td><td>$\hat{L}_z &#x3D; -i\hbar \left( x \frac{\partial}{\partial y} - y \frac{\partial}{\partial x} \right)$</td><td>$\hat{L}_z &#x3D; -i\hbar \left( p_x \frac{\partial}{\partial p_y} - p_y \frac{\partial}{\partial p_x} \right)$</td><td>平面角动量（z分量）</td></tr><tr><td>总角动量$\hat{\vec{L}}$</td><td>$\hat{\vec{L}} &#x3D; -i\hbar \vec{r} \times \nabla$</td><td>$\hat{\vec{L}} &#x3D; -i\hbar \vec{p} \times \nabla_p$</td><td>三维角动量向量</td></tr><tr><td>角动量平方$\hat{L}^2$</td><td>$\hat{L}^2 &#x3D; -\hbar^2 \left( \frac{1}{\sin \theta} \frac{\partial}{\partial \theta} \left( \sin \theta \frac{\partial}{\partial \theta} \right) + \frac{1}{\sin^2 \theta} \frac{\partial^2}{\partial \phi^2} \right)$</td><td>同左（在$p$ 空间极坐标中结构相同）</td><td>球坐标形式，常见于中心势问题</td></tr><tr><td>$\hat{L}_x$</td><td>$-i\hbar (y \dfrac \partial{\partial z} - z \dfrac{\partial}{\partial y})$</td><td>同形式</td><td>角动量 x 分量</td></tr><tr><td>$\hat{L}_y$</td><td>$-i\hbar (z \dfrac\partial{\partial x} - x \dfrac\partial{\partial z})$</td><td>同形式</td><td>角动量 y 分量</td></tr><tr><td>$\hat{L}_z$</td><td>$-i\hbar (x \dfrac\partial{\partial y} - y \dfrac\partial{\partial x})$</td><td>同形式</td><td>角动量 z 分量</td></tr><tr><td>自旋$\hat{S}_x$</td><td>$\hat{S}_x &#x3D; \frac{\hbar}{2} \begin{pmatrix} 0 &amp; 1 \ 1 &amp; 0 \end{pmatrix}$</td><td>同左</td><td>Pauli 矩阵$\sigma_x$</td></tr><tr><td>自旋$\hat{S}_y$</td><td>$\hat{S}_y &#x3D; \frac{\hbar}{2} \begin{pmatrix} 0 &amp; -i \ i &amp; 0 \end{pmatrix}$</td><td>同左</td><td>Pauli 矩阵$\sigma_y$</td></tr><tr><td>自旋$\hat{S}_z$</td><td>$\hat{S}_z &#x3D; \frac{\hbar}{2} \begin{pmatrix} 1 &amp; 0 \ 0 &amp; -1 \end{pmatrix}$</td><td>同左</td><td>Pauli 矩阵$\sigma_z$</td></tr><tr><td>粒子数算符$\hat{N}$</td><td>$\hat{N} &#x3D; \hat{a}^\dagger \hat{a}$</td><td>同左</td><td>通常用于谐振子&#x2F;量子场理论</td></tr></tbody></table></li><li><p>算符的运算规则</p><ol><li><p>线性算符</p></li><li><p>算符之和：$(\hat A+\hat B)\psi&#x3D;\hat A\psi+\hat B\psi$</p></li><li><p>算符之积：$(\hat A\hat B)\phi&#x3D;\hat A(\hat B\phi)$</p></li><li><p>$\left[\hat A\hat B-\hat B\hat A\right ]&#x3D;\hat A\hat B-\hat B\hat A为方程\hat A和\hat B的对易式，若为0，则两者对易$</p></li><li><p>算符的本征方程（类似矩阵的特征值）$\hat A\varphi&#x3D;\lambda\phi$</p></li><li><p>算符的复共轭：所有复量换成共轭复量</p></li><li><p>厄密算符（厄密算符的共轭转置等于本身）</p><p>若两个任意的波函数$\psi$和$\varphi$，满足$\int\psi^<em>\hat F\varphi d\tau&#x3D;\int(\hat F\psi)^</em>\varphi d\tau,d\tau\equiv dxdydz$</p><p>常见厄密算符：位置算符、动量算符、能量算符</p><p>量子力学中的力学量算符都是厄密的</p></li></ol></li><li><p>厄密算符</p><ol><li><p>实数性：本征值为实数</p></li><li><p>正交性：任意两个本征函数总是正交的</p><p>函数的正交：$\int\psi^*_1(\vec r)\psi_2(\vec r)d\tau&#x3D;0$</p></li><li><p>完备性：</p></li><li><p>即对任一模平方可积函数$\psi$，可表示为$\psi(\vec r)&#x3D;\sum\limits_nc_n\psi_n(\vec r)$，这也可称为广义傅立展开</p></li></ol></li></ol><h2 id="1-6-力学的测量值-测量与量子态的坍缩"><a href="#1-6-力学的测量值-测量与量子态的坍缩" class="headerlink" title="1.6 力学的测量值 测量与量子态的坍缩"></a>1.6 力学的测量值 测量与量子态的坍缩</h2><ol><li>粒子处于本征态$\psi _n$时，测量值是确定的，为本征值$\lambda_n$</li><li>如果体系 $\psi(\vec{r})&#x3D;\sum\limits_n c_n \psi_{n}(\vec{r})$ 不处于 F 的本征态，它的力学量的测量值不是确定的：测量值可能为任意一个本征态 $\psi_{n}$ 对应的本征值 $\lambda_{n}(n&#x3D;1,2,…)$，对应的概率分布为 $|c_n|^2$。<br>$c_{n}&#x3D;\int \psi_{n}^{*}(\vec{r}) \psi(\vec{r}) d\tau$<br>$c_{n}$ 代表了两个态的“相似程度”→ 测量坍缩到本征态 $\psi_{n}$ 的概率</li><li>第一次测量之后，量子态会坍缩为一个$\psi_n$，第二次测量时，体系的态就是$\psi_n$了</li><li>物理量的偏差为方均根偏差，即$\Delta x &#x3D; &lt;x^2&gt;-<x>^2$</li></ol><h2 id="1-7-不同力学量能同时确定的条件"><a href="#1-7-不同力学量能同时确定的条件" class="headerlink" title="1.7 不同力学量能同时确定的条件"></a>1.7 不同力学量能同时确定的条件</h2><p>&#x3D;&#x3D;两个力学量能同时确定（即具有共同本征态）的充分必要条件是它们的算符对易。&#x3D;&#x3D;</p><p>角动量算符互相不对易</p><p>角动量平方算符与其分量对应</p><p>角动量算符与坐标算符对应</p><p>&#x3D;&#x3D;角动量算符本征值：$l&#x3D;0,1,2,\cdots,m&#x3D;l,l-1,\cdots,-l+1,-l$，对应的本征函数（波函数）是$\Psi_m(\varphi)&#x3D;\dfrac1{\sqrt{2\pi}}e^{im\varphi}$&#x3D;&#x3D;</p><p>球谐函数$Y_{lm}$是$\hat L^2$和$\hat L_z$共同的本征函数</p><p>$\hat L^2 Y_{lm}(\theta,\varphi)&#x3D;l(l+1)\hbar^2Y_{lm}(\theta,\varphi)$</p><p>$\hat L_zY_{lm}(\theta,\varphi)&#x3D;m\hbar Y_{lm}(\theta,\varphi)$</p><p>角动量大小：&#x3D;&#x3D;$\sqrt{l(l+1)}\hbar$&#x3D;&#x3D;</p><p>$l&#x3D;0,1,\cdots,n-1;m&#x3D;-l,-l+1,\cdots,l-1,l$</p><p>谐振子能量是量子化的&#x3D;&#x3D;$E_n&#x3D;(n+\dfrac12)\hbar\omega$&#x3D;&#x3D;</p><p>波函数$\Psi_n(x)&#x3D;\left(\dfrac{\alpha}{2^n\sqrt\pi n!}\right)^{1&#x2F;2}H_n(\alpha x)e^{-\dfrac12\alpha^2x^2},\alpha&#x3D;\sqrt{\dfrac{m\omega}{\hbar}}$</p><p>$H_n(\xi)&#x3D;(-1)^ne^{\xi}\dfrac{d^n}{d\xi^n}(e^{-\xi^2})$</p><p>$H_0(\xi)&#x3D;1,H_1(\xi)&#x3D;2\xi,H_2(\xi)&#x3D;4\xi^2-2,H_3(\xi)&#x3D;8\xi^3-12\xi$</p><p>n偶：偶宇称，n奇：奇宇称</p><table><thead><tr><th>参数</th><th>取值范围</th><th>描述</th><th>公式</th></tr></thead><tbody><tr><td>主量子数 (n)</td><td>$n &#x3D; 1, 2, 3, …$</td><td>能量大小</td><td>$E_n &#x3D; -13.6 \dfrac1{ n^2} eV$</td></tr><tr><td>轨道角量子数 (l)</td><td>$l &#x3D; 0, 1, 2, …, (n-1)$</td><td>角动量的大小</td><td>$L &#x3D; \sqrt{l(l+1)} ħ$</td></tr><tr><td>轨道磁量子数 (ml)</td><td>$m_l &#x3D; 0, ±1, ±2, …, ±l$</td><td>L 的 z 分量</td><td>$L_z &#x3D; m_l ħ$</td></tr><tr><td>自旋磁量子数 (ms)</td><td>$m_s &#x3D; ±1&#x2F;2$</td><td>S 的 z 分量</td><td>$S_z &#x3D; m_s ħ&#x3D;\pm\dfrac12\hbar$</td></tr></tbody></table><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h2 id="2-1-有限深势阱"><a href="#2-1-有限深势阱" class="headerlink" title="2.1 有限深势阱"></a>2.1 有限深势阱</h2><h2 id="2-2-方势垒"><a href="#2-2-方势垒" class="headerlink" title="2.2 方势垒"></a>2.2 方势垒</h2><p>$\begin{cases}\varPsi_1&#x3D;Ae^{ikx}+A’e^{-ikx}&amp;k&lt;0\\varPsi_2&#x3D;Be^{k’x}+B’e^{-k’x}&amp;0&lt;x&lt;a\\varPsi_3&#x3D;Ce^{ikx}&amp;x&gt;a\end{cases}$</p><p>反射系数：$R&#x3D;\dfrac{\left |A’\right |^2}{\left | A \right |^2}$</p><p>透射系数：$T&#x3D;\dfrac{\left |C\right |^2}{\left | A \right |^2}$</p><p>R+T&#x3D;1</p><h2 id="2-3-氢原子"><a href="#2-3-氢原子" class="headerlink" title="2.3 氢原子"></a>2.3 氢原子</h2><p>类氢原子：$E_n&#x3D;-\dfrac{m_eZ^2e^4}{2(4\pi\epsilon_0)^2\hbar^2n^2}$</p><p>$\varPsi(r,\theta,\varphi)&#x3D;R_{nl}(\theta,\varphi)Y_{lm}(\theta,\varphi)$，前者径向，后者角向（球谐函数）</p><h2 id="2-4-双态系统"><a href="#2-4-双态系统" class="headerlink" title="2.4 双态系统"></a>2.4 双态系统</h2><p>态空间是二维的，于是哈密顿算符变成哈密顿矩阵，薛定谔方程的矩阵形式变为：</p><p>$i\hbar\dfrac{\partial}{\partial t}\begin{pmatrix}C_1\C_2\end{pmatrix}&#x3D;\begin{pmatrix}H_{11}&amp;H_{12}\H_{21}&amp;H_{22}\end{pmatrix}\begin{pmatrix}C_1\C_2\end{pmatrix}$</p><p>取基矢，使$\hat H$为本征态，则有</p><p>$\begin{pmatrix}H_{11}&amp;H_{12}\H_{21}&amp;H_{22}\end{pmatrix}&#x3D;\begin{pmatrix}E_I&amp;0\0&amp;E_{II}\end{pmatrix}$，进一步得到$i\hbar\dfrac{\partial}{\partial t}\begin{pmatrix}C_I\C_{II}\end{pmatrix}&#x3D;\begin{pmatrix}E_I&amp;0\0&amp;E_{II}\end{pmatrix}\begin{pmatrix}C_I\C_{II}\end{pmatrix}$</p><h1 id="常用互易关系"><a href="#常用互易关系" class="headerlink" title="常用互易关系"></a>常用互易关系</h1><p>$[\hat{A} \hat{B}, \hat{C}] &#x3D; \hat{A} [\hat{B}, \hat{C}] + [\hat{A}, \hat{C}] \hat{B}$</p><p>&#x3D;&#x3D;$[\hat x,\hat y]&#x3D;0$&#x3D;&#x3D;</p><p>&#x3D;&#x3D;$[\hat p_x,\hat p_y]&#x3D;0$&#x3D;&#x3D;</p><p>&#x3D;&#x3D;$[\hat x,\hat p_x]&#x3D;i\hbar$&#x3D;&#x3D;</p><p>&#x3D;&#x3D;$[\hat x,\hat L_y]&#x3D;i\hbar z$&#x3D;&#x3D;</p><p>&#x3D;&#x3D;$[\hat x,\hat L_z]&#x3D;-i\hbar y$&#x3D;&#x3D;</p><p>&#x3D;&#x3D;$[x,\hat p_y]&#x3D;[x,\hat p_z]&#x3D;0$&#x3D;&#x3D;</p><p>$\left[\hat{L_x},\hat{L_y}\right]&#x3D;i\hbar\hat{L_z}$</p><p>$\left[\hat{L}^2,\hat{L_x}\right]&#x3D;0$</p><p>$[\hat H,\hat L_z]&#x3D;0$</p><p>$[\hat H,\hat p]&#x3D;0$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一章-量子物理基础&quot;&gt;&lt;a href=&quot;#第一章-量子物理基础&quot; class=&quot;headerlink&quot; title=&quot;第一章 量子物理基础&quot;&gt;&lt;/a&gt;第一章 量子物理基础&lt;/h1&gt;&lt;h2 id=&quot;1-1-光量子、玻尔原子&quot;&gt;&lt;a href=&quot;#1-1-光量子、玻</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    <category term="理论/Theory" scheme="https://ryanstarfox.github.io/tags/%E7%90%86%E8%AE%BA-Theory/"/>
    
  </entry>
  
  <entry>
    <title>马克思主义基本原理</title>
    <link href="https://ryanstarfox.github.io/2025/06/08/2025/202506%20%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/"/>
    <id>https://ryanstarfox.github.io/2025/06/08/2025/202506%20%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/</id>
    <published>2025-06-07T16:00:00.000Z</published>
    <updated>2025-06-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="马克思主义基本原理"><a href="#马克思主义基本原理" class="headerlink" title="马克思主义基本原理"></a>马克思主义基本原理</h1><h2 id="0-导论"><a href="#0-导论" class="headerlink" title="0 导论"></a>0 导论</h2><h3 id="0-1-什么是马克思主义"><a href="#0-1-什么是马克思主义" class="headerlink" title="0.1 什么是马克思主义?"></a>0.1 什么是马克思主义?</h3><p>马克思主义的三个基本组成部分：马克思主义哲学、马克思主义政治经济学、科学社会主义</p><p>学习把马克思主义基本原理：</p><ul><li>基本立场：马克思主义观察、分析和解决问题的根本立足点和出发点，以无产阶级的解放和全人类的解放为己任，以人的自由而全面发展为美好目标，以人民为中心，坚持一切为了人民，一切依靠人民，全心全意为人民谋幸福</li><li>基本观点：<ul><li>关于自然、社会和人类思维发展一般规律的科学认识</li><li>对资本主义社会和社会主义社会发展规律的科学认识</li><li>对人类思想成果和社会实践经验的科学总结</li></ul></li><li>基本方法：是建立在<strong>辩证唯物主义</strong>和<strong>历史唯物主义</strong>世界观和方法论基础上，指导我们正确认识世界和改造世界的思想方法和工作方法</li></ul><h3 id="0-2-马克思主义的创立和发展"><a href="#0-2-马克思主义的创立和发展" class="headerlink" title="0.2 马克思主义的创立和发展"></a>0.2 马克思主义的创立和发展</h3><p>马克思主义的社会根源、阶级基础和思想根源：</p><ul><li><p>社会根源：</p><ul><li>社会两极分化，工人极端困苦</li><li>周期性经济危机频繁爆发</li></ul></li><li><p>阶级基础：工人运动的兴起，标志着现代无产阶级作为独立的政治力量登上了历史舞台。</p><ul><li>法国里昂工人起义</li><li>英国宪章运动</li><li>德国西里西亚织工起义</li></ul></li><li><p>思想根源：</p><ul><li>直接的理论来源：德国古典哲学、英国古典政治经济学、英法空想社会主义</li><li>自然科学前提：19 世纪的三大科学发现，即细胞学说、能量守恒与转化定律、生物进化论</li></ul></li></ul><h2 id="著作："><a href="#著作：" class="headerlink" title="著作："></a>著作：</h2><ul><li>马恩合写《德意志意识形态》，首次系统阐述了历史唯物主义的基本观点，实现了历史观上的伟大变革。</li><li>《共产党宣言》发表，标志着马克思主义的公开问世。</li><li>《资本论》系统阐述了剩余价值学说。<strong>唯物史观</strong>和<strong>剩余价值学说</strong>是马克思一生的两个伟大发现。</li><li>1876-1878，恩格斯写出了《反杜林论》，全面阐述了马克思主义理论体系。</li></ul><p>马克思主义创新发展的基本路径：</p><ul><li>本土化和时代化是马克思主义创新发展的基本路径。<ul><li>本土化：马克思主义基本原理与各国国情相结合，并在各国落地生根、开花结果的过程；</li><li>时代化：马克思主义基本原理与时代特征相结合，回答新的时代问题，始终把握时代、引领时代的过程。</li></ul></li></ul><p>马克思主义中国化成果：</p><ul><li>毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观、习近平新时代中国特色社会主义思想。</li></ul><h3 id="0-3-马克思主义的基本特征"><a href="#0-3-马克思主义的基本特征" class="headerlink" title="0.3 马克思主义的基本特征"></a>0.3 马克思主义的基本特征</h3><p>马克思主义的基本特征：鲜明的科学性、人民性、实践性、发展性（科学性与革命性的统一），这些是马克思主义的本质、使命、理论形象。</p><ul><li>科学的理论：马克思主义是对自然、社会和人类思维发展本质和规律的正确反映。它是在<strong>社会实践</strong>和<strong>科学发展</strong>的基础上产生的，并在自身发展过程中不断总结实践经验，吸取自然科学和社会科学发展的最新成就。</li><li>人民的理论：<strong>人民性</strong>是马克思主义的<strong>本质属性</strong>，人民至上是马克思主义的政治立场。</li><li>实践的理论：马克思主义是从实践中来、到实践中去、在实践中接受检验，并随实践而不断发展的学说。</li><li>发展的理论：马克思主义是不断发展的开放的学说，具有与时俱进的理论品质。马克思主义是时代的产物，并随着时代、实践和科学的发展而不断发展。</li></ul><h2 id="1世界的物质性及发展规律"><a href="#1世界的物质性及发展规律" class="headerlink" title="1世界的物质性及发展规律"></a>1世界的物质性及发展规律</h2><h3 id="1-1-世界的多样性与物质统一性"><a href="#1-1-世界的多样性与物质统一性" class="headerlink" title="1.1 世界的多样性与物质统一性"></a>1.1 世界的多样性与物质统一性</h3><h4 id="1-1-1-物质及其存在方式"><a href="#1-1-1-物质及其存在方式" class="headerlink" title="1.1.1 物质及其存在方式"></a>1.1.1 物质及其存在方式</h4><p>全部哲学的基本问题： 存在和思维的关系问题（物质和意识的关系问题）</p><p>哲学基本问题主要包括两方面内容：</p><ul><li>谁为本原（何者为第一性）——唯心主义&amp;唯物主义</li><li>是否具有同一性的问题（思维能否正确地反映存在、人能否认识或彻底认识世界的问题）——可知论&amp;不可知论</li></ul><p>唯物主义哲学的理论基石：物质范畴</p><p>哲学中，物质的定义：</p><ul><li>物质是不依赖于人类的意识而存在，并能为人类的意识所反映的客观实在。</li></ul><p>马克思主义的物质观：<strong>客观实在性</strong>是物质的唯一特性。</p><ol><li>坚持唯物主义一元论</li><li>坚持能动的反映论和可知论</li><li>唯物论和辩证法的统一</li><li>唯物主义自然观与历史观的统一。</li></ol><p>物质的根本属性：</p><ul><li><p>物质的根本属性是运动。</p></li><li><p>运动绝对，静止相对（空间相对位置、事物根本属性的相对静止）</p></li><li><p>基本存在属性：时间（一维性）和空间（三维性）</p><p>两者不可分割，证明了两者客观性。</p></li><li><p>物质、运动、时间、空间具有内在的统一性，要求我们想问题要看具体时间地点条件</p></li></ul><p>物质世界的二重化</p><ul><li>世界分化为自然界与人类社会</li><li>世界分化为客观世界和主观世界</li><li>人的实践活动是分化和统一的关键</li></ul><h4 id="1-1-2-物质与意识的辩证关系"><a href="#1-1-2-物质与意识的辩证关系" class="headerlink" title="1.1.2 物质与意识的辩证关系"></a>1.1.2 物质与意识的辩证关系</h4><ul><li><p>物质决定意识</p><ul><li>意识<ul><li>人脑的机能和属性</li><li>客观世界的主观映象</li><li>客观内容和主观形式的统一</li><li>物质对意识的决定作用表现在意识的起源和本质上</li></ul></li></ul></li><li><p>意识对物质具有反作用</p><ul><li>目的性、计划性</li><li>创造性</li><li>指导实践改造客观世界的作用</li><li>调控人的行为和生理活动的作用</li></ul></li><li><p>主观能动性和客观规律性的统一</p><ul><li><p>尊重客观规律是正确发挥主观能动性的前提</p></li><li><p>只有充分发挥主观能动性，才能正确认识和利用客观规律</p><ul><li>前提：从实际出发</li><li>根本途径：实践</li><li>依赖于物质条件和物质手段</li></ul></li><li><p>坚持遵循客观规律与发挥主观能动性相统一，要求充分发扬历史主动精神</p></li></ul></li><li><p>意识与人工智能</p><ul><li>人类意识是知情意的统一体，而人工智能只是对人类的理性智能的模拟和扩展</li><li>社会性是人的意识所固有的本质属性，而人工智能不可能真正具备人类的社会属性</li><li>人类的自然语言是思维的物质外壳和意识的现实形式，而人工智能难以完全具备理解自然语言真实意义的能力</li><li>人工智能能够获得人类意识中可以化约为数字信号的内容，但人脑中总有许多东西是无法被化约的</li></ul></li></ul><p>规律：</p><ul><li>规律是事物变化发展过程中本身所固有的内在的、本质的、必然的联系</li></ul><h4 id="1-1-3世界的物质统一性"><a href="#1-1-3世界的物质统一性" class="headerlink" title="1.1.3世界的物质统一性"></a>1.1.3世界的物质统一性</h4><p>世界的统一性在于它的物质性，世界统一于物质。这是辩证唯物主义最基本、最核心的观点，是马克思主义的基石</p><ul><li>自然界是物质的。</li><li>人类社会本质上是生产实践基础上形成的物质体系。</li><li>人的意识统一于物质。</li></ul><h3 id="⭐️1-2-事物的普遍联系和变化发展"><a href="#⭐️1-2-事物的普遍联系和变化发展" class="headerlink" title="⭐️1.2 事物的普遍联系和变化发展"></a>⭐️1.2 事物的普遍联系和变化发展</h3><h4 id="1-2-1-联系和发展的普遍性"><a href="#1-2-1-联系和发展的普遍性" class="headerlink" title="1.2.1 联系和发展的普遍性"></a>1.2.1 联系和发展的普遍性</h4><p>联系和发展的观点是唯物辩证法的总观点，集中体现了唯物辩证法的总特征。</p><p>事物的普遍联系：</p><ul><li><p>客观性 ，坚持联系的客观性，就是在联系的观点上坚持了唯物论</p></li><li><p>普遍性 （三重含义）</p><ul><li>事物内部不同部分和要素之间相互联系（内在结构性）</li><li>任何事物不能孤立存在，都同其他事物处于一定的联系之中</li><li>整个世界是相互联系的统一整体</li></ul></li><li><p>多样性</p><ul><li>直接联系与间接联系</li><li>内部联系与外部联系</li><li>本质联系与非本质联系</li><li>必然联系与偶然联系</li></ul></li><li><p>条件性</p><ul><li>支持或制约作用</li><li>条件可以改变</li><li>改变和创造条件不是任意的</li></ul></li></ul><p>事物的变化发展：</p><ul><li><p>实质：新事物的产生和旧事物的灭亡</p><ul><li>判断新旧，不在于形式与出现时间先后</li><li>新事物是指合乎历史前进方向、具有远大前途的东西</li><li>旧事物是指丧失历史必然性、日趋灭亡的东西。</li></ul></li><li><p>在新陈代谢的发展中，新事物不可战胜的</p><ul><li>新事物与环境：有新的要素、结构和功能，它适应已经变化了的环境和条件</li><li>新事物与旧事物：新事物是在旧事物的“母体”中孕育成熟的，否定了旧事物中消极腐朽的东西，又保留了旧事物中合理的、适应新条件的因素，并添加了旧事物所不能容纳的新内容。</li><li><strong>社会历史领域</strong>：根本上符合人民群众的利益和要求，能够得到人民群众的拥护，因而必然战胜旧事物。</li></ul></li></ul><h4 id="1-2-2-对立统一规律是事物发展的根本规律"><a href="#1-2-2-对立统一规律是事物发展的根本规律" class="headerlink" title="1.2.2 对立统一规律是事物发展的根本规律"></a>1.2.2 对立统一规律是事物发展的根本规律</h4><ul><li>对立统一规律是唯物辩证法的实质和核心。</li><li>对立统一规律揭示了事物普遍联系的根本内容和变化发展的内在动力，从根本上回答了事物为什么会发展的问题。</li></ul><p>事物变化发展的一般规律</p><ul><li>对立统一规律 （根本规律）（内在动力）</li><li>量变质变规律（状态、过程和趋势）</li><li>否定之否定规律（状态、过程和趋势）</li></ul><p>矛盾是反映事物内部、之间对立统一关系</p><ul><li><p>基本属性：对立（斗争性）和统一（同一性），两者相互依存、相互转化</p></li><li><p>同一性作用</p><ul><li>是事物存在和发展的前提</li><li>使矛盾双方相互吸取有利于自身的因素，在相互作用中各自得到发展</li><li>同一性规定着事物转化的可能和发展的趋势</li></ul></li><li><p>矛盾的斗争性在事物发展中的作用表现在：</p><ul><li>矛盾双方的斗争促进矛盾双方力量的变化，造成双方力量发展的不平衡，为对立面的转化、事物的质变创造条件</li><li>矛盾双方的斗争是一种矛盾统一体向另一种矛盾统一体过渡的决定性力量。</li></ul></li><li><p>矛盾的同一性和斗争性相互联结、相辅相成</p><ul><li><p>没有斗争性就没有同一性，没有同一性也没有斗争性</p></li><li><p>斗争性寓于同一性之中，同一性通过斗争性来体现。</p></li><li><p>矛盾的同一性是有条件的、相对的，矛盾的斗争性是无条件的、绝对的</p></li><li><p>矛盾的同一性和斗争性相结合，构成了事物的矛盾运动，推动着事物的变化发展</p><p>要善于把二者结合起来</p></li></ul></li></ul><h5 id="⭐️1-2-2-2-矛盾的普遍性和特殊性及其相互关系"><a href="#⭐️1-2-2-2-矛盾的普遍性和特殊性及其相互关系" class="headerlink" title="⭐️1.2.2.2 矛盾的普遍性和特殊性及其相互关系"></a>⭐️1.2.2.2 矛盾的普遍性和特殊性及其相互关系</h5><p>矛盾的普遍性：矛盾存在于一切事物的一切发展过程中</p><p>矛盾的特殊性：每个事物、阶段各有其特点；决定了事物的不同性质。</p><p>事物的性质是由主要矛盾的主要方面所决定的：</p><ul><li>主要矛盾&amp;次要矛盾</li><li>在每一对矛盾中，主要方面&amp;次要方面。</li></ul><p>要坚持“两点论”和“重点论”的统一：</p><ul><li><p>“两点论”</p><ul><li>不仅要看到矛盾双方的对立，而且要看到矛盾双方的统一；</li><li>不仅要看到矛盾体系中存在主要矛盾、矛盾的主要方面， 而且要看到次要矛盾、矛盾的次要方面。</li></ul></li><li><p>“重点论”是指要着重把握主要矛盾、矛盾的主要方面，并以此作为解决问题的出发点。</p></li><li><p>“两点论”和 “重点论”的统一要求我们，看问题既要全面地看，又要看主流、大势、发展趋势</p></li></ul><p>矛盾的普遍性与特殊性的辩证统一关系：矛盾的普遍性和特殊性是辩证统一、相互联系、不可分割的：p47</p><ul><li>矛盾的共性是无条件的、绝对的，矛盾的个性是有条件的、相对的。</li><li>普遍性寓于特殊性之中</li><li>特殊性包含普遍性</li><li>普遍性和特殊性在一定条件下相互转化（对于范围的视角的变化）</li></ul><h5 id="1-2-2-3-量变质变规律和否定之否定规律"><a href="#1-2-2-3-量变质变规律和否定之否定规律" class="headerlink" title="1.2.2.3 量变质变规律和否定之否定规律"></a>1.2.2.3 量变质变规律和否定之否定规律</h5><h6 id="量变质变的辩证关系"><a href="#量变质变的辩证关系" class="headerlink" title="量变质变的辩证关系"></a>量变质变的辩证关系</h6><ol><li>量变是质变的必要准备：质变以量变积累为前提</li><li>质变是量变的必然结果，并为新的量变开辟道路：量变积累达到一定程度，突破界限时，必然引起质变</li><li>量变和质变相互渗透</li></ol><ul><li>量变过程包含着部分质变&#x2F;阶段性质变。</li><li>质变过程包含着量的扩张或收缩</li></ul><p>事物的发展表现为：由量变到质变，在新质的基础上又开始新的量变，再到新的质变，如此循环往复，不断前进。</p><p>量变质变规律体现了事物发展的<strong>渐进性</strong>和<strong>飞跃性</strong>的统一。</p><p>量变质变规律的方法论意义：重视量的积累；抓住时机，促成质变</p><h6 id="否定之否定规律"><a href="#否定之否定规律" class="headerlink" title="否定之否定规律"></a>否定之否定规律</h6><p>事物的发展：通过其内在矛盾运动以自我否定的方式而实现的</p><p>否定之否定规律：揭示事物自己发展自己的完整过程及本质。</p><p>唯物辩证法的否定观（否定的深刻内涵）</p><ul><li>事物内部存在肯定因素（维持现存事物存在）和否定因素（促使现存事物灭亡）</li><li>是自我否定、自我发展，是事物内部矛盾运动的结果，非外力强加</li><li>是发展的环节、通过且仅通过否定，旧事物向新事物转变</li><li>联系的环节： 新旧事物是通过否定环节联系起来的。</li><li>辩证否定的实质是“扬弃”，即新事物对旧事物既批判又继承，既克服其消极因素又保留其积极因素</li></ul><p>事物的辩证否定经过三个阶段：肯定一否定一否定之否定</p><ol><li>事物发展的周期性：一个新的、更高层次的肯定阶段，然后又开始新的否定之否定的螺旋上升过程。</li><li>前进性（每一次否定都是质变）和曲折性（前进性是趋势，但是并非一帆风顺）的统一</li><li>扬弃： 克服其消极的、过时的因素，保留和发扬其积极的、合理的因素，并增添新的内容</li></ol><h5 id="1-2-2-4-联系和发展的基本环节"><a href="#1-2-2-4-联系和发展的基本环节" class="headerlink" title="1.2.2.4 联系和发展的基本环节"></a>1.2.2.4 联系和发展的基本环节</h5><p>内容与形式、本质与现象、原因与结果、必然与偶然、现实与可能</p><h2 id="2-实践与认识及其发展规律"><a href="#2-实践与认识及其发展规律" class="headerlink" title="2 实践与认识及其发展规律"></a>2 实践与认识及其发展规律</h2><h3 id="2-1-实践与认识"><a href="#2-1-实践与认识" class="headerlink" title="2.1 实践与认识"></a>2.1 实践与认识</h3><h4 id="2-1-1-科学实践观（不断丰富发展的）"><a href="#2-1-1-科学实践观（不断丰富发展的）" class="headerlink" title="2.1.1 科学实践观（不断丰富发展的）"></a>2.1.1 科学实践观（不断丰富发展的）</h4><p>意义：</p><ul><li>克服旧唯物主义缺陷，为辩证唯物主义奠定理论基础</li><li>揭示了实践对认识的决定作用，为能动的、革命的反映论的创立奠定了科学的理论基础</li><li>第一次揭示了社会生活的实践本质</li><li>为人们能动地认识世界和改造世界提供了基本的思想方法和工作方法</li></ul><h4 id="2-1-2-实践的本质与基本结构"><a href="#2-1-2-实践的本质与基本结构" class="headerlink" title="2.1.2 实践的本质与基本结构"></a>2.1.2 实践的本质与基本结构</h4><h5 id="2-1-2-1-实践的本质"><a href="#2-1-2-1-实践的本质" class="headerlink" title="2.1.2.1 实践的本质"></a>2.1.2.1 实践的本质</h5><p>实践：人类能动地改造世界的社会性的物质活动</p><p>特征：<strong>客观实在性、自觉能动性和社会历史性</strong></p><h5 id="2-1-2-2-实践的基本结构"><a href="#2-1-2-2-实践的基本结构" class="headerlink" title="2.1.2.2 实践的基本结构"></a>2.1.2.2 实践的基本结构</h5><p>三项基本要素：实践的主体、客体和中介</p><p>实践的主体、客体关系：<strong>实践关系（根本）、认识关系和价值关系</strong></p><p>实践基本结构发展，表现为主体客体化和客体主体化的双向运动</p><p>主体客体化：简单来说就是主体基于主观意识对于客体的改造与创造</p><p>客体主体化：简单来说就是主体使用客体，将其内化为一种发展主体的工具</p><p>两者都既有物质层面，又有精神层面</p><h5 id="2-1-2-3-实践形式的多样性"><a href="#2-1-2-3-实践形式的多样性" class="headerlink" title="2.1.2.3 实践形式的多样性"></a>2.1.2.3 实践形式的多样性</h5><ul><li>物质生产实践</li><li>社会政治实践</li><li>科学文化实践</li><li>（产生新的实践形式：虚拟实践）</li></ul><h5 id="2-1-2-4-实践对认识的决定作用"><a href="#2-1-2-4-实践对认识的决定作用" class="headerlink" title="2.1.2.4 实践对认识的决定作用"></a>2.1.2.4 实践对认识的决定作用</h5><p>实践是认识的基础，有决定作用</p><ol><li>实践是认识的来源（与世界相互作用形成感性认识，大脑加工形成理性认识；直接（主要）、间接经验）</li><li>实践是认识发展的动力（根本动力、提供必要条件、实践本身也会增加认识）</li><li>实践是认识的目的</li><li>实践是检验认识真理性的唯一标准</li></ol><ul><li>认识具有真理性与否只有在实践中才能得到验证。</li><li>实践标准的确定性 （唯一标准） 与不确定性 （历史发展性） 是辩证统一的。</li></ul><h4 id="2-1-3-认识的本质与过程"><a href="#2-1-3-认识的本质与过程" class="headerlink" title="2.1.3 认识的本质与过程"></a>2.1.3 认识的本质与过程</h4><h5 id="2-1-3-1-认识的本质"><a href="#2-1-3-1-认识的本质" class="headerlink" title="2.1.3.1 认识的本质"></a>2.1.3.1 认识的本质</h5><p>辩证唯物主义认识论（反映论）：认识的本质是主体在实践基础上对客体的能动反映。这种能动反映具有两个基本特征：</p><ul><li>反映性：人类认识的基本规定性，指认识必须以客观事物为原型，在思维中再现其状态、属性和本质</li><li>能动的创造性：一种在思维中进行的能动、创造性的活动，人需要透过现象把握本质，用辩证思维方法在观念中加工和改造对象</li></ul><p>两者辩证统一、不可分割的。它们不是同一本质的两个方面：</p><ul><li>创造离不开反映：创造过程是在对多个方面进行反映的基础上实现的。</li><li>反映也离不开创造：反映是在创造过程中实现的。</li></ul><p>两种错误的倾向及其危害：</p><ul><li>只坚持反映性而忽视创造性，会重蹈旧唯物主义直观反映论的覆辙。</li><li>只坚持创造性而脱离反映的前提，会使创造变成主观随意，从而滑向唯心主义和不可知论。</li></ul><h5 id="2-1-3-2-从实践到认识"><a href="#2-1-3-2-从实践到认识" class="headerlink" title="2.1.3.2 从实践到认识"></a>2.1.3.2 从实践到认识</h5><p>认识的过程：认识到实践，实践再到认识</p><p>实践与认识的两次飞跃：</p><ul><li>实践与认识的辨证运动，是一个由感性认识到理性认识，又由理性认识到实践的飞跃。</li></ul><p>感性认识和理性认识的辩证关系：</p><ul><li>感性认识（直接，包括感觉（各个感觉）-&gt;知觉（整体反应）-&gt;表象（对过去感觉、直觉的回忆））</li><li>理性认识（概念-&gt;判断-&gt;推理）</li><li>理性认识依赖于感性认识（认识论的唯物论）</li><li>感性认识有待于发展和深化为理性认识</li><li>感性认识和理性认识相互渗透、相互包含</li><li>感性认识到理性认识条件：实践-&gt;思考</li><li>认识过程中有非理性因素</li></ul><h5 id="2-1-3-3-从认识到实践"><a href="#2-1-3-3-从认识到实践" class="headerlink" title="2.1.3.3 从认识到实践"></a>2.1.3.3 从认识到实践</h5><p>从认识回到实践的必要性和重要性：</p><ol><li>认识世界的目的是改造世界：</li><li>认识的真理性只有在实践中才能得到检验和发展：</li></ol><h4 id="2-1-4-实践与认识的辨证运动及其规律"><a href="#2-1-4-实践与认识的辨证运动及其规律" class="headerlink" title="2.1.4 实践与认识的辨证运动及其规律"></a>2.1.4 实践与认识的辨证运动及其规律</h4><ul><li><p>说实践与认识“完成了”，是针对具体事物的认识而言的</p><p>实现预期目的，使预想的思想、理论或计划在实践中大体变为事实，部分甚至全部调整</p></li><li><p>说它“又没有完成”，是针对实践和认识运动的持续发展而言的</p><ul><li>人类的实践是不断向前推移和发展的，因此人们的认识也必须随之发展</li><li>客观现实世界的运动变化永不完结，因此人们在实践中对真理的认识也永远没有完结</li></ul></li></ul><h3 id="2-2-真理与价值"><a href="#2-2-真理与价值" class="headerlink" title="2.2 真理与价值"></a>2.2 真理与价值</h3><h4 id="2-2-1-真理的客观性、绝对性和相对性"><a href="#2-2-1-真理的客观性、绝对性和相对性" class="headerlink" title="2.2.1 真理的客观性、绝对性和相对性"></a>2.2.1 真理的客观性、绝对性和相对性</h4><p>真理的定义： 标志主观与客观相符合的哲学范畴，是对客观事物及其规律的正确反映。</p><p>真理的客观性： 真理的内容是对客观事物及其规律的正确反映（决定真理（内容而非形式）的一元性）</p><p>真理的绝对性和相对性：</p><ul><li><p>真理的绝对性 ：主客观统一的确定性、发展的无限性</p></li><li><p>真理的相对性：在一定条件下对客观事物及其本质和发展规律的正确认识总是有限度的、不完善的</p><ul><li>客观世界的整体来看，任何真理都只是对客观世界的某一阶段、某一部分的正确认识，有待扩展</li><li>就特定事物而言，任何真理都只是对客观对象一定方面、一定层次和一定程度的正确认识，任何真理都只能是主观对客观事物近似正确即相对正确的反映</li></ul></li><li><p>真理的绝对性和相对性的辩证统一</p><ul><li>两重性：两者相互包含</li><li>发展上：人类的认识是一个无限的过程，永远在从相对真理走向、接近绝对真理。</li></ul></li><li><p>真理与谬误的对立统一</p><ul><li>在确定的对象和范围内，两者相互对立</li><li>在一定范围内才有绝对的意义，超出之后就相对了</li></ul></li></ul><h4 id="2-2-2-真理的检验标准"><a href="#2-2-2-真理的检验标准" class="headerlink" title="2.2.2 真理的检验标准"></a>2.2.2 真理的检验标准</h4><h5 id="2-2-2-2实践是检验真理的唯一标准"><a href="#2-2-2-2实践是检验真理的唯一标准" class="headerlink" title="2.2.2.2实践是检验真理的唯一标准"></a>2.2.2.2实践是检验真理的唯一标准</h5><p>实践之所以能够作为检验真理的唯一标准，是由真理的本性和实践的特点决定的。</p><ul><li>本性：真理是人们对客观事物及其发展规律的正确反映，其本性在于主观和客观相符合。</li><li>实践：实践具有<strong>直接现实性</strong>。实践的直接现实性是它的客观实在性的具体表现。</li></ul><h5 id="2-2-2-3-实践标准的确定性与不确定性"><a href="#2-2-2-3-实践标准的确定性与不确定性" class="headerlink" title="2.2.2.3 实践标准的确定性与不确定性"></a>2.2.2.3 实践标准的确定性与不确定性</h5><p>确定性：绝对性，是指实践作为检验真理标准的唯一性、归根到底性、最终性</p><p>不确定性：相对性，实践作为检验真理标准的条件性</p><ul><li>实践受到<strong>主客观</strong>制约</li><li>实践收到<strong>历史条件</strong>限制</li></ul><h4 id="2-2-3-真理与价值的辩证统一"><a href="#2-2-3-真理与价值的辩证统一" class="headerlink" title="2.2.3 真理与价值的辩证统一"></a>2.2.3 真理与价值的辩证统一</h4><h5 id="2-2-3-1-价值"><a href="#2-2-3-1-价值" class="headerlink" title="2.2.3.1 价值"></a>2.2.3.1 价值</h5><p>主体性、客观性、多维性和社会历史性</p><ul><li><p>价值的主体性：直接与主体相联系，始终以主体为中心</p><ul><li>价值关系的形成依赖于主体的存在</li><li>价值关系的形成依赖于主体的创造，使客体潜在的价值转化为现实的价值</li></ul></li><li><p>价值的客观性：一定条件下客体对于主体的意义不依赖于主体的主观意识而存在</p><ul><li>主体的存在和需要是客观的，而不是抽象的</li><li>客体的存在、属性及作用是客观的</li></ul></li><li><p>价值的多维性：同一客体相对于主体的不同需要会产生不同的价值</p></li><li><p>价值的社会历史性：主体和客体的不断变化决定了价值的历史性</p></li></ul><h5 id="2-2-3-3-价值评价及其特点"><a href="#2-2-3-3-价值评价及其特点" class="headerlink" title="2.2.3.3 价值评价及其特点"></a>2.2.3.3 价值评价及其特点</h5><p>价值评价是对客观价值关系的主观反映</p><ul><li>评价以主客体之间的价值关系为认识对象</li><li>评价结果与评价主体直接相关</li><li>评价结果的正确与否依赖于对客体状况和主体需要的认识</li><li>评价结果有正确与错误之分，价值评价也有科学与非科学之别</li></ul><h5 id="2-2-3-5真理与价值在实践中的辩证统一"><a href="#2-2-3-5真理与价值在实践中的辩证统一" class="headerlink" title="2.2.3.5真理与价值在实践中的辩证统一"></a>2.2.3.5真理与价值在实践中的辩证统一</h5><p>人们的实践活动总是受着真理尺度和价值尺度的制约</p><p>辩证关系：</p><ul><li>价值尺度必须以真理为前提，脱离了真理尺度，价值尺度就偏离了合理的、正确的轨道</li><li>人类自身需要的内在尺度，推动着人们不断发现新的真理，脱离了价值尺度，真理就缺失了主体意义</li></ul><p>实践的具体性和历史性-&gt;真理尺度与价值尺度的统一也是具体的、历史的</p><p>两者是否达成统一，用实践验证</p><h3 id="2-3-认识世界和改造世界"><a href="#2-3-认识世界和改造世界" class="headerlink" title="2.3 认识世界和改造世界"></a>2.3 认识世界和改造世界</h3><h4 id="2-3-1-认识世界的根本目的在于改造世界"><a href="#2-3-1-认识世界的根本目的在于改造世界" class="headerlink" title="2.3.1 认识世界的根本目的在于改造世界"></a>2.3.1 认识世界的根本目的在于改造世界</h4><h5 id="2-3-1-1-认识世界和改造世界有辩证关系"><a href="#2-3-1-1-认识世界和改造世界有辩证关系" class="headerlink" title="2.3.1.1 认识世界和改造世界有辩证关系"></a>2.3.1.1 认识世界和改造世界有辩证关系</h5><p>认识世界有助于改造世界</p><p>人们只有在改造世界的实践中才能不断地深化、拓展对世界的正确认识</p><h5 id="2-3-1-2-改造客观世界和改造主观世界及其辩证关系"><a href="#2-3-1-2-改造客观世界和改造主观世界及其辩证关系" class="headerlink" title="2.3.1.2 改造客观世界和改造主观世界及其辩证关系"></a>2.3.1.2 改造客观世界和改造主观世界及其辩证关系</h5><p>只有在改造客观世界的实践中，才能深入改造主观世界</p><p>只有认真改造主观世界，才能更好地改造客观世界</p><h5 id="2-3-1-3-认识世界和改造世界的过程是从必然走向自由的过程"><a href="#2-3-1-3-认识世界和改造世界的过程是从必然走向自由的过程" class="headerlink" title="2.3.1.3 认识世界和改造世界的过程是从必然走向自由的过程"></a>2.3.1.3 认识世界和改造世界的过程是从必然走向自由的过程</h5><p>自由的条件：</p><ol><li>认识条件：对客观事物（的发展）的正确认识</li><li>实践条件：能够将获得的规律性认识运用于指导实践，实现改造世界的目的</li></ol><h2 id="3-人类社会及其发展规律"><a href="#3-人类社会及其发展规律" class="headerlink" title="3 人类社会及其发展规律"></a>3 人类社会及其发展规律</h2><h3 id="3-1-人类社会的存在与发展"><a href="#3-1-人类社会的存在与发展" class="headerlink" title="3.1 人类社会的存在与发展"></a>3.1 人类社会的存在与发展</h3><h4 id="3-1-1-社会存在与社会意识"><a href="#3-1-1-社会存在与社会意识" class="headerlink" title="3.1.1 社会存在与社会意识"></a>3.1.1 社会存在与社会意识</h4><p>社会存在：社会物质生活条件，是社会生活的物质方面</p><ul><li>自然地理环境</li><li>人口因素</li><li>物质生产方式<ul><li>是人类社会赖以存在和发展的基础，是人类其他一切活动的首要前提。</li><li>决定社会的结构、性质和面貌</li><li>决定整个社会历史的变化发展，决定社会形态从低级向高级的更替和发展。</li></ul></li></ul><p>社会意识：社会存在的反映，是社会生活的精神方面</p><ul><li>意识形态（政治法律思想、道德、艺术、宗教、哲学等）</li><li>非意识形态（自然科学和语言学、形式逻辑）</li></ul><p>社会存在与社会意识的辩证关系：</p><ul><li><p>社会存在决定社会意识</p><ul><li>社会存在是社会意识内容的客观来源，社会意识是社会物质生活过程及其条件的主观反映</li><li>社会意识是人们进行社会物质交往的产物。</li><li>社会意识是具体的、历史的。</li></ul></li><li><p>社会意识是社会存在的反映，并反作用于社会存在 （社会意识具有相对独立性）：</p><ul><li>社会意识与社会存在发展具有不完全同步性和不平衡性</li><li>社会意识内部各种形式之间存在相互影响且各自具有历史继承性</li><li>社会意识对社会存在具有能动的反作用，这是社会意识相对独立性的突出表现。</li></ul></li></ul><h4 id="3-1-2-社会基本矛盾及其运动规律"><a href="#3-1-2-社会基本矛盾及其运动规律" class="headerlink" title="3.1.2 社会基本矛盾及其运动规律"></a>3.1.2 社会基本矛盾及其运动规律</h4><h5 id="3-1-2-1-生产力与生产关系的矛盾运动及其规律"><a href="#3-1-2-1-生产力与生产关系的矛盾运动及其规律" class="headerlink" title="3.1.2.1 生产力与生产关系的矛盾运动及其规律"></a>3.1.2.1 生产力与生产关系的矛盾运动及其规律</h5><p>生产力： 生产实践中所需的物质力量，客观现实性、社会历史性</p><ul><li>基本要素包括：劳动资料、劳动对象、劳动者</li><li>劳动者是生产力中最重要、最活跃、起决定性作用的因素。</li><li>在生产过程中，劳动者使用劳动资料，作用于劳动对象，从而生产出物质产品。劳动资料和劳动对象合称为 “生产资料”。</li></ul><p>科学技术是生产力中的重要因素：</p><ul><li>引起劳动资料、劳动对象和劳动者素质的深刻变革和巨大进步</li><li>提高管理效率</li><li>提高劳动生产率</li><li><strong>科学技术是第一生产力</strong></li></ul><p>生产关系：生产关系是人们在物质生产过程中形成的不以人的意志为转移的经济关系，其中<strong>生产资料所有制</strong>关系最基本，目前公有制和私有制并存</p><p>生产力与生产关系的相互关系是</p><ul><li><p>生产力决定生产关系。</p><ul><li>生产力状况决定生产关系的性质</li><li>生产力的发展决定生产关系的变化。生产关系是生产力发展需要的产物，只有当它为生产力提供足够的发展空间时才能够存在。</li></ul></li><li><p>生产关系对生产力具有能动的反作用</p><ul><li>当生产关系适合生产力发展的客观要求时，对生产力的发展起推动作用</li><li>当生产关系不适合生产力发展的客观要求时，就会阻碍生产力的发展。</li></ul></li></ul><h5 id="3-1-2-2-经济基础与上层建筑的矛盾运动及其规律"><a href="#3-1-2-2-经济基础与上层建筑的矛盾运动及其规律" class="headerlink" title="3.1.2.2 经济基础与上层建筑的矛盾运动及其规律"></a>3.1.2.2 经济基础与上层建筑的矛盾运动及其规律</h5><p>经济基础：</p><ul><li>经济基础是指由社会一定发展阶段的生产力所决定的生产关系的总和。</li><li>决定一个社会性质的是其中<strong>占支配地位的生产关系</strong>。</li></ul><p>上层建筑：</p><ul><li>上层建筑是建立在一定经济基础之上的意识形态以及与之相适应的制度、组织和设施</li><li><strong>政治上层建筑</strong>居于主导地位</li></ul><p>国家政权：用暴力把社会冲突保持在秩序范围内</p><ul><li>在整个上层建筑中，<strong>政治上层建筑</strong>居于主导地位，<strong>国家政权</strong>是政治上层建筑的核心</li><li>国体：社会各阶级在国家中的地位</li><li>政体：统治阶级用何形式组织自己的政权</li></ul><p>经济基础与上层建筑的辩证统一关系：</p><ul><li><p>经济基础决定上层建筑。</p><ul><li>决定其产生（怎样的上层建筑）</li><li>决定其性质（为谁服务）</li><li>决定其变更</li></ul></li><li><p>上层建筑对经济基础具有反作用。</p><ul><li>上层建筑积极地服务于经济基础。</li><li>促进作用：当上层建筑适合经济基础状况时，促进经济基础的巩固和发展</li><li>阻碍作用：当上层建筑不适合经济基础状况时，阻碍新的、先进的经济基础的形成和发展。</li></ul></li><li><p>再次，经济基础与上层建筑的相互作用构成二者的矛盾运动</p><ul><li>上层建筑的不完善部分、没有反映经济基础要求的部分同经济基础发生矛盾</li><li>现在占统治地位的经济基础同旧上层建筑的残余、未来上层建筑的萌芽之间的矛盾，新旧上层建筑之间、新旧经济基础之间的矛盾</li><li>社会形态上升时，上层建筑适应经济基础，下降时则为对抗</li></ul></li><li><p>最后，经济基础和上层建筑之间的内在联系构成了上层建筑“一定要适合”经济基础状况的规律</p><ul><li>经济基础状况决定上层建筑的发展方向，决定上层建筑相应的调整或变革；</li><li>上层建筑的反作用也必须取决于和服从于经济基础的性质和客观要求</li></ul></li></ul><h4 id="3-1-3-交往"><a href="#3-1-3-交往" class="headerlink" title="3.1.3 交往"></a>3.1.3 交往</h4><p>作用：</p><ol><li>促进生产力的发展</li><li>促进社会关系的进步</li><li>促进文化的发展与传播</li><li>促进人的全面发展</li></ol><h4 id="3-1-4-社会进步与社会形态更替"><a href="#3-1-4-社会进步与社会形态更替" class="headerlink" title="3.1.4 社会进步与社会形态更替"></a>3.1.4 社会进步与社会形态更替</h4><p>社会形态从低级到高级的发展、同一社会形态内部的发展，社会进步促进人的发展、推动人类解放</p><p>社会形态更替的统一性和多样性：</p><ul><li>统一性：原始社会、奴隶社会、封建社会、资本主义社会和共产主义社会依次更替</li><li>多样性：可能跨越，可能不典型，可能迅速缓慢，可能曲折</li></ul><p>社会形态更替的必然性与选择性：</p><ul><li><p>必然性</p><ul><li>社会形态依次更替客观</li><li>生产力与生产关系矛盾运动的规律性，从根本上规定了社会形态更替的必然性</li></ul></li><li><p>选择性</p><ul><li>必然性造成了社会发展的基本趋势，为选择性提供空间</li><li>主观能动性与客观规律性相统一的过程</li><li>人们的历史选择性归根结底是人民群众的选择性</li></ul></li></ul><h3 id="3-2-社会发展的动力"><a href="#3-2-社会发展的动力" class="headerlink" title="3.2 社会发展的动力"></a>3.2 社会发展的动力</h3><h4 id="3-2-1-社会基本矛盾是历史发展的根本动力"><a href="#3-2-1-社会基本矛盾是历史发展的根本动力" class="headerlink" title="3.2.1 社会基本矛盾是历史发展的根本动力"></a>3.2.1 社会基本矛盾是历史发展的根本动力</h4><p>社会基本矛盾：</p><ul><li><strong>生产力与生产关系之间的矛盾</strong>（根本）</li><li>经济基础与上层建筑之间的矛盾（体现）</li></ul><p>作用体现在：</p><ol><li>生产力是社会基本矛盾运动中最基本的动力因素<ul><li>生产力是社会存在和发展的物质基础</li><li>生产力决定生产关系的性质</li><li>生产力是社会进步的根本内容</li></ul></li><li>社会基本矛盾特别是生产力和生产关系的矛盾，决定着社会中其他矛盾的存在和发展<ul><li>生产力和生产关系的矛盾决定经济基础和上层建筑的矛盾的产生和发展</li><li>经济基础和上层建筑的矛盾也会影响和制约生产力和生产关系的矛盾</li></ul></li><li>社会基本矛盾具有不同的表现形式和解决方式<ul><li>社会形态改变：革命</li><li>统一社会形态的发展：改革</li></ul></li></ol><p>社会主要矛盾：不同于基本矛盾，会不断向下变化，是基本矛盾的体现</p><ul><li>社会主要矛盾双方的内容发生一定变化</li><li>矛盾的地位发生变化</li></ul><h4 id="3-2-2-阶级斗争、社会革命在社会发展中的作用"><a href="#3-2-2-阶级斗争、社会革命在社会发展中的作用" class="headerlink" title="3.2.2 阶级斗争、社会革命在社会发展中的作用"></a>3.2.2 阶级斗争、社会革命在社会发展中的作用</h4><ul><li>阶级斗争是社会基本矛盾在阶级社会中的表现</li><li>社会革命是社会基本矛盾所引起的广泛而深刻的社会变革的统称</li></ul><p>阶级斗争</p><ul><li>是阶级社会发展的直接动力</li><li>根源于阶级之间物质利益的根本对立，根源于社会经济关系的冲突</li><li>作用表现在社会形态的更替</li><li>受到一定社会历史条件的制约</li></ul><p>社会革命</p><ul><li>根源于社会基本矛盾的尖锐化，需要客观和主观条件</li><li>实现社会形态更替的重要手段和决定性环节</li></ul><p>改革</p><ul><li>为了解决社会基本矛盾而对生产关系和上层建筑进行的深刻的改变和革新</li><li>社会制度的自我调整和完善</li><li>量变和部分质变</li></ul><h4 id="3-2-3-科学技术在社会发展中的作用"><a href="#3-2-3-科学技术在社会发展中的作用" class="headerlink" title="3.2.3 科学技术在社会发展中的作用"></a>3.2.3 科学技术在社会发展中的作用</h4><p>科技革命是推动经济和社会发展的强大杠杆</p><ul><li><p>对生产方式产生了深刻影响。</p><ul><li>改变了社会生产力的构成要素（使劳动力结构向着智能化趋势发展）</li><li>改变了人们的劳动形式（由机械自动化走向智能自动化、由局部自动化走向大系统管理和控制自动化的根本性变革）</li><li>改变了社会经济结构，特别是导致产业结构发生变革。（第三产业人数比例增长）</li></ul></li><li><p>对生活方式产生了巨大影响</p></li><li><p>促进了思维方式的变革</p></li></ul><h4 id="3-2-3-文化在社会发展中的作用"><a href="#3-2-3-文化在社会发展中的作用" class="headerlink" title="3.2.3 文化在社会发展中的作用"></a>3.2.3 文化在社会发展中的作用</h4><p>文化是推动社会发展的重要力量，为社会发展提供：思想指引、精神动力、凝聚力量</p><h3 id="3-3-人民群众在历史发展中的作用"><a href="#3-3-人民群众在历史发展中的作用" class="headerlink" title="3.3 人民群众在历史发展中的作用"></a>3.3 人民群众在历史发展中的作用</h3><h4 id="3-3-1-人民群众是历史的创造者"><a href="#3-3-1-人民群众是历史的创造者" class="headerlink" title="3.3.1 人民群众是历史的创造者"></a>3.3.1 人民群众是历史的创造者</h4><p>唯物史观与唯心史观的对立，在历史创造者问题上表现为群众史观（唯物史观）与英雄史观（唯心史观）的对立。</p><p>群众史观并不否认英雄在历史上的重要作用。ta们顺应了历史发展的规律，反映人民群众的愿望和要求，加速历史的进程，无法改变其根本方向</p><p>唯物史观：</p><ul><li>立足于现实的人及其本质来把握历史的创造者</li><li>立足于整体的社会历史过程来探究谁是历史的创造者</li><li>唯物史观从社会历史发展的必然性入手来考察和说明谁是历史的创造者</li><li>唯物史观从人与历史关系的不同层次上考察谁是历史的创造者</li></ul><p>人民群众在创造历史过程中的决定作用：</p><ul><li>人民群众是社会历史的主体，是历史的创造者。</li><li>人民群众是社会物质财富的创造者（物质生产是基础，群众是生产者）</li><li>人民群众是社会精神财富的创造者（虽然常常由杰出的知识分子和艺术家集中体现，但其最终源泉依然是人民群众的社会实践。）</li><li>人民群众是社会变革的决定力量（阶级斗争的主力、社会革命的根本动力）</li></ul><h2 id="4-资本主义的本质及规律"><a href="#4-资本主义的本质及规律" class="headerlink" title="4 资本主义的本质及规律"></a>4 资本主义的本质及规律</h2><h3 id="4-1-商品经济和价值规律"><a href="#4-1-商品经济和价值规律" class="headerlink" title="4.1 商品经济和价值规律"></a>4.1 商品经济和价值规律</h3><h4 id="4-1-1-商品经济的形成和发展"><a href="#4-1-1-商品经济的形成和发展" class="headerlink" title="4.1.1 商品经济的形成和发展"></a>4.1.1 商品经济的形成和发展</h4><p>自然经济：产的目的是直接满足生产者个人或经济单位的需要</p><ul><li>原始社会、奴隶社会、封建社会，因为生产力水平很低，社会分工极不发达</li></ul><p>商品经济：以交换为目的而进行生产的经济形式</p><ul><li>产生的历史条件：<ul><li>存在社会分工（前提）</li><li>生产资料和劳动产品属于不同的所有者（决定性）</li></ul></li></ul><p>商品的二因素：</p><ul><li>二因素：</li><li>使用价值（自然属性，客观、具体、商品价值的物质承载）</li><li>价值（社会属性，人脑力和体力的耗费，是由社会必要的劳动时间而非劳动者实际的劳动时间决定的）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    A[一个物品存在]:::green --&gt; B&#123;是否有用&#125;:::green</span><br><span class="line">    B --&gt;|是| C&#123;是否人类劳动的产物&#125;:::green</span><br><span class="line">    B --&gt;|否| D[无用物]:::green</span><br><span class="line">    C --&gt;|是| E&#123;是否为了交换而生产&#125;:::green</span><br><span class="line">    C --&gt;|否| F[自然物（如空气）&lt;br&gt;有使用价值，无价值]:::green</span><br><span class="line">    E --&gt;|是| G[商品&lt;br&gt;有使用价值、价值]:::green</span><br><span class="line">    E --&gt;|否| H[自用品&lt;br&gt;有使用价值，无价值]:::green</span><br><span class="line"></span><br><span class="line">    classDef green fill:#e6ffe6,stroke:#2db300,color:#006600,text-align:center</span><br><span class="line">    class A,B,C,D,E,F,G,H green</span><br></pre></td></tr></table></figure><p>商品的使用价值和价值之间是对立统一的关系：</p><ul><li><p>对立性：</p><ul><li>商品的使用价值和价值是相互排斥的，生产者关心价值而不是使用价值，将使用价值让渡给购买者，才能取得价值</li></ul></li><li><p>统一性：</p><ul><li>作为商品，必须同时具有使用价值和价值两个因素</li><li>使用价值是价值的物质承担者，价值寓于使用价值之中</li></ul></li></ul><p>商品是劳动产品，生产商品的劳动具有二重性</p><ul><li>具体劳动：创造商品的使用价值（例如种地）</li><li>抽象劳动：形成商品的价值（例如劳动了5小时）</li></ul><p>劳动的二重性决定了商品的二因素：任何劳动，既是特殊的具体劳动，又是一般的抽象劳动</p><p>具体劳动和抽象劳动也是对立统一的关系：</p><ul><li>两者不独立存在，在时间上和空间上统一的两个方面</li><li>两者反映劳动的不同属性，前者自然属性，后者社会属性。</li></ul><p> 商品价值量的决定</p><ul><li>第一层面：核心尺度是“社会必要劳动时间”，而非“个别劳动时间”</li><li>第二层面：价值量与“劳动生产率”成反比</li><li>第三层面：价值量以“简单劳动”为尺度，复杂劳动可换算（自发计算，而非主动计算，产生数倍于简单劳动的价值）</li></ul><h4 id="4-1-2-价值规律及其作用"><a href="#4-1-2-价值规律及其作用" class="headerlink" title="4.1.2 价值规律及其作用"></a>4.1.2 价值规律及其作用</h4><p>价值规律在市场配置资源过程中的作用表现在：</p><ul><li>自发地调节生产资料和劳动力在社会各生产部门之间的比例</li><li>自发地刺激社会生产力的发展</li><li>自发地调节社会收入的分配</li></ul><p>消极后果：</p><ul><li>社会资源浪费</li><li>阻碍技术进步</li><li>收入两极分化</li></ul><p>以私有制为基础的商品经济的基本矛盾：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">A[商品&lt;br&gt;使用价值与价值的矛盾]--&gt;|根源于|B[私人劳动与社会劳动的矛盾]</span><br><span class="line">C[生产商品&lt;br&gt;具体劳动和抽象劳动的矛盾]--&gt;|根源于|B</span><br><span class="line">B--&gt;|构成|D[商品经济的基本矛盾]</span><br><span class="line">classDef green fill:#e6ffe6,stroke:#2db300,color:#006600,text-align:center</span><br><span class="line">    class A,B,C,D,E,F,G,H green</span><br></pre></td></tr></table></figure><ul><li>理解：在私有制商品经济中，每个人的劳动表面上是为自己干的、独立的私人劳动，但本质上又是互相联系、 为社会生产的社会劳动。这两者之间存在着深刻的矛盾。这个矛盾需要通过市场交换来临时解决，但又因为解决得不彻底而不断引发新的矛盾，从而推动着整个商品经济的运行、发展乃至危机</li></ul><p>私人劳动和社会劳动的矛盾构成私有制基础上商品经济的基本矛盾</p><ul><li>决定着商品经济的本质及发展过程</li><li>是<strong>商品经济其他一切矛盾的基础</strong></li><li>决定着商品生产者的命运</li></ul><h3 id="4-2-资本主义经济制度"><a href="#4-2-资本主义经济制度" class="headerlink" title="4.2 资本主义经济制度"></a>4.2 资本主义经济制度</h3><h4 id="4-2-2-劳动力成为商品与货币转化为资本"><a href="#4-2-2-劳动力成为商品与货币转化为资本" class="headerlink" title="4.2.2 劳动力成为商品与货币转化为资本"></a>4.2.2 劳动力成为商品与货币转化为资本</h4><p>G代表货币，W代表商品</p><p>代表货币的货币：W-G-W</p><p>代表资本的货币：G-W-G’</p><p>劳动力：人的劳动能力，人的脑力和体力的总和，其成为商品的基本条件：</p><ul><li>劳动者在法律上是自由人，能够把自己的劳动力当作自己的商品来支配；</li><li>劳动者没有任何生产资料，没有生活资料来源，因而不得不依靠出卖劳动力为生。</li></ul><p>劳动力的价值：（生产、发展、维持和延续劳动力所必需的生活必需品的价值决定的）</p><ul><li>维持劳动者本人生存所必需的生活资料的价值；</li><li>维持劳动者家属的生存所必需的生活资料的价值;</li><li>劳动者接受教育和训练所支出的费用。</li><li>（通俗地讲，就是工人的“饭钱、房租、衣食住行、养家糊口”等费用的总和。）</li></ul><p>劳动力商品的特点：</p><ul><li>使用价值是价值的源泉，创造新的大于劳动力本身价值价值，而且这个新的价值比劳动力本身的价值更大。（因此产生了剩余价值）</li><li>因此：货币所有者购买到劳动力以后，在消费过程中，不仅能够收回他在购买这种特殊商品时支付的价值，还能得到一个增殖的价值即剩余价值。（为什么资本能够盈利）</li></ul><p>资本是能够带来剩余价值的价值。剩余价值是由雇佣工人的剩余劳动创造的。</p><h4 id="4-2-3-生产剩余价值是资本主义生产方式的绝对规律"><a href="#4-2-3-生产剩余价值是资本主义生产方式的绝对规律" class="headerlink" title="4.2.3 生产剩余价值是资本主义生产方式的绝对规律"></a>4.2.3 生产剩余价值是资本主义生产方式的绝对规律</h4><p>资本主义生产过程具有二重性，为以下两者的统一：</p><ul><li>生产物质资料的劳动过程；</li><li>生产剩余价值的过程</li></ul><p>雇佣工人的劳动分为两部分：</p><ul><li>必要劳动，用于再生产劳动力的价值</li><li>剩余劳动，用于无偿地为资本家生产剩余价值。</li></ul><p>不变资本与可变资本： p211</p><ul><li><p>不变资本是以生产资料形态存在的资本</p><p>生产资料的价值通过工人的具体劳动被转移到新产品中，其转移的价值量不会大于它原有的价值量。（只转移，不增值）</p></li><li><p>可变资本是用来购买劳动力的那部分资本</p><p>可变资本的价值在生产过程中不是被转移到新产品中去，而是由工人的劳动再生产出来。</p></li></ul><p>要确定资本家对工人的剥削程度，就应该用剩余价值和雇佣劳动者的可变资本相比，而不应该把它去同全部资本相比</p><h5 id="4-2-3-2-剩余价值生产的两种方法"><a href="#4-2-3-2-剩余价值生产的两种方法" class="headerlink" title="4.2.3.2 剩余价值生产的两种方法"></a>4.2.3.2 剩余价值生产的两种方法</h5><p>绝对剩余价值生产：劳动时间不变，延长工作日长度&#x2F;提高劳动强度</p><p>相对剩余价值生产：指在工作日长度不变的条件下，通过缩短必要劳动时间而相对延长剩余劳动时间所生产的剩余价值（提高社会劳动生产率）</p><h5 id="4-2-3-3-资本积累"><a href="#4-2-3-3-资本积累" class="headerlink" title="4.2.3.3 资本积累"></a>4.2.3.3 资本积累</h5><ul><li><p>资本积累：剩余价值的资本化</p></li><li><p>资本积累的源泉是剩余价值</p></li><li><p>资本积累规模的大小取决于</p><ul><li>资本家对工人的剥削程度</li><li>劳动生产率的高低</li><li>所用资本和所费资本之间的差额</li><li>资本家预付资本的大小。</li></ul></li><li><p>导致财富占有两极分化、失业现象</p></li></ul><h4 id="4-2-4-资本主义的基本矛盾与经济危机"><a href="#4-2-4-资本主义的基本矛盾与经济危机" class="headerlink" title="4.2.4 资本主义的基本矛盾与经济危机"></a>4.2.4 资本主义的基本矛盾与经济危机</h4><p>资本主义基本矛盾：p225</p><ul><li><p>生产社会化和生产资料资本主义私人占有之间的矛盾，是资本主义的基本矛盾。</p></li><li><p>在现实中主要表现为两大具体矛盾：</p><ul><li>单个企业内部生产的有组织性和整个社会生产的无政府状态之间的矛盾。</li><li>资本主义生产无限扩大的趋势与劳动人民有支付能力的需求相对缩小之间的矛盾。</li></ul></li></ul><p>资本主义经济危机： p226</p><ul><li><p>本质特征：（相对）生产过剩</p><p>这种过剩是相对过剩，即相对于劳动人民有支付能力的需求，而不是相对于劳动人民的实际需要</p></li></ul><h2 id="5-资本主义的发展及其趋势"><a href="#5-资本主义的发展及其趋势" class="headerlink" title="5 资本主义的发展及其趋势"></a>5 资本主义的发展及其趋势</h2><h3 id="5-1-垄断资本主义的形成与发展"><a href="#5-1-垄断资本主义的形成与发展" class="headerlink" title="5.1 垄断资本主义的形成与发展"></a>5.1 垄断资本主义的形成与发展</h3><p>垄断原因：</p><ol><li>当生产集中发展到相当高的程度，极少数企业就会联合起来，操纵和控制本部门的生产和销售，实行垄断，以获得高额利润</li><li>企业规模巨大，形成对竞争的限制，也会产生垄断</li><li>激烈的竞争给竞争各方带来的损失越来越严重，为了避免两败俱伤，企业之间会达成妥协，联合起来，实行垄断</li></ol><p>垄断与竞争关系：在自由竞争中形成的，是作为自由竞争的对立面产生的。但是，垄断并不能消除竞争，反而使竞争变得更加复杂和激烈：</p><ol><li>垄断没有消除产生竞争的经济条件</li><li>垄断必须通过竞争来维持</li><li>任何垄断组织都不可能把包罗万象的社会生产全部包下来，使竞争更加激烈</li></ol><p>垄断价格既不能增加也不能减少整个社会所生产的价值总量，它只是对商品价值和剩余价值作了有利于垄断资本的再分配。</p><p>国家垄断资本主义：国家垄断资本主义是国家政权和私人垄断资本融合在一起的垄断资本主义。</p><ul><li>国家所有并直接经营企业</li><li>国家与私人共有、合营企业</li><li>国家通过多种形式参与私人垄断资本的再生产过程</li><li>宏观调节</li><li>微观规制</li></ul><p>经济全球化的表现：生产全球化（国际分工）、贸易全球化、金融全球化</p><p>经济全球化的动因：</p><ul><li>科学技术的进步和生产力的发展为经济全球化提供了坚实的物质基础和根本的推动力。（特别是信息革命）</li><li>跨国公司的发展为经济全球化提供了适宜的企业组织形式。（利用各地的优势组织生产）</li><li>各国经济体制的变革和国际经济组织的发展是经济全球化的体制与组织保障。</li></ul><h3 id="5-3资本主义的历史地位"><a href="#5-3资本主义的历史地位" class="headerlink" title="5.3资本主义的历史地位"></a>5.3资本主义的历史地位</h3><h4 id="5-3-1-历史地位"><a href="#5-3-1-历史地位" class="headerlink" title="5.3.1 历史地位"></a>5.3.1 历史地位</h4><p>与封建社会相比，资本主义显示了巨大的历史进步性</p><ol><li>资本主义将科学技术转变为强大的生产力</li><li>资本追求剩余价值的内在动力和竞争的外在压力推动了社会生产力的迅速发展</li><li>资本主义的意识形态和政治制度动了社会生产力的迅速发展，促进了社会进步</li></ol><p>局限性</p><ol><li>资本主义的基本矛盾阻碍社会生产力的发展</li><li>财富占有两极分化，引发经济危机</li><li>资产阶级支配和控制资本主义经济和政治的发展和运行，不断激化社会矛盾和冲突</li></ol><h4 id="5-3-2被替代的历史必然性"><a href="#5-3-2被替代的历史必然性" class="headerlink" title="5.3.2被替代的历史必然性"></a>5.3.2被替代的历史必然性</h4><ol><li>资本主义基本矛盾随发展不断显现</li><li>资本积累推动资本主义基本矛盾不断激化并最终否定资本主义自身</li><li>国家垄断资本主义是资本社会化的更高形式，将成为社会主义的前奏</li><li>资本主义社会存在着资产阶级和无产阶级两大阶级之间的矛盾和斗争</li></ol><h2 id="6-社会主义的发展及其规律"><a href="#6-社会主义的发展及其规律" class="headerlink" title="6 社会主义的发展及其规律"></a>6 社会主义的发展及其规律</h2><h3 id="6-1-社会主义五百年的历史进程"><a href="#6-1-社会主义五百年的历史进程" class="headerlink" title="6.1 社会主义五百年的历史进程"></a>6.1 社会主义五百年的历史进程</h3><h3 id="6-1-1社会主义从空想到科学"><a href="#6-1-1社会主义从空想到科学" class="headerlink" title="6.1.1社会主义从空想到科学"></a>6.1.1社会主义从空想到科学</h3><p>空想社会主义发展阶段：</p><ul><li>16-17世纪的早期空想社会主义</li><li>18世纪的空想平均共产主义</li><li>19世纪初期批判的空想社会主义</li></ul><p>开山之作：1516 年托马斯·莫尔所的《乌托邦》</p><p>空想社会主义理论的意义：</p><ol><li>对资本主义旧制度的辛辣批判，包含重要见解</li><li>反映了早期无产阶级迫切要求改造现存社会、建立理想的新社会的愿望</li><li>空想社会主义“提供了启发工人觉悟的极为宝责的祠料”，但是不具备科学的和实践的品格。</li></ol><p>空想社会主义的局限性：</p><ol><li>没有指出社会发展的真正出路。没有阐明资本主义雇佣制的本质</li><li>没有发现资本主义发展规律</li><li>没有找到成为新社会的创造者的社会力量</li></ol><p>科学社会主义：<strong>唯物史观</strong>和<strong>剩余价值学说</strong></p><p>科学社会主义&gt;空想社会主义</p><ul><li>科学理论</li><li>经济根源</li><li>揭示资本主义基本矛盾</li><li>依靠人民作为埋葬力量</li><li>提供路径指引、实现方式</li></ul><h3 id="6-3-在实践中探索社会主义的发展规律"><a href="#6-3-在实践中探索社会主义的发展规律" class="headerlink" title="6.3 在实践中探索社会主义的发展规律"></a>6.3 在实践中探索社会主义的发展规律</h3><p>社会主义建设过程的长期性</p><ol><li>生产力发展状况的制约</li><li>经济基础和上层建筑发展状况的制约。</li><li>国际环境的严峻挑战</li><li>马克思主义执政党对社会主义发展道路的探索和对社会主义建设规律的认识，需要一个长期的过程。</li></ol><h2 id="7-共产主义崇高理想及其最终实现"><a href="#7-共产主义崇高理想及其最终实现" class="headerlink" title="7 共产主义崇高理想及其最终实现"></a>7 共产主义崇高理想及其最终实现</h2><h3 id="7-1-展望未来共产主义新社会"><a href="#7-1-展望未来共产主义新社会" class="headerlink" title="7.1 展望未来共产主义新社会"></a>7.1 展望未来共产主义新社会</h3><ol><li><p>预见未来社会的方法论原则</p><ol><li>在揭示人类社会发展一般规律的基础上指明社会发展的方向</li><li>在剖析资本主义社会旧世界中阐发未来新世界的特点</li><li>在社会主义社会发展中不断深化对未来共产主义社会的认识</li><li>立足于揭示未来社会的一般特征，而不作详尽的细节描绘</li></ol></li><li><p>共产主义社会的基本特征</p><ol><li>物质财富极大丰富，消费资料按需分配</li><li>社会关系高度和谐，人们精神境界极大提高<ol><li>阶级将会消亡</li><li>国家将会消亡（政府不会）</li><li>战争将不复存在。</li><li>由于社会生产力的巨大发展，工业与农业、城市与乡村、脑力劳动与体力劳动的差别即“三大差别”必将归于消失。</li><li>不仅社会是和谐的，而且社会与自然之间也将达成和谐。</li><li>人们的精神境界将得到极大提高。</li></ol></li><li>实现每个人自由而全面的发展，人类从必然王国向自由王国的飞跃</li></ol></li></ol><p>实现人的自由而全面的发展，是马克思主义追求的根本价值目标也是共产主义社会的根本特征。</p><ol><li>旧式分工的消除为人的自由而全面的发展创造条件</li><li>自由时间的延长为人的自由而全面的发展提供了广阔的前景</li><li>劳动不再是单纯的谋生手段，而成为“生活的第一需要”</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;马克思主义基本原理&quot;&gt;&lt;a href=&quot;#马克思主义基本原理&quot; class=&quot;headerlink&quot; title=&quot;马克思主义基本原理&quot;&gt;&lt;/a&gt;马克思主义基本原理&lt;/h1&gt;&lt;h2 id=&quot;0-导论&quot;&gt;&lt;a href=&quot;#0-导论&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
  </entry>
  
  <entry>
    <title>算法与复杂性整理</title>
    <link href="https://ryanstarfox.github.io/2025/06/08/2025/20250608%20%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A4%8D%E6%9D%82%E6%80%A7/"/>
    <id>https://ryanstarfox.github.io/2025/06/08/2025/20250608%20%E7%AE%97%E6%B3%95%E4%B8%8E%E5%A4%8D%E6%9D%82%E6%80%A7/</id>
    <published>2025-06-07T16:00:00.000Z</published>
    <updated>2025-06-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="01-引论"><a href="#01-引论" class="headerlink" title="01 引论"></a>01 引论</h1><p>N&#x2F;A</p><h1 id="02-数学归纳法"><a href="#02-数学归纳法" class="headerlink" title="02 数学归纳法"></a>02 数学归纳法</h1><ol><li>欧拉公式</li><li>找到循环不变量</li></ol><h1 id="03-算法分析"><a href="#03-算法分析" class="headerlink" title="03 算法分析"></a>03 算法分析</h1><h2 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h2><p>符号$O$：$f(n)&#x3D;O(g(n))$，复杂性$f(n)\leq g(n)$，$\exists c,N, \forall n\geq N,g(n)\leq cf(n)\Rightarrow g(n)&#x3D;O(f(n))$</p><p>符号$\Omega$：$f(n)&#x3D;\Omega(g(n))$，复杂性$f(n)\geq g(n)$，$g(n)&#x3D;O(f(n))\Rightarrow f(n)&#x3D;\Omega(g(n))$</p><p>符号$\Theta$：$f(n)&#x3D;\Theta(g(n))$，复杂性$f(n)&#x3D;g(n)$，$f(n)&#x3D;O(g(n))\wedge g(n)&#x3D;O(f(n))\Rightarrow f(n)&#x3D;\Theta(g(n))$</p><p>符号$o$：$f(n)&#x3D;o(g(n))$，复杂性$f(n)&lt; g(n)$，$\forall c,\exists N&gt;0,s.t\ \forall n \geq N,f(n)\leq cg(n)\Rightarrow f(n)&#x3D;o(g(n))$</p><h2 id="常用式子"><a href="#常用式子" class="headerlink" title="常用式子"></a>常用式子</h2><p>$\sum\limits_{i&#x3D;1}^n \lfloor\log i\rfloor&#x3D;(n+1)\lfloor(\log n)\rfloor-2^{\lfloor\log n\rfloor+1}+2&#x3D;\Theta(n\log n)$</p><p>$e&#x3D;\lim\limits_{n\to\infty}(1+\dfrac 1n)^n&#x3D;1+\dfrac 1{1!}+\dfrac1{2!}+\dfrac1{3!}+\cdots$</p><p>$\log{(n!)}&#x3D;\Theta(n\log n)$</p><p>$\sum\limits_{j&#x3D;1}^n \dfrac 1j&#x3D;\ln n+\gamma+O(\dfrac1n),\gamma\approx0.577215$</p><p>$\sum\limits_{j&#x3D;1}^n jc^j&#x3D;\Theta(nc^n)$</p><h2 id="递推式"><a href="#递推式" class="headerlink" title="递推式"></a>递推式</h2><h3 id="线性齐次递推式"><a href="#线性齐次递推式" class="headerlink" title="线性齐次递推式"></a>线性齐次递推式</h3><p>特征方程</p><h3 id="分治问题"><a href="#分治问题" class="headerlink" title="分治问题"></a>分治问题</h3><p>假设$a$个子问题，每个问题的规模是原始问题的$1&#x2F;b$，组合各子问题的运行时间是$cn^k$，即</p><p>$T(n)&#x3D;aT(n&#x2F;b)+cn^k$</p><p>$T(n)&#x3D;\begin{cases}O(n^{\log_ba})&amp;a&gt;b^k\O(n^k\log n)&amp;a&#x3D;b^k\O(n^k)&amp;a&lt;b^k\end{cases}$</p><h3 id="Master-Theorem"><a href="#Master-Theorem" class="headerlink" title="Master Theorem"></a>Master Theorem</h3><p>$T(n)&#x3D;aT(n&#x2F;c)+f(n)$</p><ol><li>if $f(n)&#x3D;O(n^{\log_ca-\epsilon})$ for some $\epsilon&gt;0$, then $T(n)&#x3D;\Theta(n^{\log_ca})$</li><li>if $f(n) &#x3D; \Theta( n^{\log_ca} \cdot (\log n)^k ) $ for some$ k&gt;&#x3D;0$, then $T(n) &#x3D; \Theta(n^{\log_ca} \cdot (\log n)^k )$</li><li>If $f(n)&#x3D;W(n^{\log_ca+\epsilon}) $ for some $e&gt;0$  and if $a\cdot f(n&#x2F;c)\leq kf(n) $ for some constant $ k&lt;1$ and all sufficiently large $n$, then $T(n)&#x3D;\Theta(f(n))$</li></ol><p>注：以上三种情况不是完整覆盖所有情况</p><h3 id="涉及全部历史的递推关系"><a href="#涉及全部历史的递推关系" class="headerlink" title="涉及全部历史的递推关系"></a>涉及全部历史的递推关系</h3><p>历史消除法</p><h1 id="05-基于归纳的算法设计"><a href="#05-基于归纳的算法设计" class="headerlink" title="05 基于归纳的算法设计"></a>05 基于归纳的算法设计</h1><ol><li><p>多项式求值</p><p>$p_n(x)&#x3D;xp_{n-1}(x)+a_0$</p></li><li><p>寻找每个点的度都大于k的最大导出子图</p><p>只要度数小于k的点都删掉，更新度数，无所谓删除顺序</p></li><li><p>寻找一对一映射的子集</p><p>删掉没有被映射的点</p></li><li><p>社会名流问题</p><p>不要从人的角度，从问题的角度。一个问题至少可以确定一个人不是社会名流，最后剩下的那一个人再验证一下是不是社会名流。</p></li><li><p>轮廓问题</p><p>分治法</p></li><li><p>寻找最大连续子序列</p><p>归纳假设：已知如何找到规模小于n的最大子序列，以及作为后缀的最大子序列。</p></li><li><p>背包问题</p><p>动态规划</p></li></ol><h1 id="06-序列和集合的算法"><a href="#06-序列和集合的算法" class="headerlink" title="06 序列和集合的算法"></a>06 序列和集合的算法</h1><h2 id="二分搜索"><a href="#二分搜索" class="headerlink" title="二分搜索"></a>二分搜索</h2><ol><li><p>基础二分搜索 O(log n)</p></li><li><p>循环序列的二分搜索</p><p>找到循环递增序列的最小元素</p><p>若考虑$x_p,x_q$，若$x_p&lt;x_q$，则最小元素就不可能在$x_p,x_q$之间</p></li><li><p>二分搜索$a_i&#x3D;i$</p><p>考察$a_{\frac n2}$的值，考虑在前面还是在后面找</p></li><li><p>重叠子序列问题</p><p>若有上界，则二分搜索</p><p>若无上界，则对i加倍直至找到合适的范围</p></li><li><p>方程求解</p><p>连续性，不断减少解存在的范围</p></li><li><p>内插搜索 O(log log n)，但未必比二分搜索高效</p></li></ol><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><table><thead><tr><th align="center">排序算法</th><th align="center">最差</th><th align="center">平均</th></tr></thead><tbody><tr><td align="center">插入排序^1^</td><td align="center">$O(n^2)$</td><td align="center">$O(n^2)$</td></tr><tr><td align="center">选择排序</td><td align="center">$O(n^2)$</td><td align="center">$O(n^2)$</td></tr><tr><td align="center">归并排序^2^</td><td align="center">$O(n\log n)$</td><td align="center">$O(n\log n)$</td></tr><tr><td align="center">快速排序</td><td align="center">$O(n^2)$</td><td align="center">$O(n\log n)$</td></tr><tr><td align="center">堆排序</td><td align="center">$O(n\log n)$</td><td align="center">$O(n\log n)$</td></tr><tr><td align="center">计数排序^3^</td><td align="center">$O(n+k)$</td><td align="center">$O(n+k)$</td></tr><tr><td align="center">桶排序^4^</td><td align="center">$O(m+n)$</td><td align="center">$O(m+n)$</td></tr><tr><td align="center">基数排序^5^</td><td align="center">$O(nk)$</td><td align="center">$O(nk)$</td></tr></tbody></table><p>备注：</p><ol><li>插入部分可用二分搜索，那一部分复杂度可以降为$O(n\log n)$</li><li>缺点：不是原地排序，复制所有的数很花时间</li><li>非比较排序，k为不同数字的种类数</li><li>非比较排序，m为桶数</li><li>非比较排序，k为待排序的数字的位数</li></ol><h2 id="序列的秩"><a href="#序列的秩" class="headerlink" title="序列的秩"></a>序列的秩</h2><ol><li><p>查找最大&#x2F;最小数</p><p>可以通过分治法降低计算量，但无法减少计算量的数量级$O(n)$</p></li><li><p>第k小的数</p><p>使用类似快速排序的方法，平均$O(n)$，最坏$O(n\log n)$</p></li></ol><h2 id="数据压缩"><a href="#数据压缩" class="headerlink" title="数据压缩"></a>数据压缩</h2><ol><li>哈夫曼编码</li></ol><h2 id="字符串匹配"><a href="#字符串匹配" class="headerlink" title="字符串匹配"></a>字符串匹配</h2><ol><li><p>KMP算法</p><p>对于查找的序列要构建next数组</p></li><li><p>BM算法</p><ol><li><p>坏字符规则</p><p>移动的位数&#x3D;模式串出错的位置-坏字符在模式串中最后出现的位置</p><p>要用一个表bc存储模式串中的字符和下标</p></li><li><p>好后缀规则</p><p>类似KMP，前后颠倒，也可以预先计算</p></li></ol><p>执行两条规则中较大的那一个移动</p></li></ol><h3 id="序列比较"><a href="#序列比较" class="headerlink" title="序列比较"></a>序列比较</h3><h3 id="查找众数"><a href="#查找众数" class="headerlink" title="查找众数"></a>查找众数</h3><p>此处众数指的是：出现次数超过一半</p><ol><li><p>蛮力查找</p></li><li><p>排序算法</p></li><li><p>找到中位数之后再验证</p></li><li><p>高级算法</p><table><thead><tr><th><strong>i</strong></th><th><strong>X[i]</strong></th><th><strong>C（候选人）</strong></th><th><strong>M（计数器）</strong></th><th><strong>操作说明</strong></th></tr></thead><tbody><tr><td>2</td><td>2</td><td>2</td><td>1 → 2</td><td>X[i] &#x3D;&#x3D; C，M++</td></tr><tr><td>3</td><td>1</td><td>2</td><td>2 → 1</td><td>X[i] ≠ C，M–</td></tr><tr><td>4</td><td>1</td><td>2</td><td>1 → 0</td><td>X[i] ≠ C，M–</td></tr><tr><td>5</td><td>1</td><td>1</td><td>0 → 1</td><td>M 为 0，换候选人为 X[i]&#x3D;1，M&#x3D;1</td></tr><tr><td>6</td><td>2</td><td>1</td><td>1 → 0</td><td>X[i] ≠ C，M–</td></tr><tr><td>7</td><td>2</td><td>2</td><td>0 → 1</td><td>M 为 0，换候选人为 X[i]&#x3D;2，M&#x3D;1</td></tr></tbody></table><p>找到候选人之后验证</p></li><li><p>频繁元素</p><p>找到出现最频繁的t个元素</p><p>只有近似算法：规定k个计数器</p><ol><li>有对应的计数器，则相应的计数器加1</li><li>没有相应的计数器，并且已有的计数器数量小于k，则为该数据分配一个新的计数器，其值设为1。</li><li>没有相应的计数器，并且已经有了k个计数器，则将所有的计数器数值减1，并删除值为0的计数器，新数据也被丢弃。</li></ol></li><li><p>最长递增序列</p><ol><li>动态规划</li><li>维护一个tail数组（BIS）</li></ol></li></ol><h1 id="07-图算法"><a href="#07-图算法" class="headerlink" title="07 图算法"></a>07 图算法</h1><h2 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h2><p>DFS中的四种边：</p><ol><li>树边，第一次访问新节点，加入DFS树的边</li><li>后退边，访问到了一个没有访问结束，仍在递归中的祖先节点</li><li>前向边，访问到了一个已经访问结束的子孙节点</li><li>交叉边，访问到了一个已经访问结束，但是既非祖先也非子孙的节点</li></ol><p>有向图有有向闭链$\Leftrightarrow$G有一个后退边</p><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><p>找到入度为0的点，标为已访问，并更新邻接表</p><h2 id="单源最短路径"><a href="#单源最短路径" class="headerlink" title="单源最短路径"></a>单源最短路径</h2><p>非循环有向图中，从v出发到达G中其他各顶点的最短路径</p><h3 id="使用拓扑排序（只有能拓扑排序的图能用这个方式）"><a href="#使用拓扑排序（只有能拓扑排序的图能用这个方式）" class="headerlink" title="使用拓扑排序（只有能拓扑排序的图能用这个方式）"></a>使用拓扑排序（只有能拓扑排序的图能用这个方式）</h3><p>设v的标记是k，则标记小于k的不用考虑，都没有路径；大于k的用归纳法，$min(l_i)+1\ for\ i\ in\ curr.parents$</p><h3 id="一般做法：Djikstra算法"><a href="#一般做法：Djikstra算法" class="headerlink" title="一般做法：Djikstra算法"></a>一般做法：Djikstra算法</h3><p>要用一个Priority Queue来决定下一个顶点更新哪一个</p><h3 id="全部最短路径：Floyd算法"><a href="#全部最短路径：Floyd算法" class="headerlink" title="全部最短路径：Floyd算法"></a>全部最短路径：Floyd算法</h3><p>边权可以是负值，但是不能有负权回路</p><p>使用三重循环</p><p>初始化把有连线的两顶点的距离设为连线的长度，没有的设为+inf</p><p>检查每一个顶点能不能作为另外两个顶点的中间节点，如果可以，更新最短路径</p><p>可以检测负环（如果运行两次之后有变化，则有负环）</p><h3 id="传递闭包：Floyd-Warshell算法"><a href="#传递闭包：Floyd-Warshell算法" class="headerlink" title="传递闭包：Floyd-Warshell算法"></a>传递闭包：Floyd-Warshell算法</h3><h2 id="最小代价生成树"><a href="#最小代价生成树" class="headerlink" title="最小代价生成树"></a>最小代价生成树</h2><p>Kruscal&#x2F;Prim算法</p><p>前者边拓展+并查集，后者点拓展+贪心法</p><h2 id="划分双联通分支：Tarjan法"><a href="#划分双联通分支：Tarjan法" class="headerlink" title="划分双联通分支：Tarjan法"></a>划分双联通分支：Tarjan法</h2><p>关节点（割点）：删除后可以分离图的节点</p><p>双联通分支是没有关节点的分支，一个顶点可以在不同双联通分支内，但是一条边不行</p><p>寻找所有的割点：</p><p>使用一次DFS，更新时间戳和low值</p><h2 id="划分强连通分支：Tarjan法"><a href="#划分强连通分支：Tarjan法" class="headerlink" title="划分强连通分支：Tarjan法"></a>划分强连通分支：Tarjan法</h2><p>也可以用划分双联通分支类似的方法，判据有dfn的≥变成了&#x3D;&#x3D;</p><h2 id="匹配"><a href="#匹配" class="headerlink" title="匹配"></a>匹配</h2><p>匹配是边的一个集合，任意两条边没有公共的顶点</p><ul><li>完美匹配：所有顶点都有匹配的匹配。</li><li>最大匹配：具有最大边数的匹配。</li><li>极大匹配：不可能再增加边数的匹配。</li></ul><p>极大匹配未必是最大匹配。</p><ol><li>非常稠密图中的完美匹配</li><li>偶图匹配</li></ol><p>两者都是要通过交换来实现</p><h2 id="在非常稠密的图中寻找哈密顿回路"><a href="#在非常稠密的图中寻找哈密顿回路" class="headerlink" title="在非常稠密的图中寻找哈密顿回路"></a>在非常稠密的图中寻找哈密顿回路</h2><p>任意两个顶点的度数只和≥n</p><h1 id="08-几何算法"><a href="#08-几何算法" class="headerlink" title="08 几何算法"></a>08 几何算法</h1><h2 id="判断点是否在多边形内部"><a href="#判断点是否在多边形内部" class="headerlink" title="判断点是否在多边形内部"></a>判断点是否在多边形内部</h2><p>外部任意一点到此点连线与多边形又奇数个交点</p><p>有特殊情况</p><h2 id="构造简单多边形"><a href="#构造简单多边形" class="headerlink" title="构造简单多边形"></a>构造简单多边形</h2><ol><li>考察包含所有点的大圆C，从圆形开始旋转扫描（有特例）</li><li>从x坐标最大，y坐标最小的点开始扫描（也有特例）</li></ol><h2 id="求凸包"><a href="#求凸包" class="headerlink" title="求凸包"></a>求凸包</h2><h3 id="直接方法：延拓-递推-O-n-2"><a href="#直接方法：延拓-递推-O-n-2" class="headerlink" title="直接方法：延拓+递推 O(n^2^)"></a>直接方法：延拓+递推 O(n^2^)</h3><p>知道&lt;n个点的凸包怎么求，然后尝试寻找包含第n个点的凸包</p><p>改进：加入新的点时，删去旧凸包内的点，把新点与旧凸包上的点连起来寻找支撑线，进而找到两个点与新点连起来，行程新的凸包</p><h3 id="Gift-Wrapping-O-n-2"><a href="#Gift-Wrapping-O-n-2" class="headerlink" title="Gift Wrapping O(n^2^)"></a>Gift Wrapping O(n^2^)</h3><p>从极端点开始找支撑线，不是从小到大构造凸包，而是直接找到凸包的一部分</p><h3 id="Graham扫描算法-O-n-log-n"><a href="#Graham扫描算法-O-n-log-n" class="headerlink" title="Graham扫描算法 O(n log n)"></a>Graham扫描算法 O(n log n)</h3><p>与gift wrapping有点像，但是并非直接找凸包的一部分，先固定x轴上的极端点$p_1$，然后计算$p_ip_1$与x轴的夹角，从小到大排序，然后再一个个加入凸包</p><h2 id="最近点对"><a href="#最近点对" class="headerlink" title="最近点对"></a>最近点对</h2><h3 id="直接法-O-n-2"><a href="#直接法-O-n-2" class="headerlink" title="直接法 O(n^2^)"></a>直接法 O(n^2^)</h3><p>直接计算两点之间的距离，然后求最小值</p><h3 id="分治法-O-n-log-2-n-O-n-log-n"><a href="#分治法-O-n-log-2-n-O-n-log-n" class="headerlink" title="分治法 O(n log^2^ n)-&gt;O(n log n)"></a>分治法 O(n log^2^ n)-&gt;O(n log n)</h3><p>如果只有两个点，可以直接取它们之间的距离</p><p>否则分为2组，分别取最小，并求交叉项的最小</p><p>交叉项也只要取部分的条带（宽度为2倍最小值）</p><p>如果在每次归并的时候也保留y坐标的大小关系，则可以降低为$O(n\log n)$</p><h2 id="找交点"><a href="#找交点" class="headerlink" title="找交点"></a>找交点</h2><h3 id="水平线段和垂直线段的交点"><a href="#水平线段和垂直线段的交点" class="headerlink" title="水平线段和垂直线段的交点"></a>水平线段和垂直线段的交点</h3><p>直接法$O(mn)$</p><p>扫描线技术$O((m+n)log(m+n)+R)$</p><h3 id="线段交点"><a href="#线段交点" class="headerlink" title="线段交点"></a>线段交点</h3><p>扫描线技术$O((2n+m)log(2n+m))$</p><p>扫描状态集合是动态几何，描述当前扫描线状态，在以下情况会发生改变：</p><ol><li>遇到新的线段</li><li>现有线段结束</li><li>两段线段交点</li></ol><h2 id="美术馆问题"><a href="#美术馆问题" class="headerlink" title="美术馆问题"></a>美术馆问题</h2><h2 id="多边形三角划分问题"><a href="#多边形三角划分问题" class="headerlink" title="多边形三角划分问题"></a>多边形三角划分问题</h2><h3 id="若为单调多边形"><a href="#若为单调多边形" class="headerlink" title="若为单调多边形"></a>若为单调多边形</h3><p>扫描线算法三角划分</p><h3 id="若为一般多边形"><a href="#若为一般多边形" class="headerlink" title="若为一般多边形"></a>若为一般多边形</h3><p>添加对角线除去转向点</p><p>对于split，merge和start有不同的处理方式</p><h2 id="相交半平面问题"><a href="#相交半平面问题" class="headerlink" title="相交半平面问题"></a>相交半平面问题</h2><p>分治法$O(n\log n)$</p><h2 id="两个凸多边形的交点"><a href="#两个凸多边形的交点" class="headerlink" title="两个凸多边形的交点"></a>两个凸多边形的交点</h2><p>扫描线算法，扫描线只需记得4条边$O(n)$</p><h2 id="Voronoi图"><a href="#Voronoi图" class="headerlink" title="Voronoi图"></a>Voronoi图</h2><p>使用Fortune算法，一种扫描线算法。既规定了扫描线，又规定了海岸线（一系列抛物线，在海岸线之上不会再变了）</p><ol><li><p>基点事件</p><p>扫描线经过一个基点时会产生一个基点事件</p><p>插入一根新的抛物线</p></li><li><p>左右两根抛物线相遇，中间那一根抛物线消失，形成新的Voronoi顶点</p></li></ol><h1 id="09-代数和数值算法"><a href="#09-代数和数值算法" class="headerlink" title="09 代数和数值算法"></a>09 代数和数值算法</h1><h2 id="误差来源"><a href="#误差来源" class="headerlink" title="误差来源"></a>误差来源</h2><ol><li>截断误差：泰勒展开截去部分</li><li>大数吃小数：2^100^+1-2^100^&#x3D;0</li><li>稳定性：递推算法误差不断积累</li></ol><h2 id="求幂运算"><a href="#求幂运算" class="headerlink" title="求幂运算"></a>求幂运算</h2><ol><li>直接归纳法：$n^k&#x3D;nn^{k-1},O(k)$</li><li>二分归纳法：$n^k&#x3D;(n^{\frac k2})^2,O(\log k)$</li></ol><h2 id="求最大公约数"><a href="#求最大公约数" class="headerlink" title="求最大公约数"></a>求最大公约数</h2><p>辗转相除法</p><p>最大公倍数可由最大公约数得到</p><h2 id="多项式乘法"><a href="#多项式乘法" class="headerlink" title="多项式乘法"></a>多项式乘法</h2><p>分治法，同时可以把4优化为3，因为B+C&#x3D;E-A-D</p><h2 id="正整数乘法"><a href="#正整数乘法" class="headerlink" title="正整数乘法"></a>正整数乘法</h2><p>n位数，$O(n^2)$</p><p>采用类似多项式乘法的分治法</p><h2 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h2><p>也是类似前面的分治法$O(n^3)$，也可以用stassen算法作类似前面的优化$O(n^2.81)$</p><h2 id="布尔矩阵乘法"><a href="#布尔矩阵乘法" class="headerlink" title="布尔矩阵乘法"></a>布尔矩阵乘法</h2><p>不能用strassen算法优化，因为布尔运算没有定义减法</p><h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><p>预先构建所有可能的k维布尔内积，然后查表$O(n^3&#x2F;\log n)$</p><h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><p>分解为A的列和B的行的乘积之和+查表$O(n^3&#x2F;\log n)$</p><h3 id="法三"><a href="#法三" class="headerlink" title="法三"></a>法三</h3><p>n维向量加法表，然后分组$O(n^3&#x2F;\log^2 n)$</p><h2 id="矩阵链相乘"><a href="#矩阵链相乘" class="headerlink" title="矩阵链相乘"></a>矩阵链相乘</h2><p>线性规划</p><p>一个m*n和一个n*k的矩阵相乘默认时间复杂度为$O(m<em>n</em>k)$</p><h2 id="多项式乘法2"><a href="#多项式乘法2" class="headerlink" title="多项式乘法2"></a>多项式乘法2</h2><p>用函数上的点来表示多项式函数，先正向傅立叶变换，再逆向傅立叶变换</p><h3 id="正向傅立叶变换"><a href="#正向傅立叶变换" class="headerlink" title="正向傅立叶变换"></a>正向傅立叶变换</h3><p>取的点中有相反数关系，减少一半计算量，然后再归纳计算（要引入复数）</p><h3 id="逆向傅立叶变换"><a href="#逆向傅立叶变换" class="headerlink" title="逆向傅立叶变换"></a>逆向傅立叶变换</h3><p>求矩阵的逆，为$[V(\omega)]^{-1}&#x3D;\dfrac 1n V(\dfrac 1\omega)$</p><h1 id="非线性方法求解"><a href="#非线性方法求解" class="headerlink" title="非线性方法求解"></a>非线性方法求解</h1><h2 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h2><p>缺点是不能保证x的精度，可能y相差很少但是x相差很多</p><h2 id="迭代法求根"><a href="#迭代法求根" class="headerlink" title="迭代法求根"></a>迭代法求根</h2><p>就是董说的蛛网法，问题是能不能收敛</p><h2 id="牛顿法"><a href="#牛顿法" class="headerlink" title="牛顿法"></a>牛顿法</h2><p>根据切线求下一个，性能依赖于x的选取</p><h1 id="11-计算机不是万能的"><a href="#11-计算机不是万能的" class="headerlink" title="11 计算机不是万能的"></a>11 计算机不是万能的</h1><h2 id="课内的NPC问题"><a href="#课内的NPC问题" class="headerlink" title="课内的NPC问题"></a>课内的NPC问题</h2><ul><li><p>顶点覆盖问题</p><p>设G&#x3D;(V,E)是一个无向图，G的顶点覆盖是一个顶点集合，满足G中所有的边都至少和该</p><p>集合中的一个顶点相关联。</p><p>问题：给定无向图G&#x3D;(V,E)和一个整数k，判定G是否有包含k个顶点的顶点覆盖。</p></li><li><p>支配集问题</p><p>设G&#x3D;(V,E) 是一个无向图，如果顶点集合D 满足，G 中的所有顶点要么在D 中要么与D</p><p>中至少一个顶点相邻，则称D为支配集。</p><p>问题：给定无向图G&#x3D;(V,E)和整数k，判定G中是否有一个包含≤k个顶点的支配集。</p></li><li><p>3SAT问题</p><p>3SAT问题是一般SAT问题的简化，3SAT的实例是指每个子句中恰好含有3个变量的布尔</p><p>表达式。</p><p>问题：给定以CNF 形式出现并且每个子句恰好含有3 个变量的布尔表达式，判定其是否可满足。</p></li><li><p>团问题</p><p>给定无向图G&#x3D;(V,E)，G中的一个团C是G的一个子图，满足C中的任何两个顶点均相</p><p>邻，换句话说，团即完全子图。</p><p>问题：给定无向图G&#x3D;(V,E)和整数k，判定G是否包含一个大小≥k的团。</p></li><li><p>3着色问题</p><p>设G&#x3D;(V,E)是无向图，G的有效着色是指对所有顶点的颜色指派，使得每个顶点被指派一</p><p>种颜色并且相邻顶点不被指派成相同颜色。</p><p>问题：给定无向图G&#x3D;(V,E)，判定G是否可以被3种颜色着色。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;01-引论&quot;&gt;&lt;a href=&quot;#01-引论&quot; class=&quot;headerlink&quot; title=&quot;01 引论&quot;&gt;&lt;/a&gt;01 引论&lt;/h1&gt;&lt;p&gt;N&amp;#x2F;A&lt;/p&gt;
&lt;h1 id=&quot;02-数学归纳法&quot;&gt;&lt;a href=&quot;#02-数学归纳法&quot; class=&quot;</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    <category term="理论/Theory" scheme="https://ryanstarfox.github.io/tags/%E7%90%86%E8%AE%BA-Theory/"/>
    
  </entry>
  
  <entry>
    <title>地频线——或许是我最疯狂的事吧</title>
    <link href="https://ryanstarfox.github.io/2025/05/06/2025/20250506%20%E5%9C%B0%E9%A2%91%E7%BA%BF/"/>
    <id>https://ryanstarfox.github.io/2025/05/06/2025/20250506%20%E5%9C%B0%E9%A2%91%E7%BA%BF/</id>
    <published>2025-05-05T17:43:00.000Z</published>
    <updated>2025-05-05T17:43:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这段文字写于地频线结束之后一天的傍晚，我坐在包玉刚图书馆3楼的沙发上。这对我来说更像是一个寻常的傍晚。于我而言，地频线是一段叛逆，因此在一切尘埃落定之后，显得竟然如此不真实。昨晚4点，已闻啼鸟，我回寝室，最后一次把阿姨叫醒开门，最后一次说“对不起，活动结束了，这是最后一次晚归了。”我一个人坐在自己的位置上，把除了文件传输助手的71个置顶逐一取消，翻找了好久自己以前的头像。想到bhy说“你敢想象嘛，第二天，菁菁堂会一点痕迹也没有。”天蒙蒙亮了，恍惚中我觉得或许此刻只是因为被抛起的失重惊醒，翻个身又该睡了。</p></blockquote><p>昨晚刚刚从大连飞回来，这是上交大第28届歌手大赛——地频线结束之后的第一次旅行，与导演组一道。觉得对于这一段经历，还需要写一点什么。</p><p>去年12月，自从成为歌手大赛的大岛之后，我就已经开始期待被抛起来的一刻了——只是希望尘埃落定。那时的我，急躁、不知所措。我始终认为自己做不了一个领导者——我做不了乔布斯，我只能做沃兹尼亚克，即使如今也依旧深信如此。但因种种原因我最终被推到了这个位置。我一直都战战兢兢：我参与这个活动只是因为自己的体验主义，只是在尝试偏离自己原本生活方式，可是我不敢告诉别人我的想法，我认为它很自私，怎么能把把大家投入这么多精力的一件事情仅仅视作自己对“陌生体验感”的追求。我害怕我做不好：导演组的各位都专于自己负责的部分，我害怕自己不学无术，因此无所事事，爱莫能助，我怎能成为名义上的“大岛”？</p><p>说来奇怪，复赛结束之后，我反而比决赛结束之后更有一种释然的感觉。决赛之前的我，反而有种高三之感——同样日夜与一群人为了一个共同目标做事；同样发着疯，笑点很低，苦中作乐；同样希望尽快尘埃落定，又不愿结束。待到决赛中与结束之后，甚至在决赛现场彩排的那个周末，我更深刻的感受反而是不真实感：为了地频线，暂时地放下了很多的东西：浅层的是自己的学业与日程，更深层的是自己的生活方式、处事的习惯——尤其是我的思维，人在过度疲劳之时，是真的会不想动一点脑子、不想听一点声音、不想见一点东西、不想和一个人交流的，此时只盼一片白茫茫而又虚无的清净。活动结束之后便一头扎入真实的学业之海——直至一周的备考和随后的期中考试之后，当天又与导演组一道前去机场，奔向大连的更加真实的海。</p><p>在地频线中，获得了很多的关系——这是除了陌生的体验感之外，我最想从地频线中得到的东西。但它也同样自私，我不敢告诉别人，即使它听上去又是如此正当。但结束之后，我可以纵情享受这些关系，这些联结了：我们导演组很早就相约大连，终于在五一实现——一直叫嚷着想吃大连的海鲜，真正吃到口中，那种实在感竟然有些奇怪。通过地频线，也与许多工作人员和歌手相熟识，其中不乏一些留学生——我很享受与来自孟加拉国的92%e人Mon聊天，通过他的眼睛，我看到了不一样的，但是同样有趣的世界。</p><p>地频线是与我寻常生活的巨大的偏离，日后怕是不会再有吧？彩色的记忆变得黑白，对此的思绪也逐渐混沌，但这段故事从时间之筛中留下，已在心中扎根。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这段文字写于地频线结束之后一天的傍晚，我坐在包玉刚图书馆3楼的沙发上。这对我来说更像是一个寻常的傍晚。于我而言，地频线是一段叛逆，因此在一切尘埃落定之后，显得竟然如此不真实。昨晚4点，已闻啼鸟，我回寝室，最后一次把阿姨叫醒开门，最后一次说“对不起，</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="校园/School" scheme="https://ryanstarfox.github.io/tags/%E6%A0%A1%E5%9B%AD-School/"/>
    
    <category term="大学/University" scheme="https://ryanstarfox.github.io/tags/%E5%A4%A7%E5%AD%A6-University/"/>
    
  </entry>
  
  <entry>
    <title>集合论整理</title>
    <link href="https://ryanstarfox.github.io/2025/01/15/2025/20250115%20%E9%9B%86%E5%90%88%E8%AE%BA/"/>
    <id>https://ryanstarfox.github.io/2025/01/15/2025/20250115%20%E9%9B%86%E5%90%88%E8%AE%BA/</id>
    <published>2025-01-15T03:34:00.000Z</published>
    <updated>2025-01-15T03:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="集合论"><a href="#集合论" class="headerlink" title="集合论"></a>集合论</h1><h2 id="第九章-集合"><a href="#第九章-集合" class="headerlink" title="第九章 集合"></a>第九章 集合</h2><h3 id="9-1-集合的概念和表示方法"><a href="#9-1-集合的概念和表示方法" class="headerlink" title="9.1 集合的概念和表示方法"></a>9.1 集合的概念和表示方法</h3><p>$a\in A, a\notin A$</p><h3 id="9-2-集合间的关系和特殊集合"><a href="#9-2-集合间的关系和特殊集合" class="headerlink" title="9.2 集合间的关系和特殊集合"></a>9.2 集合间的关系和特殊集合</h3><p>$&#x3D;, \subset,\subseteq,\supset,\supseteq$</p><ol><li><p>$A&#x3D;B\Leftrightarrow A\subseteq B\wedge B\subseteq A$</p></li><li><p>$A\subseteq A$</p><p>$(A\subseteq B \wedge B\subseteq C)\Rightarrow A\subseteq C$</p></li><li><p>$A\subset B：A是B的真子集$</p><p>$B\subset A：B是A的真超集合$</p></li></ol><h3 id="9-3-集合的基本运算"><a href="#9-3-集合的基本运算" class="headerlink" title="9.3 集合的基本运算"></a>9.3 集合的基本运算</h3><ol><li>$对称差：A\oplus B&#x3D;(A-B)\cup(B-A)$</li><li>$广义并、广义交：规定\cup \emptyset &#x3D; \emptyset, \cap \emptyset 无意义$</li><li>$幂集：P(A)&#x3D;{x|x\subseteq A}$</li><li>$笛卡尔积：A\times B&#x3D;{&lt;x,y&gt;|x\in A\wedge y\in B}(需要明确&lt;x_1,x_2,x_3&gt;&#x3D;&lt;&lt;x_1,x_2&gt;x_3&gt;,&lt;x_1,x_2,x_3&gt;\ne &lt;x_1,&lt;x_2,x_3&gt;&gt;)$</li></ol><h3 id="9-5-集合运算的性质与证明"><a href="#9-5-集合运算的性质与证明" class="headerlink" title="9.5 集合运算的性质与证明"></a>9.5 集合运算的性质与证明</h3><ol><li><p>$A\subseteq B\Leftrightarrow P(A)\subseteq P(B)$</p><p>$P(A)\in P(B)\Leftrightarrow A\in B$</p></li><li><p>$P(A)\cap P(B)&#x3D;P(A\cap B)$</p><p>$P(A)\cup P(B)\subseteq P(A\cup B)$</p><p>$P(A-B)\subseteq (P(A)-P(B))\cup{\emptyset}$</p><p>$传递集合：A的任意元素的元素是A的元素$</p><p>$A是传递集合\Rightarrow P(A)是传递集合$</p></li><li><p>$A\subseteq B\Rightarrow \cup A\subseteq \cup B$</p><p>$A\subseteq B\Rightarrow \cap B \subseteq \cap A$</p><p>$\cup(A\cup B)&#x3D;(\cup A)\cup(\cup B)$</p><p>$\cap(A\cup B)&#x3D;(\cap A)\cap(\cap B)$</p><p>$\cup(P(A))&#x3D;A$</p></li></ol><h3 id="9-6-有限集合的基数"><a href="#9-6-有限集合的基数" class="headerlink" title="9.6 有限集合的基数"></a>9.6 有限集合的基数</h3><ol><li>记作#(A)&#x3D;n, |A|&#x3D;n, card(A)&#x3D;n</li></ol><h2 id="第十章-关系"><a href="#第十章-关系" class="headerlink" title="第十章 关系"></a>第十章 关系</h2><h3 id="10-1-二元关系"><a href="#10-1-二元关系" class="headerlink" title="10.1 二元关系"></a>10.1 二元关系</h3><p>二元关系是有序对的集合</p><p>对于A到B得一个关系R，可以定义：</p><ol><li>$定义域dom(R)&#x3D;{x|(\exists y)(&lt;x,y&gt;\in R)}$</li><li>$值域ran(R)&#x3D;{y|(\exists x)(&lt;x,y&gt;\in R)}$</li><li>$域fld(R)&#x3D;dom(R)\cup ran(R)$</li></ol><h3 id="10-2-关系矩阵和关系图"><a href="#10-2-关系矩阵和关系图" class="headerlink" title="10.2 关系矩阵和关系图"></a>10.2 关系矩阵和关系图</h3><ol><li>关系矩阵：$&lt;x_i,y_j&gt;\in R\Rightarrow r_{ij}&#x3D;1，其余为0$</li><li>关系图：有关系则连线（有向图）</li></ol><h3 id="10-3-关系的逆、合成、限制和象"><a href="#10-3-关系的逆、合成、限制和象" class="headerlink" title="10.3 关系的逆、合成、限制和象"></a>10.3 关系的逆、合成、限制和象</h3><p>逆：$R^{-1}&#x3D;{&lt;x,y&gt;|&lt;y,x&gt;\in R}$</p><p>合成：</p><p>$S\circ R&#x3D;{&lt;x,y&gt;|(\exists z)(&lt;x,z&gt;\in R\wedge&lt;z,y&gt;\in S)}$（满足结合律不满足交换律）</p><p>限制：$R\upharpoonright A&#x3D;{&lt;x,y&gt;|&lt;x,y&gt;\in R\wedge x\in A}$</p><p>象：$R[A]&#x3D;{y|(\exists x)(x\in A\wedge&lt;x,y&gt;\in R}$</p><p>$关系矩阵：M(S\circ R)&#x3D;M(R)\cdot M(S)$</p><h3 id="10-4-关系的性质"><a href="#10-4-关系的性质" class="headerlink" title="10.4 关系的性质"></a>10.4 关系的性质</h3><ol><li><p>$R在A上是自反的\Leftrightarrow (\forall x)(x\in A\to xRx)$</p><p>$R在A上是非自反的\Leftrightarrow(\forall x)(x\in A\to x\not{R}x)$</p></li><li><p>$对称：\forall x,y\in A，若xRy\to yRx$</p><p>$反对称：(xRy\wedge yRx)\to (x&#x3D;y)$</p></li><li><p>$传递：\forall x,y,z\in A,(xRy\wedge yRx)\to xRz$</p></li></ol><h3 id="10-5-关系的闭包"><a href="#10-5-关系的闭包" class="headerlink" title="10.5 关系的闭包"></a>10.5 关系的闭包</h3><ol><li><p>$设A是有限集合，R是A上的关系，若存在自然数s和t,s&lt;t,使得R^s&#x3D;R^t，则$</p><ol><li>$R^{s+k}&#x3D;R^{t+k}$</li><li>$R^{s+kp+i}&#x3D;R^{s+i}，k和i为自然数，p&#x3D;t-s$</li><li>$B&#x3D;{R^0,R^1,\cdots,R^{t-1}}，则\forall q\in N^*,R^q\in B$</li></ol></li><li><p>$闭包:若非空集合A上的关系R，在A上有另一个关系R’满足：$</p><ol><li>$R’是自反&#x2F;对称&#x2F;传递的$</li><li>$R\subseteq R’$</li><li>$对A上任何自反&#x2F;对称&#x2F;传递的关系R’’,R\subseteq R’’\to R’\subseteq R’’$</li></ol><p>$则称关系R’为R的自反&#x2F;对称&#x2F;传递闭包，记作r(R)&#x2F;s(R)&#x2F;t(R)$</p><p>传递闭包求法：Warshall算法</p></li></ol><h3 id="10-6-等价关系和划分"><a href="#10-6-等价关系和划分" class="headerlink" title="10.6 等价关系和划分"></a>10.6 等价关系和划分</h3><ol><li>$等价关系：自反、对称、传递$</li><li>$由等价关系R诱导出来的A的划分记作\pi_R$</li><li>$诱导出划分\pi的等价关系记为R_{\pi}$</li></ol><h3 id="10-7-相容关系与覆盖"><a href="#10-7-相容关系与覆盖" class="headerlink" title="10.7 相容关系与覆盖"></a>10.7 相容关系与覆盖</h3><ol><li>$相容关系：自反、对称$</li><li>$最大相容类：非空子集上的关系R，一个相容类不是任何相容类的真子集，记作C_R$</li><li>$最大相容类的集合是A的一个覆盖，称为A的完全覆盖，记作C_R(A),C_R(A)唯一$</li></ol><h3 id="10-8-偏序关系"><a href="#10-8-偏序关系" class="headerlink" title="10.8 偏序关系"></a>10.8 偏序关系</h3><ol><li>$偏序关系自反、反对称、传递$</li><li>$拟序关系非自反、传递（能推出反对称）$</li><li>$偏序关系（弱偏序关系、半序关系）可以取等，拟序关系（强偏序关系）不能取等$</li><li>$哈斯图$</li><li>$若任意两个均可比，则为全序关系$</li><li>$良序集在全序集的基础上还要有最小值$</li></ol><h2 id="第十一章-函数"><a href="#第十一章-函数" class="headerlink" title="第十一章 函数"></a>第十一章 函数</h2><h3 id="11-1-函数和选择公理"><a href="#11-1-函数和选择公理" class="headerlink" title="11.1 函数和选择公理"></a>11.1 函数和选择公理</h3><p>函数：单值性</p><p>象——x对应的y的集合</p><p>完全原象——y对应的x的集合</p><p>dom(f)定义域</p><p>ran(f)值域</p><p>单射、满射、双射</p><h3 id="11-2-函数的合成与逆"><a href="#11-2-函数的合成与逆" class="headerlink" title="11.2 函数的合成与逆"></a>11.2 函数的合成与逆</h3><p>函数的逆不一定是函数</p><p>$f:A\to B,g:B\to A,若g\circ f&#x3D;I_A,则称g为f的左逆，同理右逆$</p><p>存在左逆，当且仅当f单射</p><p>存在右逆，当且仅当f满射</p><p>两者均存在，当且仅当f双射，此时左逆等于右逆</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;集合论&quot;&gt;&lt;a href=&quot;#集合论&quot; class=&quot;headerlink&quot; title=&quot;集合论&quot;&gt;&lt;/a&gt;集合论&lt;/h1&gt;&lt;h2 id=&quot;第九章-集合&quot;&gt;&lt;a href=&quot;#第九章-集合&quot; class=&quot;headerlink&quot; title=&quot;第九章 集合&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    <category term="理论/Theory" scheme="https://ryanstarfox.github.io/tags/%E7%90%86%E8%AE%BA-Theory/"/>
    
  </entry>
  
  <entry>
    <title>概率统计整理</title>
    <link href="https://ryanstarfox.github.io/2025/01/08/2025/20250108%20%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/"/>
    <id>https://ryanstarfox.github.io/2025/01/08/2025/20250108%20%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/</id>
    <published>2025-01-08T02:09:00.000Z</published>
    <updated>2025-01-08T02:09:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概率统计整理"><a href="#概率统计整理" class="headerlink" title="概率统计整理"></a>概率统计整理</h1><h2 id="第一章-随机事件和概率"><a href="#第一章-随机事件和概率" class="headerlink" title="第一章 随机事件和概率"></a>第一章 随机事件和概率</h2><h3 id="1-1-随机事件及其运算"><a href="#1-1-随机事件及其运算" class="headerlink" title="1.1 随机事件及其运算"></a>1.1 随机事件及其运算</h3><ol><li>区分概念：样本点、样本空间</li><li>运算规律：<ol><li>$交换律：A\cup B&#x3D;B\cup A,AB&#x3D;BA$</li><li>$结合律：(A\cup B)\cup C&#x3D;A\cup(B\cup C),(AB)C&#x3D;A(BC)$</li><li>$分配律：A\cup(BC)&#x3D;(A\cup B)(A\cup C),A(B\cup C)&#x3D;(AB)\cup (AC)$</li><li>$对偶律(De Morgan)：\overline{A\cup B}&#x3D;\bar A\bar B,\overline{AB}&#x3D;\bar A\cup\bar B$</li></ol></li></ol><h3 id="1-2-随机事件的概率"><a href="#1-2-随机事件的概率" class="headerlink" title="1.2 随机事件的概率"></a>1.2 随机事件的概率</h3><ol><li>概率三公理：<ol><li>$\forall A, P(A)\geq0$</li><li>$对于必然事件\Omega, P(\Omega)&#x3D;1$</li><li>$对于两两互不相容的事件A_1,A_2,\cdots,A_n,\cdots,即A_iA_j&#x3D;\empty,i\neq j,i,i&#x3D;1,2,\cdots,有P(\bigcup\limits_{i&#x3D;1}^{+\infty})&#x3D;\sum\limits_{i&#x3D;1}^{+\infty}P(A_i)$</li></ol></li><li>概率性质：<ol><li>$P(\empty)&#x3D;0$</li><li>$设A_1,A_2,\cdots,A_n满足A_iA_j&#x3D;\empty,i\neq j,i,j&#x3D;1,2,\cdots,n,则有P(\bigcup\limits_{i&#x3D;1}^nA_i)&#x3D;\sum\limits_{i&#x3D;1}^nP(A_i)$</li><li>$P(\bar A)&#x3D;1-P(A)$</li><li>$A\subset B\Rightarrow P(B-A)&#x3D;P(B)-P(A),P(B)\geq P(A)$</li><li>$P(A\cup B)&#x3D;P(A)+P(B)-P(AB)$</li></ol></li></ol><h3 id="1-3-条件概率"><a href="#1-3-条件概率" class="headerlink" title="1.3 条件概率"></a>1.3 条件概率</h3><ol><li>$P(B|A)&#x3D;\dfrac{P(AB)}{P(A)}$</li><li>$若B_1, B_2,\cdots,B_n为样本空间\Omega的一个划分，且P(B_i)&gt;0(i &#x3D; 1,2,\cdots,n)则对任一事件A，有P(A)&#x3D;\sum\limits_{i&#x3D;1}^nP(B_i)P(A|B_i)$</li><li>$Bayes公式：若B_1, B_2,\cdots,B_n为样本空间\Omega的一个划分，且P(B_i)&gt;0(i &#x3D; 1,2,\cdots,n)则对任一事件A，有P(B_i|A)&#x3D;\dfrac{P(AB_i)}{P(A)}&#x3D;\dfrac{P(B_i)P(A|B_i)}{\sum\limits_{i&#x3D;1}^nP(B_i)P(A|B_i)}$</li></ol><h3 id="1-4-随机事件的独立性"><a href="#1-4-随机事件的独立性" class="headerlink" title="1.4 随机事件的独立性"></a>1.4 随机事件的独立性</h3><ol><li><p>$P(AB)&#x3D;P(A)P(B)则A，B独立$</p></li><li><p>$P(A_1A_2)&#x3D;P(A_1)P(A_2)—(1)$</p><p>$P(A_2A_3)&#x3D;P(A_2)P(A_3)—(2)$</p><p>$P(A_3A_1)&#x3D;P(A_3)P(A_1)—(3)$</p><p>$P(A_2A_2A_3)&#x3D;P(A_1)P(A_2)P(A_3)—(4)$</p><p>$(1)(2)(3)成立则A_1,A_2,A_3两两独立，(1)(2)(3)(4)都成立则A_1,A_2,A_3相互独立$</p></li></ol><h2 id="第二章-随机变量及其分布"><a href="#第二章-随机变量及其分布" class="headerlink" title="第二章 随机变量及其分布"></a>第二章 随机变量及其分布</h2><h3 id="2-1-随机变量及其分布函数"><a href="#2-1-随机变量及其分布函数" class="headerlink" title="2.1 随机变量及其分布函数"></a>2.1 随机变量及其分布函数</h3><ol><li>$概率分布函数F(x)&#x3D;P(X\leq x)$</li></ol><h3 id="2-2-离散随机变量及其分布律"><a href="#2-2-离散随机变量及其分布律" class="headerlink" title="2.2 离散随机变量及其分布律"></a>2.2 离散随机变量及其分布律</h3><p>$P(X&#x3D;x_k)&#x3D;p_k,k&#x3D;1,2\cdots称为X的分布律，有性质：$</p><ol><li>$p_k\geq0,k&#x3D;1,2,\cdots,$</li><li>$\sum\limits p_k&#x3D;1$</li></ol><h4 id="1-0-1-分布"><a href="#1-0-1-分布" class="headerlink" title="1. 0-1 分布"></a>1. 0-1 分布</h4><table><thead><tr><th align="center">X</th><th align="center">1</th><th align="center">0</th></tr></thead><tbody><tr><td align="center">P</td><td align="center">p</td><td align="center">1-p</td></tr></tbody></table><p>$P(X&#x3D;k)&#x3D;p^k(1-p)^{1-k},k&#x3D;0,1$</p><h4 id="2-二项分布-X-B-n-p"><a href="#2-二项分布-X-B-n-p" class="headerlink" title="2. 二项分布 X~B(n,p)"></a>2. 二项分布 X~B(n,p)</h4><ol><li>可独立重复进行n次</li><li>每次实验结果只有两个</li></ol><p>称n重Bernoulli试验，Bernoulli概型</p><p>$P(X&#x3D;k)&#x3D;C_n^kp^k(1-p)^{n-k},k&#x3D;0,1,\cdots,n$</p><h4 id="3-泊松分布-X-P-λ"><a href="#3-泊松分布-X-P-λ" class="headerlink" title="3. 泊松分布 X~P(λ)"></a>3. 泊松分布 X~P(λ)</h4><p>$Poisson定理：\lim\limits_{n\to\infty}np_n&#x3D;\lambda&gt;0，则\lim\limits_{n\to\infty}C_n^kp_n^k(1-p_n)^{n-k}&#x3D;e^{-\lambda}\dfrac{\lambda^k}{k!}$</p><p>$P(X&#x3D;k)&#x3D;e^{-\lambda}\dfrac{\lambda^k}{k!}$</p><h3 id="2-3-连续型随机变量及其概率密度"><a href="#2-3-连续型随机变量及其概率密度" class="headerlink" title="2.3 连续型随机变量及其概率密度"></a>2.3 连续型随机变量及其概率密度</h3><p>$概率分布函数F(x)-&#x3D;\int\limits_{-\infty}^xf(t)dt,-\infty&lt;x&lt;\infty,其中f(x)是概率密度函数$</p><p>$性质$</p><ol><li>$f(x)\geq0$</li><li>$\int\limits_{-\infty}^\infty f(x)dx&#x3D;F(+\infty)&#x3D;1$</li><li>$f(x)&#x3D;F’(x)$</li><li>$P(x_0&lt;X\leq x_0+\Delta x)\approx f(x_0)\Delta x$</li><li>$P(x&#x3D;a)&#x3D;0$</li></ol><h4 id="1-均匀分布-X～U-a-b"><a href="#1-均匀分布-X～U-a-b" class="headerlink" title="1. 均匀分布 X～U(a,b)"></a>1. 均匀分布 X～U(a,b)</h4><p>$f(x)&#x3D;\begin{cases}\dfrac{1}{b-a},&amp;a&lt;x&lt;b\0,&amp;其他\end{cases}$</p><p>$F(x)&#x3D;\begin{cases}0,&amp;x&lt;a,\\dfrac{x-a}{b-a},&amp;a\leq x&lt;b,\1,&amp;x\geq b.\end{cases}$</p><h4 id="2-指数分布-X-E-λ"><a href="#2-指数分布-X-E-λ" class="headerlink" title="2. 指数分布 X~E(λ)"></a>2. 指数分布 X~E(λ)</h4><p>$f(x)&#x3D;\begin{cases}\lambda e^{-\lambda x},&amp;x&gt;0,\0,&amp;x\leq 0,\end{cases}$</p><p>$F(x)&#x3D;\begin{cases}1-e^{-\lambda x},&amp;x&gt;0,\0,&amp;x\leq0\end{cases}$</p><h4 id="3-正态分布-X～N-mu-sigma-2"><a href="#3-正态分布-X～N-mu-sigma-2" class="headerlink" title="3. 正态分布 X～N($\mu,\sigma^2$)"></a>3. 正态分布 X～N(<strong>$\mu,\sigma^2$</strong>)</h4><p>$\phi(x)&#x3D;\dfrac{1}{\sqrt{2\pi}}e^{-\frac{x^2}{2}},-\infty&lt;x&lt;+\infty$</p><p>$\Phi(x)&#x3D;\dfrac{1}{\sqrt{2\pi}}\int\limits_{-\infty}^xe^{-\frac{t^2}2}dt,-\infty&lt;x&lt;+\infty$</p><p>$\phi(x)&#x3D;\dfrac{1}{\sigma\sqrt{2\pi}}e^{-\frac{(x-\mu)^2}{2\sigma^2}}，-\infty&lt;x&lt;+\infty$</p><p>$\Phi(x)&#x3D;\dfrac 1{\sqrt{2\pi}}\int\limits_{-\infty}^{x}e^{-\frac{(x-\mu)^2}{2\sigma^2}},-\infty&lt;x\infty$</p><h4 id="2-4-随机变量函数的分布"><a href="#2-4-随机变量函数的分布" class="headerlink" title="2.4 随机变量函数的分布"></a>2.4 随机变量函数的分布</h4><p>$已知X的概率密度函数为f_X(x)，设y&#x3D;g(x),Y&#x3D;g(X)的分布函数为f_X(g^{-1}(y))\cdot|\dfrac{dx}{dy}|$</p><h2 id="第三章-多维随机变量及其分布"><a href="#第三章-多维随机变量及其分布" class="headerlink" title="第三章 多维随机变量及其分布"></a>第三章 多维随机变量及其分布</h2><h3 id="3-1-二维随机变量及其分布"><a href="#3-1-二维随机变量及其分布" class="headerlink" title="3.1 二维随机变量及其分布"></a>3.1 二维随机变量及其分布</h3><ol><li><p>$F(x,y)&#x3D;P({X\leq x}\cap{Y\leq y})&#x3D;P(X\leq x,Y\leq y)$</p></li><li><p>性质：</p><ol><li>$0\leq F(x,y)\leq 1,F(-\infty,y) &#x3D; 0,F(x,-\infty) &#x3D; 0,F(-\infty,-\infty)&#x3D;0,F(+\infty,+\infty)&#x3D;1$</li><li>$以x或y为主元，都是单调不减函数$</li><li>$以x或y为主元，都是右连续函数$</li><li>$\forall a&lt;b,c&lt;d,F(b,d)-F(a,d)-F(b,c)+F(a,c)&#x3D;P(a&lt;x\leq  b,c&lt;Y\leq d)\geq 0$</li></ol></li><li><p>$边缘分布函数F_X(x)&#x3D;F(x,+\infty),F_Y(y)&#x3D;F(+\infty,y)$</p></li></ol><h4 id="二维离散型随机变量"><a href="#二维离散型随机变量" class="headerlink" title="二维离散型随机变量"></a>二维离散型随机变量</h4><p>性质：</p><ol><li>$p_{ij}\geq 0$</li><li>$\sum\limits_i\sum\limits_j p_{ij}&#x3D;1$</li></ol><h4 id="二维连续型随机变量"><a href="#二维连续型随机变量" class="headerlink" title="二维连续型随机变量"></a>二维连续型随机变量</h4><p>性质：</p><ol><li>$f(x,y)\geq 0$</li><li>$\int\limits_{-\infty}^{\infty}\int\limits_{-\infty}^{\infty}f(x,y)dxdy&#x3D;1$</li><li>$P((X,Y)\in D)&#x3D;\iint\limits_D f(x,y)dxdy &#x3D; 1$</li><li>$在f(x,y)的连续点处，有\dfrac{\partial^2F(x,y)}{\partial x\partial y}&#x3D;f(x,y)$</li></ol><h5 id="二维均匀分布"><a href="#二维均匀分布" class="headerlink" title="二维均匀分布"></a>二维均匀分布</h5><p>$f(x,y)&#x3D;\begin{cases}\dfrac{1}{G的面积}，&amp;(x,y)\in G\0,&amp;其他\end{cases}$</p><h5 id="二维正态分布-X-Y-sim-N-mu-1-sigma-1-2-mu-2-sigma-2-2-rho"><a href="#二维正态分布-X-Y-sim-N-mu-1-sigma-1-2-mu-2-sigma-2-2-rho" class="headerlink" title="二维正态分布 $(X,Y)\sim N(\mu_1,\sigma_1^2;\mu_2,\sigma_2^2;\rho)$"></a>二维正态分布 $(X,Y)\sim N(\mu_1,\sigma_1^2;\mu_2,\sigma_2^2;\rho)$</h5><p>$f(x,y)&#x3D;\dfrac1{2\pi\sigma_1\sigma_2\sqrt{1-\rho^2}}exp\bigg{-\dfrac1{2(1-p^2)}\Big [\dfrac{(x-\mu_1)^2}{\sigma_1^2}-2\rho\dfrac{(x-\mu_1)(y-\mu_2)}{\sigma_1\sigma_2}+\dfrac{(y-\mu_2)^2}{\sigma_2^2}\Big]\bigg}$</p><h3 id="3-2-二维随机变量的条件分布"><a href="#3-2-二维随机变量的条件分布" class="headerlink" title="3.2 二维随机变量的条件分布"></a>3.2 二维随机变量的条件分布</h3><ol><li><p>$P(X&#x3D;x_i|Y&#x3D;y_j)&#x3D;\dfrac{P(X&#x3D;x_i,Y&#x3D;y_j)}{P(Y&#x3D;y_j)}&#x3D;\dfrac{p_{ij}}{P_{\cdot j}}$</p></li><li><p>$P(X&#x3D;x_i)&#x3D;\sum\limits_j P(Y&#x3D;y_j)P(X&#x3D;x_i|Y&#x3D;y_j)$</p></li><li><p>$f_{X|Y}(x|y)&#x3D;\dfrac{f(x,y)}{f_Y(y)}$</p><p>$F_{X|Y}(x|y)&#x3D;\int\limits_{-\infty}^x\dfrac{f(u,y)}{f_Y(y)}du$</p></li></ol><h3 id="3-3-随机变量的独立性"><a href="#3-3-随机变量的独立性" class="headerlink" title="3.3 随机变量的独立性"></a>3.3 随机变量的独立性</h3><ol><li>$X与Y相互独立\Leftrightarrow F(x,y)&#x3D;F_X(x)F_y(y);f_X(x)f_Y(y)$</li><li>$设(X,Y)为二维离散型随机变量，联合分布律为P(X&#x3D;x_i,Y&#x3D;y_j)&#x3D;p_{ij},则X，Y相互独立的充要条件为：P(X&#x3D;x_i,Y&#x3D;y_j)&#x3D;P(X&#x3D;x_i)P(Y&#x3D;y_j),若连续型，则f(x,y)&#x3D;f_X(x)f_Y(y)$</li></ol><h2 id="第四章-随机变量的数字特征"><a href="#第四章-随机变量的数字特征" class="headerlink" title="第四章 随机变量的数字特征"></a>第四章 随机变量的数字特征</h2><h3 id="4-1-数学期望"><a href="#4-1-数学期望" class="headerlink" title="4.1 数学期望"></a>4.1 数学期望</h3><ol><li><p>$离散：E(X)&#x3D;\sum\limits_{k&#x3D;1}^{+\infty}x_kp_k$</p><p>$连续：E(x)&#x3D;\int_{-\infty}^{+\infty}xf(x)$</p></li><li><p>$数学期望的性质$</p><ol><li>$数学期望存在\Leftrightarrow E|X|&lt;+\infty$</li><li>$X\leq Y,则E(X)\leq E(Y)$</li><li>$E(C)&#x3D;0$</li><li>$E(CX)&#x3D;CE(X)$</li><li>$E(X+Y)&#x3D;E(X)+E(Y)$</li><li>$若X，Y独立，则E(XY)&#x3D;E(X)\cdot E(Y)$</li></ol></li></ol><h3 id="4-2-方差"><a href="#4-2-方差" class="headerlink" title="4.2 方差"></a>4.2 方差</h3><ol><li><p>$D(X)&#x3D;E{[X-E(X)]^2}&#x3D;E(X^2)-[E(X)]^2$</p></li><li><p>$方差的性质：$</p><ol><li>$方差存在\Leftrightarrow E(X^2)&lt;+\infty$</li><li>$C为常数\Rightarrow D(C)&#x3D;0$</li><li>$C为常数，则D(CX)&#x3D;C^2D(X)$</li><li>$X和Y独立且方差都存在，则D(X+Y)&#x3D;D(X)+D(Y)$</li><li>$D(X)\leq E[(X-C)^2]$</li><li>$D(X)&#x3D;0\Leftrightarrow \exists C,s.t.P(X&#x3D;C)&#x3D;1, C&#x3D;E(X)$</li></ol></li></ol><h3 id="4-3-重要随机变量的数学期望和方差"><a href="#4-3-重要随机变量的数学期望和方差" class="headerlink" title="4.3 重要随机变量的数学期望和方差"></a>4.3 重要随机变量的数学期望和方差</h3><table><thead><tr><th>分布</th><th>分布律或概率密度</th><th>期望</th><th>方差</th></tr></thead><tbody><tr><td>0-1分布$B(1,p)$</td><td>$P(X&#x3D;k)&#x3D;p^k(1-p)^{1-k},\quad k&#x3D;0,1,\quad 0&lt;p&lt;1$</td><td>$p$</td><td>$p(1−p)$</td></tr><tr><td>二项分布$B(n,p)$</td><td>$P(X&#x3D;k)&#x3D;C_{n}^{k}p^{k}(1-p)^{n-k},\quad k&#x3D;0,1,2,…,n,\quad 0&lt;p&lt;1 $</td><td>$np$</td><td>$np(1−p)$</td></tr><tr><td>泊松分布$P(\lambda)$</td><td>$P(X&#x3D;k)&#x3D;\frac{\lambda ^{k}}{k!}e^{-λ},\quad \quad k&#x3D;0,1,2,…,\quad λ&gt;0$</td><td>$\lambda$</td><td>$\lambda$</td></tr><tr><td>几何分布$G(p)$</td><td>$P(X&#x3D;k)&#x3D;p(1-p)^{k-1}, k&#x3D;1, 2, \cdots, 0&lt;p&lt;1$</td><td>$\frac{1}{p}$</td><td>$\frac{1-p}{p^{2}}$</td></tr><tr><td>超几何分布$H(n,M,N)$</td><td></td><td></td><td></td></tr><tr><td>$$</td><td></td><td></td><td></td></tr><tr><td>P(X&#x3D;k)&#x3D;\frac{C_{M}^{k}C_{N-M}^{n-k}}{C_{N}^{m}},</td><td></td><td></td><td></td></tr><tr><td>$$</td><td></td><td></td><td></td></tr></tbody></table><p> max$|0, n-N+M|\le k\le min|n, M                                               | $                     | $n\frac{M}{N}$          |<br>| 负二项分布 (Pascal 分布)       | $P(X&#x3D;k)&#x3D;C_{k-1}^{r-1}p^{r}(1-p)^{k-r}, k&#x3D;r, r+1, \cdots, 0&lt;p&lt;1$                                                                 | $\frac{r}{p}$       | $\frac{r(1-p)}{p^{2}}$  |<br>| 均匀分布$U(a,b)$             | $f(x)&#x3D;\left {\begin{matrix} \frac{1}{b-a}, &amp;a&lt;x&lt;b\ 0, &amp;其他\end{matrix} \right.$                                              | $\frac{a+b}{2}$     | $\frac{(b-a)^{2}}{12}$  |<br>| 指数分布$E(\lambda)$         | $f(x)&#x3D;\left {\begin{matrix} \lambda e^{-\lambda x}, &amp;x&gt;0\ 0, \end{matrix} \right.$其他                                        | $\frac{1}{\lambda}$ | $\frac{1}{\lambda^{2}}$ |<br>| 正态分布$N(\mu, \sigma^{2})$ | $f(x, y)&#x3D;\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^{2}}{2\sigma^{2}}}, -\infty &lt;x&lt;+\infty, -\infty &lt;\mu &lt;+\infty, \sigma &gt;0$ | $\mu$               | $\sigma^{2}$            |</p><h3 id="4-4-协方差和相关系数"><a href="#4-4-协方差和相关系数" class="headerlink" title="4.4 协方差和相关系数"></a>4.4 协方差和相关系数</h3><ol><li>$cov(X,Y)&#x3D;E(XY)-E(<br>X)E(Y)$</li><li>$\rho_{XY}&#x3D;\dfrac{cov(X,Y)}{\sqrt{D(X)}\sqrt{D(Y)}}$</li><li>$D(X\pm Y)&#x3D;D(X)+D(Y)\pm2cov(X,Y)$</li><li>$协方差的性质：$<ol><li>$cov(X,Y)&#x3D;cov(Y,X)$</li><li>$cov(aX,bY)&#x3D;abcov(X,Y)$</li><li>$cov(X+Y,Z)&#x3D;cov(X,Z)+cov(Y,Z)$</li><li>$|cov(X,Y)|&#x3D;\sqrt{D(X)}\sqrt{D(Y)}$</li></ol></li><li>$相关系数的性质$<ol><li>$|\rho_{XY}|\leq 1$</li></ol></li><li>$不相关的命题等价：$<ol><li>$X和Y不相关$</li><li>$\rho_{XY}&#x3D;0$</li><li>$cov(X,Y)&#x3D;0$</li><li>$E(XY)&#x3D;E(X)E(Y)$</li><li>$D(X\pm Y)&#x3D;D(X)+D(Y)$</li><li>$D(X+Y)&#x3D;D(X-Y)$</li></ol></li></ol><h3 id="4-5-随机变量的高阶矩"><a href="#4-5-随机变量的高阶矩" class="headerlink" title="4.5 随机变量的高阶矩"></a>4.5 随机变量的高阶矩</h3><p>$k阶原点矩：E(|X|^k)$</p><p>$k阶中心矩：E{[X-E(X)]^k}$</p><p>$k+l阶混合原点矩：E(|X|^k|Y|^l)$</p><p>$k+l阶混合中心矩：E{[X-E(X)]^k[Y-E(Y)]^l}$</p><h2 id="第五章-大数定律和中心极限定理"><a href="#第五章-大数定律和中心极限定理" class="headerlink" title="第五章 大数定律和中心极限定理"></a>第五章 大数定律和中心极限定理</h2><h3 id="5-1-预备知识"><a href="#5-1-预备知识" class="headerlink" title="5.1 预备知识"></a>5.1 预备知识</h3><ol><li>$Chebyshev不等式：P(|X-\mu|\geq \epsilon)\leq \dfrac{\sigma^2}{\epsilon^2},P(|X-\mu|&lt;\epsilon)&gt;1-\dfrac{\sigma^2}{\epsilon^2}$</li></ol><h3 id="5-2-大数定律"><a href="#5-2-大数定律" class="headerlink" title="5.2 大数定律"></a>5.2 大数定律</h3><ol><li>$Bernoulli大数定律：\lim\limits_{n\to+\infty}P(|\dfrac{n_A}n-p|\geq\epsilon)&#x3D;0,\lim\limits_{n\to+\infty}P(|\dfrac{n_A}n-p|&lt;\epsilon)&#x3D;1$</li><li>$Chebyshev大数定律：\lim\limits_{n\to+\infty}P(|\dfrac1n\sum\limits_{k&#x3D;1}^n X_k-\dfrac1n\sum\limits_{k&#x3D;1}^n\mu_k|&lt;\epsilon)&#x3D;1$</li><li>$Khintchine大数定律：\lim\limits_{n\to\infty}P(|\dfrac1n\sum\limits_{k&#x3D;1}^nX_k-\mu|\geq\epsilon)&#x3D;0,\lim\limits_{n\to\infty}P(|\dfrac1n\sum\limits_{k&#x3D;1}^nX_k-\mu|&lt;\epsilon)&#x3D;1$</li></ol><h3 id="5-3-中心极限定理"><a href="#5-3-中心极限定理" class="headerlink" title="5.3 中心极限定理"></a>5.3 中心极限定理</h3><ol><li>$独立同分布的中心极限定理：设X_1,X_2,\cdots,X_n,\cdots为独立同分布的随机变量序列，\forall x,\lim\limits_{n\to\infty}P(\dfrac{\sum\limits_{k&#x3D;1}^nX_k-n\mu}{\sqrt n\sigma}\leq x)&#x3D;\Phi(x)$</li><li>$De moivre-Laplace中心极限定理：设随机变量Y_n\sim B(n,p),n\to\infty, Y_n\sim N(np, np(1-p))$</li></ol><h2 id="第六章-数理统计的预备知识"><a href="#第六章-数理统计的预备知识" class="headerlink" title="第六章 数理统计的预备知识"></a>第六章 数理统计的预备知识</h2><h3 id="6-1-数理统计的基本概念"><a href="#6-1-数理统计的基本概念" class="headerlink" title="6.1 数理统计的基本概念"></a>6.1 数理统计的基本概念</h3><ol><li>$\bar X&#x3D;\dfrac1n \sum\limits_{i&#x3D;1}^n X_i$</li><li>$S^2&#x3D;\dfrac1{n-1}\sum\limits_{i&#x3D;1}^n(X_i-\bar X)^2$</li><li>$M_k&#x3D;\dfrac1n\sum\limits_{i&#x3D;1}^n X_i^k(k&#x3D;1,2,\cdots)$</li><li>$(CM)<em>k&#x3D;\dfrac 1n\sum\limits</em>{i&#x3D;1}^n(X_i-\bar X)^k(k&#x3D;1,2,\cdots)$</li></ol><h3 id="6-2-几个常用统计量的分布"><a href="#6-2-几个常用统计量的分布" class="headerlink" title="6.2 几个常用统计量的分布"></a>6.2 几个常用统计量的分布</h3><ol><li><p>$正态分布 X\sim N(\mu,\sigma^2)$</p></li><li><p>$\chi^2分布：$</p><p>$\chi^2&#x3D;\sum\limits_{i&#x3D;1}^n X_i^2\sim\chi^2(n)$</p><p>$E(\chi^2)&#x3D;n,D(\chi^2)&#x3D;2n$</p><p>$若两者独立，则X_1+X_2\sim \chi^2(n_1+n_2)$</p><p>$n很大时,近似符合正态分布N(n,2n)$</p></li><li><p>$t分布：$</p><p>$X\sim N(0,1),Y\sim \chi^2(n),T&#x3D;\dfrac{X}{\sqrt{Y&#x2F;n}}\sim t(n)$</p><p>$n充分大(&gt;45)时，近似服从标准正态分布$</p><p>$t_{1-\alpha}(n)&#x3D;-t_\alpha(n)$</p></li><li><p>$F分布：$</p><p>$U\sim\chi^2(m),V\sim\chi^2(n)，且U,V独立，F&#x3D;\dfrac{U&#x2F;m}{V&#x2F;n}～F(m,n)$</p><p>$F\sim F(m,n)\Rightarrow \dfrac1F\sim F(n,m)$</p><p>$F_{1-\alpha}(m,n)&#x3D;\dfrac1{F_\alpha(n,m)}$</p></li></ol><h3 id="6-3-正态分布的抽样分布"><a href="#6-3-正态分布的抽样分布" class="headerlink" title="6.3 正态分布的抽样分布"></a>6.3 正态分布的抽样分布</h3><ol><li>单个正态总体的抽样分布<ol><li>$\bar X\sim N(\mu,\dfrac{\sigma^2}{n})$</li><li>$\dfrac{(n-1)S^2}{\sigma^2}&#x3D;\sum\limits_{i&#x3D;1}^n{\dfrac{X_i-\bar X}{\sigma}}\sim\chi^2(n-1)$</li><li>$\bar X与\dfrac{(n-1)S^2}{\sigma^2}独立$</li><li>$\cfrac{\bar X-\mu}{S&#x2F;\sqrt n}\sim t(n-1)$</li></ol></li><li>两个正态总体的抽样分布<ol><li>$\dfrac{S_1^2&#x2F;\sigma_1^2}{S_2^2&#x2F;\sigma_2^2}\sim F(n-1,m-1)$</li><li>$\sigma_1&#x3D;\sigma_2&#x3D;\sigma时,\dfrac{(\bar X-\bar Y)-(\mu_1-\mu_2)}{\sqrt{\dfrac1n+\dfrac1m}\sqrt{\dfrac{(n-1)S_1^2+(m-1)S_2^2}{n+m-2}}}$</li></ol></li></ol><h2 id="第七章-参数估计"><a href="#第七章-参数估计" class="headerlink" title="第七章 参数估计"></a>第七章 参数估计</h2><h3 id="7-1-点估计"><a href="#7-1-点估计" class="headerlink" title="7.1 点估计"></a>7.1 点估计</h3><ol><li>频率替代法</li><li>矩估计法</li><li>最大似然估计法</li></ol><h3 id="7-2-估计量的评价标准"><a href="#7-2-估计量的评价标准" class="headerlink" title="7.2 估计量的评价标准"></a>7.2 估计量的评价标准</h3><ol><li>无偏性——估计值的期望是实际值</li><li>有效性<ol><li>有效性的比较看方差大小，方差小的更有效</li><li>$若D(\hat\theta)&lt;D(\theta)且无偏,则有效$</li></ol></li><li>一致性<ol><li>$\lim\limits_{n\to+\infty} D(\hat\theta_n)&#x3D;0$</li></ol></li></ol><h3 id="7-3-区间估计"><a href="#7-3-区间估计" class="headerlink" title="7.3 区间估计"></a>7.3 区间估计</h3><ol><li>要选定枢轴量</li></ol><h2 id="第八章-假设检验"><a href="#第八章-假设检验" class="headerlink" title="第八章 假设检验"></a>第八章 假设检验</h2><p>确定检验统计量、拒绝域</p><h3 id="8-1-单个正态总体均值的假设检验"><a href="#8-1-单个正态总体均值的假设检验" class="headerlink" title="8.1 单个正态总体均值的假设检验"></a>8.1 单个正态总体均值的假设检验</h3><ol><li><p>方差已知</p><p>$U&#x3D;\dfrac{\bar X-\mu_0}{\sigma&#x2F;\sqrt n}\sim N(0,1)$</p></li><li><p>方差未知</p><p>$T&#x3D;\dfrac{\bar X-\mu_0}{S&#x2F;\sqrt{n}}\sim t(n-1)$</p></li></ol><h3 id="8-2-单个正态总体方差的假设检验"><a href="#8-2-单个正态总体方差的假设检验" class="headerlink" title="8.2 单个正态总体方差的假设检验"></a>8.2 单个正态总体方差的假设检验</h3><ol><li><p>均值已知</p><p>$\chi^2&#x3D;\dfrac{\sum\limits_{i&#x3D;1}^n(X_i-\mu)^2}{\sigma_0^2}\sim\chi^2(n)$</p></li><li><p>均值未知</p><p>$\chi^2&#x3D;\dfrac{(n-1)S^2}{\sigma_0^2}\sim\chi^2(n-1)$</p></li></ol><h3 id="8-3-两个正态总体参数均值差的假设检验"><a href="#8-3-两个正态总体参数均值差的假设检验" class="headerlink" title="8.3 两个正态总体参数均值差的假设检验"></a>8.3 两个正态总体参数均值差的假设检验</h3><ol><li><p>方差$\sigma_1^2,\sigma_2^2已知$</p><p>$\bar X-\bar Y\sim N(\delta,\dfrac{\sigma_1^2}n+\dfrac{\sigma_2^2}m)$</p></li><li><p>方差$\sigma_1^2&#x3D;\sigma_2^2&#x3D;\sigma^2$未知</p><p>$T&#x3D;\dfrac{\bar X-\bar Y-\delta}{S_W\sqrt{\dfrac1n+\dfrac1m}}\sim t(n+m-2)$</p></li><li><p>方差$\sigma_1^2,\sigma_2^2$未知，但样本容量相等</p><p>$\dfrac{\bar Z-\delta}{S_Z&#x2F;\sqrt n}\sim t(n-1)$</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概率统计整理&quot;&gt;&lt;a href=&quot;#概率统计整理&quot; class=&quot;headerlink&quot; title=&quot;概率统计整理&quot;&gt;&lt;/a&gt;概率统计整理&lt;/h1&gt;&lt;h2 id=&quot;第一章-随机事件和概率&quot;&gt;&lt;a href=&quot;#第一章-随机事件和概率&quot; class=&quot;header</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    <category term="理论/Theory" scheme="https://ryanstarfox.github.io/tags/%E7%90%86%E8%AE%BA-Theory/"/>
    
  </entry>
  
  <entry>
    <title>C++ 常用库</title>
    <link href="https://ryanstarfox.github.io/2025/01/07/2025/20250107%20C++%E5%B8%B8%E7%94%A8%E5%BA%93/"/>
    <id>https://ryanstarfox.github.io/2025/01/07/2025/20250107%20C++%E5%B8%B8%E7%94%A8%E5%BA%93/</id>
    <published>2025-01-07T06:47:00.000Z</published>
    <updated>2025-01-07T06:47:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="C-常用库"><a href="#C-常用库" class="headerlink" title="C++ 常用库"></a>C++ 常用库</h2><h3 id="iostream"><a href="#iostream" class="headerlink" title="iostream"></a>iostream</h3><ol><li><p>控制精度</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">3</span>) &lt;&lt; <span class="number">3.1415926</span></span><br></pre></td></tr></table></figure></li><li><p>小数模式：<code>fixed</code></p></li><li><p>科学技术法：<code>scientific</code></p></li></ol><h3 id="fstream"><a href="#fstream" class="headerlink" title="fstream"></a>fstream</h3><ol><li><p>逐行读取文件内容</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">std::ifstream <span class="title">file</span><span class="params">(<span class="string">&quot;example.txt&quot;</span>)</span></span>;  <span class="comment">// 打开文件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!file) &#123;  <span class="comment">// 检查文件是否成功打开</span></span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;Unable to open the file!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::string line;</span><br><span class="line">    <span class="comment">// 逐行读取文件内容</span></span><br><span class="line">    <span class="keyword">while</span> (std::<span class="built_in">getline</span>(file, line)) &#123;</span><br><span class="line">        std::cout &lt;&lt; line &lt;&lt; std::endl;  <span class="comment">// 输出每一行</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    file.<span class="built_in">close</span>();  <span class="comment">// 关闭文件</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>写入文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::ofstream <span class="title">file</span><span class="params">(<span class="string">&quot;output.txt&quot;</span>)</span></span>;</span><br><span class="line">file &lt;&lt; <span class="string">&quot;Hello, World!&quot;</span> &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure></li></ol><h3 id="sstream"><a href="#sstream" class="headerlink" title="sstream"></a>sstream</h3><ol><li><p>isstream</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="function">std::istringstream <span class="title">iss</span><span class="params">(<span class="string">&quot;42 3.14 hello&quot;</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">    std::string str;</span><br><span class="line">    iss &gt;&gt; i &gt;&gt; d &gt;&gt; str;</span><br><span class="line">    std::cout &lt;&lt; i &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; d &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; str &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>osstream</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">std::ostringstream oss;</span><br><span class="line">oss &lt;&lt; <span class="number">42</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="number">3.14</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">std::string result = oss.<span class="built_in">str</span>();  <span class="comment">// 获取输出结果字符串</span></span><br><span class="line">std::cout &lt;&lt; result &lt;&lt; std::endl;  <span class="comment">// 输出 &quot;42 3.14 hello&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>stringstream配合getline处理输入：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">stringstream <span class="title">ss</span><span class="params">(input1)</span></span>;</span><br><span class="line">string segment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">getline</span>(ss, segment,<span class="string">&#x27; &#x27;</span>))&#123;</span><br><span class="line">    <span class="function">stringstream <span class="title">NodeStream</span><span class="params">(segment)</span></span>;</span><br><span class="line">    string node, distance;</span><br><span class="line">    <span class="built_in">getline</span>(NodeStream, node, <span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    <span class="built_in">getline</span>(NodeStream, distance, <span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    graph[node].distance = <span class="built_in">stoi</span>(distance);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ss = <span class="built_in">stringstream</span>(input2);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(ss, segment, <span class="string">&#x27; &#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 分割每个连接描述，例如 &quot;S:A&quot;</span></span><br><span class="line">    <span class="function">stringstream <span class="title">edgeStream</span><span class="params">(segment)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">getline</span>(edgeStream, from, <span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    <span class="built_in">getline</span>(edgeStream, to, <span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h3 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h3><h4 id="构造函数和析构函数"><a href="#构造函数和析构函数" class="headerlink" title="构造函数和析构函数"></a>构造函数和析构函数</h4><ul><li><code>vector(size_type n, const value_type&amp; val)</code>：构造一个包含n个元素的vector，每个元素都初始化为val。</li><li><code>vector(const vector&amp; x)</code>：复制构造函数，创建一个与x相同的vector。</li></ul><h4 id="容量相关函数"><a href="#容量相关函数" class="headerlink" title="容量相关函数"></a>容量相关函数</h4><ul><li><code>size()</code>：返回vector中元素的个数。</li><li><code>empty()</code>：检查vector是否为空，如果为空则返回true。</li></ul><h4 id="元素访问函数"><a href="#元素访问函数" class="headerlink" title="元素访问函数"></a>元素访问函数</h4><ul><li><code>operator[]</code>：返回指定位置元素的引用。</li><li><code>at(size_type n)</code>：返回指定位置元素的引用，同时进行边界检查。</li><li><code>front()</code>：返回vector中第一个元素的引用。</li><li><code>back()</code>：返回vector中最后一个元素的引用。</li></ul><h4 id="修改器函数"><a href="#修改器函数" class="headerlink" title="修改器函数"></a>修改器函数</h4><ul><li><code>assign(size_type n, const value_type&amp; val)</code>：将vector中的元素替换为n个val。</li><li><code>push_back(const value_type&amp; val)</code>：在vector的末尾添加一个元素val。</li><li><code>pop_back()</code>：删除vector末尾的元素。</li><li><code>insert(iterator position, const value_type&amp; val)</code>：在position位置插入一个元素val。</li><li><code>erase(iterator position)</code>：删除position位置处的元素。</li><li><code>erase(iterator first, iterator last)</code>：删除[first, last)区间内的元素。</li><li><code>clear()</code>：清空vector中的所有元素。</li></ul><h4 id="迭代器函数"><a href="#迭代器函数" class="headerlink" title="迭代器函数"></a>迭代器函数</h4><ul><li><p><code>begin()</code>：返回指向vector中第一个元素的迭代器。</p></li><li><p><code>end()</code>：返回指向vector中最后一个元素之后位置的迭代器。</p></li><li><p><code>rbegin()</code>：返回指向vector中最后一个元素的逆向迭代器。</p></li><li><p><code>rend()</code>：返回指向vector中第一个元素之前位置的逆向迭代器。</p></li><li><p><code>vector::iterator</code>&amp;<code>vector::reverse_iterator</code></p></li><li><p>迭代器可以用类似这样的语法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i:v)&#123; cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i = v.<span class="built_in">begin</span>(); i!=v.end; i++)&#123;cout &lt;&lt; *i &lt;&lt; <span class="string">&quot; &quot;</span>&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="队列操作"><a href="#队列操作" class="headerlink" title="队列操作"></a>队列操作</h4><ul><li><code>emplace(iterator position, const value_type&amp; val)</code>：在vector的指定位置直接构造元素（是插入）。</li><li><code>emplace_back(val)</code>：在vector的末尾直接构造元素。</li></ul><h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><ul><li><code>swap(vector&lt;T&gt;&amp; other)</code>：交换两个 <code>vector</code>的内容。</li><li><code>assign(size_type n, const T&amp; val)</code>：将 <code>vector</code>中的元素替换为 <code>n</code>个 <code>val</code>。</li><li><code>assign(iterator first, iterator last)</code>：将 <code>vector</code>中的元素替换为指定范围的元素。</li></ul><h3 id="pair"><a href="#pair" class="headerlink" title="pair"></a>pair</h3><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><ul><li><code>pair(const first_type&amp; a, const second_type&amp; b)</code>：创建一个pair，其first成员初始化为a，second成员初始化为b。</li></ul><h3 id="成员访问"><a href="#成员访问" class="headerlink" title="成员访问"></a>成员访问</h3><ul><li><code>first</code>：返回pair的第一个成员的引用。</li><li><code>second</code>：返回pair的第二个成员的引用。</li></ul><h3 id="成员函数"><a href="#成员函数" class="headerlink" title="成员函数"></a>成员函数</h3><ul><li><code>swap(pair&amp; p)</code>：交换两个pair的成员。</li></ul><h3 id="非成员函数"><a href="#非成员函数" class="headerlink" title="非成员函数"></a>非成员函数</h3><ul><li><code>make_pair(T1 a, T2 b)</code>：创建一个pair对象，其first成员用a初始化，second成员用b初始化。</li><li><code>pair</code>的比较规则：先比较pair.first，再比较pair.second</li></ul><h3 id="deque"><a href="#deque" class="headerlink" title="deque"></a>deque</h3><p>同 <code>vector</code></p><h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><h4 id="构造函数-1"><a href="#构造函数-1" class="headerlink" title="构造函数"></a>构造函数</h4><ul><li><code>stack&lt;T&gt; stk;</code>：创建一个空的 <code>stack</code>，元素类型为 <code>T</code>。</li><li><code>stack&lt;T&gt; stk(c);</code>：使用容器 <code>c</code> 的副本作为 <code>stack</code> 的底层容器来创建 <code>stack</code>。</li><li><code>stack&lt;T, Container&lt;T&gt;&gt; stk;</code>：创建一个 <code>stack</code>，元素类型为 <code>T</code>，底层容器为 <code>Container</code>。</li></ul><h4 id="容量操作"><a href="#容量操作" class="headerlink" title="容量操作"></a>容量操作</h4><ul><li><code>empty()</code>：检查 <code>stack</code> 是否为空。</li><li><code>size()</code>：返回 <code>stack</code> 中元素的数量。</li></ul><h4 id="元素访问"><a href="#元素访问" class="headerlink" title="元素访问"></a>元素访问</h4><ul><li><code>top()</code>：返回栈顶元素的引用。如果栈为空，则行为未定义。</li></ul><h4 id="修改器"><a href="#修改器" class="headerlink" title="修改器"></a>修改器</h4><ul><li><code>push(const T&amp; val)</code>：将元素 <code>val</code> 压入栈顶。</li><li><code>pop()</code>：移除栈顶元素。如果栈为空，则行为未定义。</li><li><code>emplace(args...)</code>：在栈顶构造元素，使用 <code>args</code> 作为构造函数的参数。</li><li><code>swap(stack&lt;T&gt;&amp; other)</code>：交换两个 <code>stack</code> 的内容。</li></ul><h3 id="queue"><a href="#queue" class="headerlink" title="queue"></a>queue</h3><p>同 <code>stack</code>，元素访问变成 <code>front()</code>和 <code>back()</code></p><h3 id="priority-queue"><a href="#priority-queue" class="headerlink" title="priority_queue"></a>priority_queue</h3><p>同 <code>queue</code></p><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><h4 id="创建-set"><a href="#创建-set" class="headerlink" title="创建 set"></a>创建 <code>set</code></h4><ul><li><code>set&lt;T&gt; s;</code>：创建一个空的 <code>set</code>，元素类型为 <code>T</code>，默认使用 <code>operator&lt;</code> 作为比较函数。</li><li><code>set&lt;T, Compare&gt; s;</code>：创建一个 <code>set</code>，元素类型为 <code>T</code>，比较函数为 <code>Compare</code>。</li><li>可以直接用 <code>&#123;&#125;</code>来初始化</li></ul><h4 id="容量操作-1"><a href="#容量操作-1" class="headerlink" title="容量操作"></a>容量操作</h4><ul><li><code>empty()</code>：检查 <code>set</code> 是否为空。</li><li><code>size()</code>：返回 <code>set</code> 中元素的数量。</li></ul><h4 id="元素访问-1"><a href="#元素访问-1" class="headerlink" title="元素访问"></a>元素访问</h4><ul><li><code>find(const T&amp; val)</code>：返回一个指向 <code>set</code> 中值为 <code>val</code> 的元素的迭代器，如果找不到，则返回 <code>end()</code>。</li><li><code>count(const T&amp; val)</code>：返回 <code>set</code> 中值为 <code>val</code> 的元素的数量，由于 <code>set</code> 中元素唯一，因此结果只能是 0 或 1。</li></ul><h4 id="修改器-1"><a href="#修改器-1" class="headerlink" title="修改器"></a>修改器</h4><ul><li><code>insert(const T&amp; val)</code>：将 <code>val</code> 插入到 <code>set</code> 中，如果 <code>val</code> 已经存在，则 <code>set</code> 不变。</li><li><code>erase(iterator position)</code>：从 <code>set</code> 中删除迭代器 <code>position</code> 指向的元素。</li><li><code>erase(const T&amp; val)</code>：从 <code>set</code> 中删除所有值为 <code>val</code> 的元素。</li><li><code>clear()</code>：删除 <code>set</code> 中所有的元素。</li><li><code>emplace(args...)</code>：在 <code>set</code> 中构造元素，使用 <code>args</code> 作为构造函数的参数。</li><li><code>emplace_hint(const_iterator position, args...)</code>：在 <code>set</code> 中构造元素，使用 <code>args</code> 作为构造函数的参数，并尽量在 <code>position</code> 之前插入。</li></ul><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><h4 id="创建-map"><a href="#创建-map" class="headerlink" title="创建 map"></a>创建 <code>map</code></h4><ul><li><code>map&lt;Key, T&gt; m;</code>：创建一个空的 <code>map</code>，键类型为 <code>Key</code>，值类型为 <code>T</code>，默认使用 <code>operator&lt;</code> 作为比较函数。</li><li><code>map&lt;Key, T, Compare&gt; m;</code>：创建一个 <code>map</code>，键类型为 <code>Key</code>，值类型为 <code>T</code>，比较函数为 <code>Compare</code>。</li></ul><h4 id="容量操作-2"><a href="#容量操作-2" class="headerlink" title="容量操作"></a>容量操作</h4><ul><li><code>empty()</code>：检查 <code>map</code> 是否为空。</li><li><code>size()</code>：返回 <code>map</code> 中键值对的数量。</li></ul><h4 id="元素访问-2"><a href="#元素访问-2" class="headerlink" title="元素访问"></a>元素访问</h4><ul><li><code>operator[]</code>：允许通过键直接访问对应的值，如果键不存在，则自动创建一个键值对，其值为值类型的默认构造值。</li><li><code>at(const Key&amp; key)</code>：返回键 <code>key</code> 对应的值，如果键不存在，则抛出 <code>std::out_of_range</code> 异常。</li></ul><h4 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h4><ul><li><code>find(const Key&amp; key)</code>：返回一个指向键 <code>key</code> 对应的键值对的迭代器，如果找不到，则返回 <code>end()</code>。</li><li><code>count(const Key&amp; key)</code>：返回 <code>map</code> 中键 <code>key</code> 的数量，由于键是唯一的，结果只能是 0 或 1。</li></ul><h4 id="修改器-2"><a href="#修改器-2" class="headerlink" title="修改器"></a>修改器</h4><ul><li><code>insert(const value_type&amp; val)</code>：插入一个键值对。</li><li><code>erase(iterator position)</code>：删除迭代器 <code>position</code> 指向的键值对。</li><li><code>erase(const Key&amp; key)</code>：删除键 <code>key</code> 对应的键值对。</li><li><code>clear()</code>：删除 <code>map</code> 中所有的键值对。</li><li><code>emplace(args...)</code>：在 <code>map</code> 中构造键值对，使用 <code>args</code> 作为构造函数的参数。</li></ul><h3 id="string"><a href="#string" class="headerlink" title="string"></a>string</h3><h4 id="字符串长度和容量"><a href="#字符串长度和容量" class="headerlink" title="字符串长度和容量"></a>字符串长度和容量</h4><ul><li><code>size()</code>：返回字符串中的字符数。</li></ul><h4 id="字符串修改"><a href="#字符串修改" class="headerlink" title="字符串修改"></a>字符串修改</h4><ul><li><code>clear()</code>：清空字符串。</li><li><code>insert(size_t pos, const string&amp; str)</code>：在位置 <code>pos</code> 插入字符串 <code>str</code>。</li><li><code>erase(size_t pos, size_t len)</code>：删除从位置 <code>pos</code> 开始的 <code>len</code> 个字符。</li><li><code>replace(size_t pos, size_t len, const string&amp; str)</code>：将位置 <code>pos</code> 开始的 <code>len</code> 个字符替换为字符串 <code>str</code>。</li><li><code>push_back(char c)</code>：在字符串末尾添加字符 <code>c</code>。</li><li><code>pop_back()</code>：删除字符串末尾的字符。</li></ul><h4 id="字符串查询"><a href="#字符串查询" class="headerlink" title="字符串查询"></a>字符串查询</h4><ul><li><code>find(const string&amp; str, size_t pos=0)</code>：从位置 <code>pos</code> 开始查找子字符串 <code>str</code>，返回找到的位置，如果没有找到则返回 <code>string::npos</code>。</li><li><code>rfind(const string&amp; str, size_t pos=npos)</code>：从位置 <code>pos</code> 开始向左查找子字符串 <code>str</code>，返回找到的位置，如果没有找到则返回 <code>string::npos</code>。</li><li><code>find_first_of(const string&amp; str, size_t pos=0)</code>：从位置 <code>pos</code> 开始查找任意一个属于 <code>str</code> 的字符，返回找到的位置，如果没有找到则返回 <code>string::npos</code>。</li></ul><h4 id="字符串的子串"><a href="#字符串的子串" class="headerlink" title="字符串的子串"></a>字符串的子串</h4><ul><li><code>substr(size_t pos, size_t len)</code>：返回从位置 <code>pos</code> 开始的 <code>len</code> 个字符的子字符串。</li></ul><h4 id="字符串的连接"><a href="#字符串的连接" class="headerlink" title="字符串的连接"></a>字符串的连接</h4><ul><li><code>operator+(const string&amp; str)</code>：返回两个字符串连接后的新字符串。</li><li><code>append(const string&amp; str)</code>：将字符串 <code>str</code> 添加到当前字符串的末尾。</li></ul><h4 id="字符串与数字之间的转换"><a href="#字符串与数字之间的转换" class="headerlink" title="字符串与数字之间的转换"></a>字符串与数字之间的转换</h4><ul><li><code>to_string</code></li><li><code>stoi</code></li><li><code>stod</code></li></ul><h3 id="algorithm"><a href="#algorithm" class="headerlink" title="algorithm"></a>algorithm</h3><h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><ol><li>sort</li></ol><ul><li><pre><code class="language-cpp">std::sort(arr, arr + n); // 对数组 arr 中的前 n 个元素排序std::sort(v.begin(), v.end()); // 对 vector v 中的元素排序<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. stable_sort</span><br><span class="line"></span><br><span class="line">- ```cpp</span><br><span class="line">  std::stable_sort(v.begin(), v.end()); // 稳定排序</span><br></pre></td></tr></table></figure></code></pre></li></ul><ol start="3"><li>Partial_sort</li></ol><ul><li><pre><code class="language-cpp">std::partial_sort(arr, arr + n, arr + m); // 排序前 n 个元素<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### find</span><br><span class="line"></span><br><span class="line">1. find</span><br><span class="line"></span><br><span class="line">- ```cpp</span><br><span class="line">  auto it = std::find(v.begin(), v.end(), value);</span><br><span class="line">  if (it != v.end()) &#123;</span><br><span class="line">      // 找到了元素</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul><ol start="2"><li>Find_if</li></ol><ul><li><pre><code class="language-cpp">auto it = std::find_if(v.begin(), v.end(), [](int x) &#123; return x &gt; 10; &#125;);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. Lower_bound</span><br><span class="line"></span><br><span class="line">- ```cpp</span><br><span class="line">  auto it = std::lower_bound(v.begin(), v.end(), value);</span><br></pre></td></tr></table></figure>类似也有upper_bound</code></pre></li></ul><h4 id="permutation"><a href="#permutation" class="headerlink" title="permutation"></a>permutation</h4><ol><li><pre><code class="language-cpp">next_permutation(v.begin, v.end)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2. ```cpp</span><br><span class="line">   prev_permutation(v.begin, v.end)</span><br></pre></td></tr></table></figure></code></pre></li></ol><h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><h4 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h4><h4 id="rotate"><a href="#rotate" class="headerlink" title="rotate"></a>rotate</h4><h3 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">double</span> real, imag;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Complex</span>(<span class="type">double</span> r = <span class="number">0</span>, <span class="type">double</span> i = <span class="number">0</span>) : <span class="built_in">real</span>(r), <span class="built_in">imag</span>(i) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    Complex <span class="keyword">operator</span>+(<span class="type">const</span> Complex&amp; other) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Complex</span>(real + other.real, imag + other.imag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; real &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; imag &lt;&lt; <span class="string">&quot;i&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">Complex <span class="title">c1</span><span class="params">(<span class="number">1.0</span>, <span class="number">2.0</span>)</span>, <span class="title">c2</span><span class="params">(<span class="number">3.0</span>, <span class="number">4.0</span>)</span></span>;</span><br><span class="line">    Complex c3 = c1 + c2;</span><br><span class="line">    c<span class="number">3.</span><span class="built_in">display</span>();  <span class="comment">// 输出: 4.0 + 6.0i</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="捕捉异常"><a href="#捕捉异常" class="headerlink" title="捕捉异常"></a>捕捉异常</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    cout &lt;&lt; a.<span class="built_in">at</span>(<span class="number">6</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> (<span class="type">const</span> out_of_range e)&#123;</span><br><span class="line">cerr &lt;&lt; <span class="string">&quot;a: &quot;</span> &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;C-常用库&quot;&gt;&lt;a href=&quot;#C-常用库&quot; class=&quot;headerlink&quot; title=&quot;C++ 常用库&quot;&gt;&lt;/a&gt;C++ 常用库&lt;/h2&gt;&lt;h3 id=&quot;iostream&quot;&gt;&lt;a href=&quot;#iostream&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
  </entry>
  
  <entry>
    <title>骑车-2</title>
    <link href="https://ryanstarfox.github.io/2024/12/26/2024/20241226%20%E9%AA%91%E8%BD%A6/"/>
    <id>https://ryanstarfox.github.io/2024/12/26/2024/20241226%20%E9%AA%91%E8%BD%A6/</id>
    <published>2024-12-26T07:00:00.000Z</published>
    <updated>2024-12-26T07:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨日回寝吃了外卖晚饭，再回图书馆时竟突然决定不骑车，而是走去图书馆。</p><p>想起我在年初写过一篇文章，认为骑车恰到好处，不可再过，可我此时竟然也觉得骑车太累了，我想走去图书馆，我认为走路是一种休息。我一直喜欢走路，我是那种走路很快的人，但是以这个速度走路，对我来说是“慢悠悠”的，是我舒适的节奏。我摘下了耳机——我平时通勤总会带着耳机听点随便什么声音——音乐也好，播客也好，为了将我的注意力用一些东西填满，为了让自己沉浸到一种被营造出来的情绪中去，但此时我却想放任自己的灵魂掉入纯白的虚空。人的思维终究不是纯粹的虚空，总是会有一些浅浅的颜色越开越深，在薄暮之时，人就是会油然而生“夕阳无限好”之叹。我在汹涌的情绪之海中随波逐流，漂到一些莫名的岛屿，我不知道为什么涌上心头的是它们，我想离开它们，离开那些我害怕的未来、我遗憾的过去，但我越挣扎，就越向无底深渊靠近。可笑的是，我又享受这种强烈的感受，好似被这种煎熬赋予了人性一样。</p><p>骑车不好，骑车还是要占用太多的注意力。我还是需要时不时让大脑空转起来的，但是哪儿来的时间给这种无谓的宣泄呢。</p><p>圣诞（的后一天）快乐。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨日回寝吃了外卖晚饭，再回图书馆时竟突然决定不骑车，而是走去图书馆。&lt;/p&gt;
&lt;p&gt;想起我在年初写过一篇文章，认为骑车恰到好处，不可再过，可我此时竟然也觉得骑车太累了，我想走去图书馆，我认为走路是一种休息。我一直喜欢走路，我是那种走路很快的人，但是以这个速度走路，对我来说是</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="旅行/Travel" scheme="https://ryanstarfox.github.io/tags/%E6%97%85%E8%A1%8C-Travel/"/>
    
  </entry>
  
  <entry>
    <title>数理逻辑整理</title>
    <link href="https://ryanstarfox.github.io/2024/12/09/2024/20241209%20%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/"/>
    <id>https://ryanstarfox.github.io/2024/12/09/2024/20241209%20%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/</id>
    <published>2024-12-09T02:27:00.000Z</published>
    <updated>2024-12-09T02:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数理逻辑"><a href="#数理逻辑" class="headerlink" title="数理逻辑"></a>数理逻辑</h1><h2 id="第一章-命题逻辑的基本概念"><a href="#第一章-命题逻辑的基本概念" class="headerlink" title="第一章 命题逻辑的基本概念"></a>第一章 命题逻辑的基本概念</h2><ol><li>命题是一个陈述句，不能是悖论，有固定的真假值（只是这个值可以未知）</li><li>$P\to Q&#x3D; \neg P\vee Q$</li><li>$P \leftrightarrow Q&#x3D;(P\to Q)\wedge(Q\to P)$</li><li>合式公式<ol><li>简单命题是合式公式</li><li>如果$A$是合式公式，那么$\neg A$也是合式公式</li><li>如果$A,B$是合式公式，那么$(A\vee B),(A\wedge B),(A\to B),(A\leftrightarrow B)也是合式公式$</li><li>当且仅当使用有限次(1),(2),(3)所组成的符号串是合式公式</li></ol></li><li>重言式&#x3D;永真式，矛盾式&#x3D;永假式</li></ol><h2 id="第二章-命题逻辑的等值与推理运算"><a href="#第二章-命题逻辑的等值与推理运算" class="headerlink" title="第二章 命题逻辑的等值与推理运算"></a>第二章 命题逻辑的等值与推理运算</h2><ol><li><p>$A$与$B$真值表相同，则$A&#x3D;B$或者$A\Leftrightarrow B$</p></li><li><p>运算规律：</p><ol><li><p>双重否定律</p><p>$\neg\neg P&#x3D;P$</p></li><li><p>结合律</p><p>$(P\wedge Q)\wedge R&#x3D;P\wedge(Q\wedge R)$</p><p>$(P\vee Q)\vee R&#x3D;P\wedge(Q\vee R)$</p><p>$(P\leftrightarrow Q)\leftrightarrow R&#x3D;P\leftrightarrow(Q\leftrightarrow R)$</p><p>$(P\to Q)\to R\neq P\to(Q\to R)$</p></li><li><p>交换律</p><p>$P\wedge Q&#x3D;Q\wedge P$</p><p>$P\vee Q&#x3D;Q\vee P$</p><p>$P\leftrightarrow Q&#x3D;Q\leftrightarrow P$</p><p>$P\to Q\neq Q\to P$</p></li><li><p>分配律</p><p>$P\wedge(Q\vee R)&#x3D;(P\wedge Q)\vee(P\wedge R)$</p><p>$P\vee(Q\wedge R)&#x3D;(P\vee Q)\wedge(P\vee R)$</p><p>$P\leftrightarrow (Q\leftrightarrow R)\neq (P\leftrightarrow Q)\leftrightarrow (P\leftrightarrow Q)$</p><p>$P\to(Q\to R)&#x3D;(P\to Q)\to(P\to R)$</p></li><li><p>恒等律</p><p>$P\wedge P&#x3D;P$</p><p>$P\vee P&#x3D;P$</p><p>$P\leftrightarrow P&#x3D;T$</p><p>$P\to P&#x3D;T$</p></li><li><p>吸收率</p><p>$P\vee(P\wedge Q)&#x3D;P$</p><p>$P\wedge(P\vee Q)&#x3D;P$</p></li><li><p>摩根律</p><p>$\neg (P\vee Q)&#x3D;\neg P\wedge\neg Q$</p><p>$\neg (P\wedge Q)&#x3D;\neg P\vee\neg Q$</p><p>$\neg(P\leftrightarrow Q)&#x3D;\neg P\leftrightarrow Q&#x3D;P\leftrightarrow\neg Q&#x3D;(\neg P\wedge Q)\vee(P\wedge\neq Q)$</p><p>$\neg(P\to Q)&#x3D;P\wedge\neg Q$</p></li><li><p>同一律</p><p>$P\vee F&#x3D;P$</p><p>$P\wedge T&#x3D;P$</p><p>$T\leftrightarrow P&#x3D;P$</p><p>$T\to P&#x3D;P$</p><p>$P\to F&#x3D;\neg P$</p><p>$P\leftrightarrow F&#x3D;\neg P$</p></li><li><p>零律</p><p>$P\wedge F&#x3D;F$</p><p>$P\vee T&#x3D;T$</p><p>$P\to T&#x3D;T$</p><p>$F\to P&#x3D;T$</p></li><li><p>补余律</p><p>$P\wedge\neg P&#x3D;F$</p><p>$P\vee\neg P&#x3D;T$</p><p>$P\to\neg P&#x3D;\neg P$</p><p>$\neg P\to P&#x3D;P$</p><p>$P\leftrightarrow\neg P&#x3D;F$</p></li></ol></li><li><p>常用：</p><ol><li>$P\to Q&#x3D; \neg P\vee Q$</li><li>$P\to Q&#x3D;\neg Q\to\neg P$</li><li>$P\to(Q\to R)&#x3D;(P\wedge Q)\to R$</li><li>$P\leftrightarrow Q&#x3D;(P\wedge Q)\vee(\neg P\wedge\neg Q)$</li><li>$P\leftrightarrow Q&#x3D;(P\vee\neg Q)\wedge(\neg P\vee Q)$</li><li>$P\leftrightarrow Q&#x3D;(P\to Q)\vee (Q\to P)$</li><li>$P\to(Q\to R)&#x3D;Q\to(P\to R)$</li><li>$(P\to R)\wedge(Q\to R)&#x3D;(P\vee Q)\to R$</li></ol></li><li><p>永真式、永假式、可满足式</p></li><li><p>$\bar\vee异或，\uparrow与非，\downarrow或非$</p></li><li><p>连接词的完备集：${\neg,\wedge,\vee},{\neg,\vee},{\neg,\wedge},{\neg,\to},{\uparrow},{\downarrow}$</p></li><li><p>对偶式：将$A$中的$\vee,\wedge,T,F$换成$\wedge,\vee,F,T$，记作$A^*$</p></li><li><p>若$A&#x3D;A(P_1,P_2,\cdots,P_n)，$则令$A^-&#x3D;A(\neg P_1,\neg P_2,\cdots,\neg P_n)$</p></li><li><p>$\neg (A^<em>)&#x3D;(\neg A)^</em>,\neg(A^-)&#x3D;(\neg A)^-$</p><p>$(A^<em>)^</em>&#x3D;A,(A^-)^-&#x3D;A$</p><p>$\neg A &#x3D; A^{*-}$</p><p>$A&#x3D;B \Leftrightarrow A^<em>&#x3D;B^</em>$</p><p>$A\to B与B^*\to A^*同永真$</p><p>$A与A^-同永真性，\neg A与A^*同永真性$</p></li><li><p>析取范式形如$A_1\vee A_2\vee\cdots\vee A_n$</p></li></ol><p>   合取范式形如$A_1\wedge A_2\wedge\cdots\wedge A_n$</p><p>   任一命题都有与之等值的合取范式和析取范式</p><p>   求范式的步骤：</p><ol><li><p>消去$\to, \leftrightarrow$</p></li><li><p>使用摩根律和双重否定律，把否定词移到命题变项上</p></li><li><p>重复使用分配律</p></li><li><p>仅由极小项构成的析取式为主析取范式，极小项用$m_i$表示</p><p>仅由极大项构成的合取式为主合取范式，极大项用$M_i$表示</p></li><li><p>前提真结论必真的推理形式为正确的推理形式</p></li><li><p>$(A\Rightarrow B)\Leftrightarrow(A\to B)$</p><p>$(A\Rightarrow B)\Leftrightarrow (A\wedge \neg B)$</p></li></ol><h2 id="第三章-命题逻辑的公理化"><a href="#第三章-命题逻辑的公理化" class="headerlink" title="第三章 命题逻辑的公理化"></a>第三章 命题逻辑的公理化</h2><ol><li><p>公理系统：</p><ul><li>初始符号：公理系统允许出现的全体符号的集合</li><li>形成规则：定义了合法序列</li><li>公理：最基本的重言式</li><li>变形规则</li><li>定理：所有的重言式和它们的证明</li></ul></li><li><p>命题逻辑的公理系统</p><ul><li>初始符号：<ul><li>$A,B,C\cdots表示命题$</li><li>$\wedge,\vee,\neg表示连接词$</li><li>$( )圆括号$</li><li>$\vdash加在公式之前，表示其是永真式$</li></ul></li><li>形成规则：<ul><li>$符号\pi是合式公式，\pi取值为A,B,\cdots$</li><li>$若A，B是合式公式，则(A\vee B)是合式公式$</li><li>$若A是合式公式，则\neg A是合式公式$</li><li>$只有符合(1),(2),(3)的符号序列才是合式公式$</li></ul></li><li>定义：<ul><li>$(A\to B)定义为(\neg A\vee B)$</li><li>$(A\wedge B)定义为\neg(\neg A\vee\neg B)$</li><li>$(A\leftrightarrow B)定义为((A\to B)\wedge(B\to A))$</li></ul></li><li>公理：<ul><li>$\vdash((P\vee P)\to P)$</li><li>$\vdash(P\to(P\vee Q))$</li><li>$\vdash ((P\vee Q)\to(Q\vee P))$</li><li>$\vdash((Q\to R)\to((P\vee Q)\to(P\vee R)))$</li></ul></li><li>推理规则<ul><li>$代入原则$</li><li>$分离原则：\vdash A,\vdash A\to B\Rightarrow\vdash B$</li><li>$置换规则$</li></ul></li></ul></li><li><p>若所有成立的定理都可由系统推导出来，则称其为完备系统</p></li><li><p>推理方法：</p><p>$\gamma\to\alpha\wedge \beta \Rightarrow (\gamma\to\alpha) \wedge(\gamma\to\beta)$</p><p>$\gamma\to\alpha\vee \beta\Rightarrow\gamma\wedge \neg\alpha\to\beta$</p><p>$\alpha\wedge\beta\to\gamma\Rightarrow\alpha\to(\beta\to\gamma)$</p><p>$\alpha\vee\beta\to\gamma\Rightarrow(\alpha\to\gamma)\wedge(\beta\to\gamma)$</p></li></ol><h2 id="第四章-谓词逻辑的基本概念"><a href="#第四章-谓词逻辑的基本概念" class="headerlink" title="第四章 谓词逻辑的基本概念"></a>第四章 谓词逻辑的基本概念</h2><ol><li><p>受量词约束-&gt;约束变元；</p><p>不受量词约束-&gt;自由变元</p></li><li><p>严格来说，x要在有限域内，$\forall x$和$\exists x$才能称为合式公式</p></li></ol><h2 id="第五章-谓词逻辑的等值和推理演算"><a href="#第五章-谓词逻辑的等值和推理演算" class="headerlink" title="第五章 谓词逻辑的等值和推理演算"></a>第五章 谓词逻辑的等值和推理演算</h2><ol><li><p>等值式</p><p>$\neg (\forall x)P(x)&#x3D;(\exists x)\neg P(x)$</p><p>$\neg (\exists x)P(X)&#x3D;(\forall x)\neg P(x)$</p><p>$(\forall x)(P(x)\to q)&#x3D;(\exists x)P(x)\to q$</p><p>$(\exists x)(P(x)\to q)&#x3D;(\forall x)P(x)\to q$</p><p>$(\forall x)(p\to Q(x))&#x3D;p\to(\forall x)Q(x)$</p><p>$(\exists x)(p\to Q(x))&#x3D;p\to(\exists x)Q(x)$</p><p>$(\forall x)(P(x)\wedge Q(x))&#x3D;(\forall x)P(x)\wedge (\forall x)Q(x)$</p><p>$(\exists x)(P(x)\vee Q(X))&#x3D;(\exists x)P(x)\vee(\exists x)Q(x)$</p><p>$(\forall x)(\forall y)(P(x)\vee Q(y))&#x3D;(\forall x)P(x)\vee(\forall x)Q(x)$</p><p>$(\exists x)(\exists y)(P(x)\wedge Q(y))&#x3D;(\exists x)P(x)\wedge(\exists x)Q(x)$</p></li><li><p>范式</p><ol><li><p>前束范式</p><p>$A&#x3D;(Q_1x_1)\cdots(Q_nx_n)M(x_1,\cdots,x_n)$</p><p>$Q_i为量词，M称作公式A的母式（基式），M中不再有量词$</p></li><li><p>Skolem标准形</p><p>$(\exists x_1)\cdots(\exists x_i)(\forall x_{i+1})\cdots(\forall x_n)M(x_1,\cdots,x_n)$</p></li></ol></li><li><p>基本的推理公式</p><ol><li>$(\forall x) P(x)\vee(\forall x)Q(x)\Rightarrow (\forall x)(P(x)\vee Q(x))$</li><li>$(\exists x)(P(x)\wedge Q(x))\Rightarrow (\exists x)P(x)\wedge (\exists x)Q(x)$</li><li>$(\forall x)(P(x)\to Q(x))\Rightarrow(\forall x)P(x)\to(\forall x)Q(x)$</li><li>$(\forall x)(P(x)\to Q(x))\Rightarrow(\exists x)P(x)\to(\exists x)Q(x)$</li><li>$(\forall x)(P(x)\leftrightarrow Q(x))\Rightarrow(\forall x)P(x)\leftrightarrow(\forall x)Q(x)$</li><li>$(\forall x)(P(x)\leftrightarrow Q(x))\Rightarrow(\exists x)P(x)\leftrightarrow(\exists x)Q(x)$</li><li>$(\forall x)(P(x)\to Q(x))\wedge(\forall x)(Q(x)\to R(X))\Rightarrow(\forall x)(P(x)\to R(X))$</li><li>$(\forall x)(P(X)\to Q(X))\wedge P(a)\Rightarrow Q(a)$</li><li>$(\forall x)(\forall y)P(x,y)\Rightarrow (\exists x)(\forall y)P(x,y)$</li><li>$(\exists x)(\forall y)P(x,y)\Rightarrow(\forall y)(\exists x)P(x,y)$</li></ol></li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数理逻辑&quot;&gt;&lt;a href=&quot;#数理逻辑&quot; class=&quot;headerlink&quot; title=&quot;数理逻辑&quot;&gt;&lt;/a&gt;数理逻辑&lt;/h1&gt;&lt;h2 id=&quot;第一章-命题逻辑的基本概念&quot;&gt;&lt;a href=&quot;#第一章-命题逻辑的基本概念&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    <category term="理论/Theory" scheme="https://ryanstarfox.github.io/tags/%E7%90%86%E8%AE%BA-Theory/"/>
    
  </entry>
  
  <entry>
    <title>图论整理</title>
    <link href="https://ryanstarfox.github.io/2024/12/01/2024/20241201%20%E5%9B%BE%E8%AE%BA/"/>
    <id>https://ryanstarfox.github.io/2024/12/01/2024/20241201%20%E5%9B%BE%E8%AE%BA/</id>
    <published>2024-12-01T13:34:00.000Z</published>
    <updated>2024-12-01T13:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图论整理"><a href="#图论整理" class="headerlink" title="图论整理"></a>图论整理</h1><h2 id="第一章-基本概念"><a href="#第一章-基本概念" class="headerlink" title="第一章 基本概念"></a>第一章 基本概念</h2><h3 id="1-1-图的概念"><a href="#1-1-图的概念" class="headerlink" title="1.1 图的概念"></a>1.1 图的概念</h3><ol><li><p>$(V(G),E(G))$称为图，$V(G)$是非空集合，称为顶点集，$E(G)$是$V(G)$诸顶点之间边的集合。常用$G&#x3D;(V,E)$表示图</p></li><li><p>只讨论有限图，$|V|&#x3D;n$称为图的阶，$|E|&#x3D;m$</p></li><li><p>一些概念：</p><ol><li><p>$e_k&#x3D;(v_i,v_j)$</p><ol><li>称$v_i与v_j是相邻顶点；e_k分别与v_i,v_j关联$</li><li>称$v_i是e_k的始点，v_j是e_k的终点，v_i是v_j的直接前趋，v_j是v_i的直接后继$</li></ol></li><li><p><strong>邻接边</strong>：有一个共同顶点的两条边</p></li><li><p><strong>有向图</strong>：全部由有向边构成的图</p><p>**无向图：**全部由无向边构成的图</p><p>**混合图：**既有有向边又有无向边构成的图</p></li><li><p>**自环：**只与一个顶点关联的边</p></li><li><p>**多重边：**同一对顶点之间存在多条边</p><p>**多重图：**含有重边的图</p></li><li><p>**孤立点：**没有与任何边关联的顶点</p></li><li><p>**度$d(v)$：**与顶点关联的边的数目</p><p>**入读：**入边条数</p><p>**出度：**出边条数</p><p>**奇点：**度为奇数的点</p><p>**偶点：**度为偶数的点</p></li><li><p>**简单图：**不存在自环的无向图</p></li></ol></li><li><p>$\sum\limits_{v\in{V(G)}}d(v)&#x3D;2m$</p></li><li><p>G中奇数的顶点必为偶数个</p></li><li><p>G中出度之和&#x3D;入度之和</p></li><li><p>K<del>n</del>的变数是$\cfrac12n(n-1)$</p></li><li><p>非空简单图G中一定存在度相同的顶点</p></li><li><p><strong>n阶完全图：K<del>n</del></strong></p></li><li><p><strong>完全二分图：K<del>m,n</del></strong></p></li><li><p>**平凡图：**n&#x3D;1的图</p></li><li><p>**空图&#x2F;零图：**m&#x3D;0的图</p></li><li><p>**（k度）正则图：**所有顶点度数均相等（为k）的图</p></li><li><p><strong>阶为k的(k-1)-正则图：k-完全图</strong></p></li><li><p>**正权图：**权为正实数的赋权图</p></li><li><p><strong>子图：</strong>$V’\in V,E’\in E$</p><p><strong>支撑子图&#x2F;生成子图：</strong>$V’&#x3D;V,E’\in E$</p><p><strong>导出子图：</strong>$V’\in V,E’_V &#x3D; E_V$</p></li><li><p><strong>邻点集：</strong>$\Gamma(v)$</p><p><strong>直接后继集&#x2F;外邻集：</strong>$\Gamma^+(v)$</p><p><strong>直接前趋集&#x2F;内邻集：</strong>$\Gamma^-(v)$</p></li></ol><h3 id="1-2-图的代数表示"><a href="#1-2-图的代数表示" class="headerlink" title="1.2 图的代数表示"></a>1.2 图的代数表示</h3><ol><li><strong>邻接矩阵</strong><ul><li>对称矩阵</li><li>可以表示自环</li><li>无法表示重边</li></ul></li><li><strong>权矩阵</strong><ul><li>邻接矩阵基础上加入权值信息</li></ul></li><li><strong>关联矩阵</strong><ul><li>n x m的矩阵</li><li>$b_{ij}&#x3D;\begin{cases}1,&amp;e_j&#x3D;(v_i,v_k)\in E\-1,&amp;e_j&#x3D;(v_k,v_i)\in E\0,&amp;其他\end{cases}$</li><li>无法表示自环</li><li>可以表示重边</li></ul></li><li><strong>边列表</strong><ul><li>边列表是对关联矩阵的列进行压缩的结果</li><li>两个m维向量$\vec A$和$\vec B$，前者存放起点，后者存放终点</li><li>可选的$\vec Z$，存放权值</li><li>可以表示自环</li><li>可以表示重边</li></ul></li><li><strong>正向表</strong><ul><li>对邻接矩阵的行进行压缩的结果，把每个顶点的直接后趋集中在一起存放<ul><li>n+1维向量$\vec A$，m维向量$\vec B$</li><li>$d^+(v_i)&#x3D;A(i+1)-A(i)$</li><li>$B(A(i))$到$B(A(i+1)-1)中的任一个值，都是v_i的直接后继$</li></ul></li><li>可选的$\vec Z$，存放权值</li><li>可以表示自环</li><li>可以表示重边</li></ul></li><li><strong>逆向表</strong><ul><li>与正向表类似，把每个顶点的直接前趋放在一张表里存放</li></ul></li><li><strong>邻接表</strong><ul><li>每一个表顶点|a|b|c|，a存放点编号，b存放边的数值，c存放下一表顶点的地址指针</li><li>可以存放权值</li><li>可以表示自环</li><li>可以表示重边</li></ul></li></ol><h2 id="第二章-道路和回路"><a href="#第二章-道路和回路" class="headerlink" title="第二章 道路和回路"></a>第二章 道路和回路</h2><h3 id="2-1-图的连通性"><a href="#2-1-图的连通性" class="headerlink" title="2.1 图的连通性"></a>2.1 图的连通性</h3><ol><li><p>有向图中：</p><p>有向道路、有向回路：字面意思</p><p>无重边：<strong>简单有向道路&#x2F;简单有向回路</strong></p><p>无重边、无重顶点：<strong>初级有向道路&#x2F;初级有向回路</strong>，简称<strong>路</strong>和<strong>回路</strong></p></li><li><p>无向图中：</p><p>道路&#x2F;链、回路&#x2F;圈：字面意思</p><p>无重边：<strong>简单道路&#x2F;简单回路</strong></p><p>无重边、无重顶点：<strong>初级道路&#x2F;初级回路</strong></p></li></ol><p>**弦：**圈中不相邻顶点的边</p><p>**连通图：**G的任意两点之间都存在道路H不是G任何连通子图的真子图</p><p>**树：**不含回路的连通图</p><p>**割边&#x2F;割点：**移去后使得原有图不再连通的边&#x2F;顶点</p><p>**块：**G中极大的没有割点的连通子图</p><p>割点相关等价命题：</p><ol><li>v是G的一个割点</li><li>存在与v不同的点u,w，使得任何一条u到w的道路P<del>uw</del>经过v</li><li>V-v可以划分为两个顶点集U，W，任意$u\in U,w\in W$，u在每一条道路P<del>uw</del>上</li></ol><p>割边相关等价命题：</p><ol><li>e是G的一条割边</li><li>e不属于G的任何回路</li><li>存在G得顶点u，w，e属于u和w的任何一条道路P<del>uw</del></li><li>G-e可以划分为两个顶点集U和W，使得对任何顶点$u\in U,w\in W$，在G中的道路P<del>uw</del>都经过e</li></ol><p>图G移去若干顶点后分为两个连通子图或者剩下一个孤立的点，这些点的集合称为点断集&#x2F;断集A</p><p>$\mathcal K(G)&#x3D;\min\limits_{A\in\emptyset}{|A|}$为断量</p><p>同理边断集B，边断量$\lambda(G)$</p><p>若$\mathcal K(G)\geq k$称G为k连通图，同理k边连通图</p><p>$\mathcal K(G)\leq \lambda(G)\leq \delta(G),\delta(G)是顶点的最小度$</p><h3 id="2-3-欧拉道路与回路"><a href="#2-3-欧拉道路与回路" class="headerlink" title="2.3 欧拉道路与回路"></a>2.3 欧拉道路与回路</h3><p>**欧拉回路&#x2F;道路：**经过所有边的简单回路&#x2F;道路</p><p>**欧拉图：**存在欧拉回路</p><p>**半欧拉图：**存在欧拉道路而不存在欧拉回路</p><p>$存在欧拉回路\Leftrightarrow 各顶点的度为偶数&#x2F;出度入读相等$</p><p>$存在欧拉道路\Leftrightarrow 只有两个度为奇数的点$</p><h3 id="2-4-哈密顿道路与回路"><a href="#2-4-哈密顿道路与回路" class="headerlink" title="2.4 哈密顿道路与回路"></a>2.4 哈密顿道路与回路</h3><p>**哈密顿回路&#x2F;道路：**无向图的一条过全部顶点的初级回路</p><p>**哈密顿图：**含有H回路的无向连通图</p><p>**半哈密顿图：**含有H道路而不含H回路的无向连通图</p><p>一些充分定理：</p><ol><li><p>$\forall v_i,v_j，恒有d(v_i)+d(v_j)\geq n-1，则G中存在哈密顿道路$</p></li><li><p>$\forall v_i,v_j，恒有d(v_i)+d(v_j)\geq n，则G中存在哈密顿回路$</p></li><li><p>$若简单图每个顶点的度均大于等于\cfrac n2，则G有H回路$</p></li><li><p>$设G是简单图，v_i,v_j是不相邻顶点，且满足d(v_i)+d(v_j)\geq n，则G存在H回路的充要条件是G+(v_i,v_j)有H回路$</p></li><li><p>$先定义闭合图:若d(v_i)+d(v_j)\geq n，令G’&#x3D;G+(v_i,v_j)，重复，直到不存在这样的顶点对为止，得到的即为闭合图，记作C(G)$</p><p>$简单图G存在哈密顿回路的充要条件是其闭合图存在哈密顿回路$</p></li><li><p>$若C(G)是完全图，则G有H回路$</p></li></ol><h3 id="2-6-最短路径：Dijkstra算法"><a href="#2-6-最短路径：Dijkstra算法" class="headerlink" title="2.6 最短路径：Dijkstra算法"></a>2.6 最短路径：Dijkstra算法</h3><h3 id="2-7-关键路径：AOE"><a href="#2-7-关键路径：AOE" class="headerlink" title="2.7 关键路径：AOE"></a>2.7 关键路径：AOE</h3><h3 id="2-8-中国邮路"><a href="#2-8-中国邮路" class="headerlink" title="2.8 中国邮路"></a>2.8 中国邮路</h3><p>先找到奇点，选择最小的几条路径，加上使这些奇点变偶，然后欧拉回路</p><h2 id="第三章-树"><a href="#第三章-树" class="headerlink" title="第三章 树"></a>第三章 树</h2><h3 id="3-1-树的相关定义"><a href="#3-1-树的相关定义" class="headerlink" title="3.1 树的相关定义"></a>3.1 树的相关定义</h3><p>不含任何回路的连通图称为树（T），T中的边称为树枝，度为1的顶点称为树叶</p><p>若T是G的支撑子图，且又是一棵树，则T使G的支撑树&#x2F;生成树，又称G的树</p><h3 id="3-5-Huffman树"><a href="#3-5-Huffman树" class="headerlink" title="3.5 Huffman树"></a>3.5 Huffman树</h3><p>小在左，大在右，0在左，1在右</p><h3 id="3-6-最短树"><a href="#3-6-最短树" class="headerlink" title="3.6 最短树"></a>3.6 最短树</h3><ol><li>Kruskal算法：不断加入最短边，如成环则换次短边</li><li>Prim算法：选到已选区域最近的点</li></ol><h2 id="第四章-平面图与图图的着色"><a href="#第四章-平面图与图图的着色" class="headerlink" title="第四章 平面图与图图的着色"></a>第四章 平面图与图图的着色</h2><h3 id="4-1-平面图"><a href="#4-1-平面图" class="headerlink" title="4.1 平面图"></a>4.1 平面图</h3><p>平面图：能放在一个平面上，任何两条边都不相交，称G<strong>可嵌入平面</strong>，G是<strong>可平面图</strong>，其中一个嵌入称为<strong>平面图</strong></p><p>G同构于平面图P，称P是G的一个<strong>平面嵌入</strong></p><p>面&#x2F;域：不含任何顶点和边的区域，其中诸边称为边界</p><p>欧拉公式：对于平面连通图，$d&#x3D;m-n+2$</p><p>若G有k个连通支，则$n-m+d &#x3D; k+1$</p><p>对于一般平面图G，恒有$n-m+d\geq 2$</p><p>若平面连通图G没有割边，且每个域的边界数至少t，则$m\leq\cfrac{t(n-2)}{t-2}$</p><h3 id="4-2-极大平面图"><a href="#4-2-极大平面图" class="headerlink" title="4.2 极大平面图"></a>4.2 极大平面图</h3><p>极大平面图：</p><ol><li>连通</li><li>不存在割边</li><li>每个域边界数为3</li><li>3d&#x3D;2m, m&#x3D;3n-6, d&#x3D;2n-4</li></ol><p>简单平面图满足$m\leq 3n-6,d\leq 2n-4$</p><p>简单平面图G中存在度小于6的顶点</p><h3 id="4-3-非平面图"><a href="#4-3-非平面图" class="headerlink" title="4.3 非平面图"></a>4.3 非平面图</h3><ol><li>K<del>5</del>是非平面图，也称K^(1)^</li><li>K<del>3,3</del>是非平面图，也称K^(2)^</li><li>K^(1)^和K^(2)^图上任意加一些度为2的顶点之后得到的图称为K^(1)^型图和K^(2)^型图，统称为K型图</li><li>G是可平面图的充要条件是G不存在K型子图</li></ol><h3 id="4-4-对偶图"><a href="#4-4-对偶图" class="headerlink" title="4.4 对偶图"></a>4.4 对偶图</h3><ol><li>域-&gt;顶点，共边-&gt;相邻，求对呕吐的过程称为D过程（draw）</li><li>性质<ol><li>若G是平面图，则G一定有唯一对偶图G^*^</li><li>G^*^是连通图</li><li>若G是平面连通图，则（G^<em>^)^</em>^&#x3D;G</li><li>m&#x3D;m^<em>^, n&#x3D;d^</em>^, d&#x3D;n^*^</li><li>若C是平面图G得一个初级回路，S^<em>^是G^</em>^中与C的各边e<del>i</del>对应的e<del>i</del>^<em>^的集合，那么S^</em>^是G^*^的一个割集</li><li>G有对偶图等价于G为平面图</li></ol></li><li>每一个平面图都是5-可着色的</li><li>如果平面图G有哈密顿回路，则四色猜想成立</li><li>若任何一个3-正则平面图的域4-可着色，则任何平面图的域4-可着色</li></ol><h3 id="4-5-色数与色数多项式"><a href="#4-5-色数与色数多项式" class="headerlink" title="4.5 色数与色数多项式"></a>4.5 色数与色数多项式</h3><p>不断分割即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图论整理&quot;&gt;&lt;a href=&quot;#图论整理&quot; class=&quot;headerlink&quot; title=&quot;图论整理&quot;&gt;&lt;/a&gt;图论整理&lt;/h1&gt;&lt;h2 id=&quot;第一章-基本概念&quot;&gt;&lt;a href=&quot;#第一章-基本概念&quot; class=&quot;headerlink&quot; title=&quot;第</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    <category term="理论/Theory" scheme="https://ryanstarfox.github.io/tags/%E7%90%86%E8%AE%BA-Theory/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成整理</title>
    <link href="https://ryanstarfox.github.io/2024/11/09/2024/20241109%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/"/>
    <id>https://ryanstarfox.github.io/2024/11/09/2024/20241109%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/</id>
    <published>2024-11-09T05:35:00.000Z</published>
    <updated>2024-11-09T05:35:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Computer-Organization"><a href="#Computer-Organization" class="headerlink" title="Computer Organization"></a>Computer Organization</h1><h2 id="Lecture-01-Introduction-to-Computer-Organization"><a href="#Lecture-01-Introduction-to-Computer-Organization" class="headerlink" title="Lecture 01: Introduction to Computer Organization"></a>Lecture 01: Introduction to Computer Organization</h2><ol><li><p>Von Neumann Architecture</p><ul><li>I&#x2F;O device</li><li>Central Processing Unit (Control Unit &amp; Arithmetic&#x2F;Logic Unit)</li><li>Memory Unit</li></ul><p>In Von Neumann (Princeton) architecture, data memory and program memory are stored together, while in Harward architecture, they are stored separately</p><p>three key concepts of VN architecture</p><ul><li>instructions and data stored in a single read-write memory</li><li>Contents of memory are addressable by location, without regard to the type of data</li><li>execution occurs in a sequential fashion</li></ul></li><li><p>CPU</p><ul><li><p>Core: including ALU, CU, register</p></li><li><p>Clock: 1-5GHz</p></li><li><p>Instruction Set Architecture&#x2F;ISA 指令集(eg. x86, ARM, PowerPC, MIPS, RISCV)</p></li><li><p>ALU:</p><ul><li>Arithmetic functions：$+, -, \times, \div$</li><li>Logic：$\or, \and, \neg$</li><li>Two inputs, one control signal, results calculation can be temporarily stored in one of the registers</li></ul><p><img src="/./.Photo.asset/image-20240929210712246.png" alt="image-20240929210712246"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>CU</p><ul><li>works under instructions</li><li>CU contains<ul><li>an instructor decoder (which decodes instructions and generates control signals)</li><li>a program counter (which points to the address of the next instruction to be executed)</li></ul></li></ul><p><img src="/./.Photo.asset/image-20240929211937065.png" alt="image-20240929211937065"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>instruction set</p><ul><li>CISC (Complex Instruction Set Computers)<ul><li>Variable instruction length (1 words- n words)</li><li>variable execution time of different format instructions</li><li>more instrucction formats</li><li>upwardly compatible (new instruction set contains earlier generation’s instructions)</li><li>Eg. X86</li></ul></li><li>RISC (Reduced Instruction Set Computers)<ul><li>Fixed size (1 word)</li><li>Fixed time for all instructions</li><li>Easy to pipeline the RISC instructions (fast)</li><li>Fewer formats</li><li>eg. PowerPC, MIPS, ARM, PIC’s MCU</li></ul></li></ul></li></ul></li><li><p>Memory</p><ul><li>单位换算：<ul><li>Bit(b): 0 or 1</li><li>Byte(B): 8 bits</li><li>Nibble: 0.5 B</li><li>Word: depends on the computer, the number of bits a CPU can process at one time<ul><li>depends on the width of the CPU’s registers’ and data bus’s band width</li></ul></li><li>Double Word</li><li>K, M, G, T, P,</li></ul></li></ul></li><li><p>Bus</p><ul><li><p>System bus: connects major computer components</p></li><li><p>Arbitration:</p><ul><li>Distribution: each module has access to logic controlling and collaboration<ul><li>protocols: CSMA&#x2F;CD</li></ul></li><li>Centralized: bus controller responsible for allocating time on a bus<ul><li>Master activates a bus</li><li>Slave passively waits for a command</li></ul></li></ul></li><li><p>Type:</p><ul><li>dedicated（专用总线）</li><li>Multiplexed（复用总线）</li></ul></li><li><p>Timing</p><ul><li>Synchronous: global clock</li><li>Asynchronous: devices have their own clocks</li></ul></li><li><p>Structure：</p><ul><li><p>Single-bus structure</p><ul><li><p>pro: simple</p></li><li><p>Con: poor performance</p><p><img src="/./.Photo.asset/image-20240930131524453.png" alt="image-20240930131524453"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li></ul></li><li><p>CPU-Central Dual-Bus Structure</p><ul><li>Pro: efficient in terms of data transfer</li><li>Con: info between memory and I&#x2F;O devices has to go through CPU-&gt;Poor CPU</li></ul><p><img src="/./.Photo.asset/image-20240930131852788.png" alt="image-20240930131852788"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>Memory-Central Dual-Bus structure</p><ul><li>Both high CPU performance and data transfer throught</li></ul><p><img src="/./.Photo.asset/image-20240930132359826.png" alt="image-20240930132359826"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>Type:</p><ul><li><p>Data Bus</p><ul><li>moving data</li><li>bidirectional: both read and write</li><li>width: as wide as CPU’s register, determines how much data the processor can read in  cycle, which in turn determines a word of this computer</li></ul></li><li><p>Address Bus</p><ul><li>Designate the source or destination of the data</li><li>unidirectional: CPU-&gt;memory&#x2F;I&#x2F;O device</li><li>Width of the address bus: n, determines the max size of memory</li></ul></li><li><p>Control Bus</p><ul><li>control modules and use of data bus and address buses</li><li>2 sets of unidirectional control signals<ul><li>Command signal: CPU0-&gt;memory (I&#x2F;O device)</li><li>State signal: Memory (I&#x2F;O device)-&gt;CPU</li></ul></li></ul></li><li><p>I&#x2F;O</p><ul><li><p>Memory-mapped I&#x2F;O</p><ul><li>memory and I&#x2F;O share 1 single address space</li><li>Status and data registers of I&#x2F;O modules are treated as memory locations</li><li>same machine instructions to access both</li></ul><p><img src="/./.Photo.asset/image-20240930142323633.png" alt="image-20240930142323633"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>Isolated I&#x2F;O</p><ul><li>Two separate address space for memory and I&#x2F;O modules</li><li>Using different seets of accessing indtructions</li></ul><p><img src="/./.Photo.asset/image-20240930142340730.png" alt="image-20240930142340730"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li></ul></li></ul></li></ul></li></ul></li></ol><h2 id="Lecture-02-Digital-logic"><a href="#Lecture-02-Digital-logic" class="headerlink" title="Lecture 02: Digital logic"></a>Lecture 02: Digital logic</h2><ol><li><p>Transistor:</p><ul><li>N-type MOS transistor：<ul><li>positive voltage: switch closed, gate &#x3D; 1</li><li>zero voltage: switch open, gate &#x3D; 0</li></ul></li><li>P-type MOS transistor:<ul><li>positive voltage: switch open, gate &#x3D; 0</li><li>zero voltage: switch closed, gate &#x3D; 1</li></ul></li></ul></li><li><p>Digital symbols: classified by voltage range</p><p><img src="/./.Photo.asset/image-20240930143310181.png" alt="image-20240930143310181"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>CMOS circuit: use both n-type and p-type MOS transistors</p><p>Not:</p><p><img src="/./.Photo.asset/image-20240930143533014.png" alt="image-20240930143533014"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>Nor:</p><p><img src="/./.Photo.asset/image-20240930143555206.png" alt="image-20240930143555206"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>or就是nor加了一个inverter</p><p>nand：</p><p><img src="/./.Photo.asset/image-20240930143650890.png" alt="image-20240930143650890"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>Combintional circuit: give same output for a series of inputs</p><p>Sequential circuit: store info&#x2F; state machine</p></li><li><p>R-S latch</p><p><img src="/./.Photo.asset/image-20240930145125704.png" alt="image-20240930145125704"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><table><thead><tr><th align="center">R-S latch</th><th align="center">R&#x3D;0</th><th align="center">R&#x3D;1</th></tr></thead><tbody><tr><td align="center">S&#x3D;0</td><td align="center">Illegal</td><td align="center">set to 1</td></tr><tr><td align="center">S&#x3D;1</td><td align="center">set to 0</td><td align="center">Hold</td></tr></tbody></table></li><li><p>gated D-latch</p><img src="./.Photo.asset/image-20240930145226236.png" alt="image-20240930145226236" style="zoom:50%;"   data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'/><p>WE &#x3D; 1, Latch set to value of D</p><p>WE &#x3D; 0, hold</p></li><li><p>Register: a collection of D-latches with common we</p><p><img src="/./.Photo.asset/image-20240930145414665.png" alt="image-20240930145414665"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>to represent multi-bit values use brackets</p><p>eg. A&#x3D;0101001101010101</p><p>A[14:9] &#x3D; 101001, A[2:0] &#x3D; 101</p></li><li><p>memory structure:</p><p><img src="/./.Photo.asset/image-20240930145750775.png" alt="image-20240930145750775"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/./.Photo.asset/image-20240930145817623.png"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li></ol><h2 id="Lecture-03-IO-and-memoryMemory-taxonomy-characterisitc"><a href="#Lecture-03-IO-and-memoryMemory-taxonomy-characterisitc" class="headerlink" title="Lecture 03: IO and memoryMemory taxonomy &amp; characterisitc"></a>Lecture 03: IO and memoryMemory taxonomy &amp; characterisitc</h2><h3 id="memory-taxomony-characteristic"><a href="#memory-taxomony-characteristic" class="headerlink" title="memory taxomony &amp; characteristic"></a>memory taxomony &amp; characteristic</h3><ol><li><p>Memory taxonomy &amp; characterisitc</p><ul><li>Physical types of memory: Semiconductor (RAM &amp; ROM)</li><li>Magnetic (Disk &amp; Tape)</li><li>Optical (CD &amp; DVD)</li></ul></li><li><p>Location:</p><ul><li>CPU: register</li><li>Internal: cache, main memory</li><li>External: Disk, tape, DVD</li></ul><p>the internal unit of transfer is usually a word (restricted by data bus width)</p><p>the external unit of transfer is a block (to keep the CPU busy)</p></li><li><p>Access methods:</p><ul><li>sequential:<ul><li>tape</li><li>read through order</li><li>access time depending on location and previous location</li></ul></li><li>Direct:<ul><li>disk</li><li>Individual block has unique address</li><li>access is by jumping to vicnity and sequential search</li><li>access time depending on location and previous location</li></ul></li><li>Random:<ul><li>RAM, ROM</li><li>Individual address identify locations exactly</li><li>Access time is independent of location or previous access</li></ul></li><li>Associative<ul><li>cache</li><li>Data located based on a portion of its contents</li><li>Access time is independent of location or previous access</li></ul></li></ul></li><li><p>Performance:</p><ul><li>Access time: time between presenting address and get valid data</li><li>Memory cycle time: access time + recovery time</li><li>Transfer rate (GT&#x2F;s): data moved rate</li><li>Transfer bandwidth (GB&#x2F;s): Transfer rate * Transfer Unit size</li></ul></li><li><p>Semiconductor Memory</p><ol><li>volatile vs non-volatile<ul><li>RAM is volatile, loses data when power off</li><li>ROM is non-volatile, stores data when power off</li></ul></li><li>Static vs Dynamic<ul><li>SRAM is static, holds power as long as power applied</li><li>DRAM is dynamic, loses data unless periodically refreshed</li></ul></li></ol></li><li><p>SRAM</p><ol><li><p>Flip-flop (bits stores as on&#x2F;off gates)</p><p><img src="/./.Photo.asset/image-20241008092435128.png" alt="image-20241008092435128"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>comlex, large, expensive, fast</p></li><li><p>no refresh needed when power on, no charges to leak</p></li><li><p>Register, cache</p></li></ol></li><li><p>DRAM</p><ol><li>bits stored as charge in capacitors</li><li>charges leak, refresh needed</li><li>Simple, small, cheap, slow</li><li>main memory</li></ol></li></ol><h3 id="Memory-hierarchy"><a href="#Memory-hierarchy" class="headerlink" title="Memory hierarchy"></a>Memory hierarchy</h3><p>Register -&gt; L1 Cache -&gt; L2 cache -&gt; Main memory -&gt; Disk cache -&gt; Disk -&gt; Optical -&gt; Tape</p><h3 id="RAM-organization"><a href="#RAM-organization" class="headerlink" title="RAM organization"></a>RAM organization</h3><ol><li><p>memory interface with CPU</p><ul><li><p>address bus carries memory addresses</p></li><li><p>data bus carries actual data</p></li><li><p>Control bus carries signal</p><p>内存传指令给CU，CU传指令去存储器找数据，找到数据给ALU，ALU把结果存进内存</p></li></ul></li><li><p>Memory chip</p><ul><li><p>N x n memory chip</p><ul><li>n &#x3D; chip word width (not CPU word)</li><li>N number of n-bit words</li></ul></li><li><p>Chip I&#x2F;O</p><ul><li>Data input: $D_{n-1}-D_0$</li><li>Address: $A_{m-1}-A_0$</li><li>Control:<ul><li>WE &#x3D; write enable (assert low)<ul><li>WE &#x3D; 1: read;</li><li>WE &#x3D; 0: write;</li></ul></li><li>EN block enable (assert low)</li></ul></li></ul><p><img src="/./.Photo.asset/image-20241008100354419.png" alt="image-20241008100354419"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><ul><li>in physical view</li></ul><p><img src="/./.Photo.asset/image-20241008100806188.png" alt="image-20241008100806188"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>CPU: $N_{CPU}\times n_{CPU}$</p><p>Memory: $N_{mem}\times n_{mem}$</p><p>Word extension: $N_{CPU}&gt;N_{mem}$</p><p>Bit extension: $n_{CPU}&gt;n_{mem}$</p></li></ul></li></ol><h3 id="ROM"><a href="#ROM" class="headerlink" title="ROM"></a>ROM</h3><p>   Permanent storage, nonvolatile</p><p>   application:</p><p>   library subroutines, bios, function tables</p><p>   Types:</p><ul><li>Written during manufacture</li><li>programmable (once)<ul><li>PROM</li><li>need special equipment to program</li></ul></li><li>Read mostly<ul><li>Erasable programmable (EPROM)</li><li>ELectrically erasable (EEPROM)</li><li>Flash memory</li></ul></li></ul><h3 id="Input-Output-problems"><a href="#Input-Output-problems" class="headerlink" title="Input&#x2F;Output problems"></a>Input&#x2F;Output problems</h3><ol><li><p>I&#x2F;O Steps</p><ul><li>CPU checks I&#x2F;O module for device status</li><li>I&#x2F;O device retuerns status</li><li>if ready, CPU request data transfer by a command to I&#x2F;O module</li><li>I&#x2F;O gets a unit of data from device</li><li>I&#x2F;O transfrer data to CPU</li><li>output</li></ul></li><li><p>Programmed I&#x2F;O</p><ul><li><p>CPU executes a program directly giving control of I&#x2F;O</p><ul><li>Sense device status</li><li>r&#x2F;w commands to I&#x2F;O</li><li>transfer data</li></ul></li><li><p>CPU wait for I&#x2F;O to complete operation</p></li><li><p>Typical details:</p><ol><li>CPU requests I&#x2F;O operation</li><li>I&#x2F;O perform operation</li><li>I&#x2F;O sets status bits</li><li>CPU checks status bits periodically</li><li>I&#x2F;O not inform CPU</li><li>I&#x2F;O not interrupt CPU</li><li>CPU wait&#x2F; come back later</li></ol></li><li><p>I&#x2F;O commands includes:</p><ul><li><p>CPU issues address</p><ul><li><p>identifies module, like memory access</p></li><li><p>two types:</p><ol><li><p>Memory mapped I&#x2F;O:</p><ol><li>device and memory share address place</li><li>I&#x2F;O are treated like memory</li><li>no special comand</li></ol></li><li><p>Isolated I&#x2F;O</p><ol><li>Separated address spaces</li><li>Need I&#x2F;O or memory select line</li><li>Special commands for I&#x2F;O</li></ol></li></ol></li></ul></li><li><p>CPU issues command</p><ul><li>Control: tell module what to do</li><li>Test: check status</li><li>R&#x2F;W</li></ul></li></ul></li></ul></li></ol><p>to conclude: simple, but waste CPU time is CPU is fast.</p><h3 id="Interrupted-Driven-I-O"><a href="#Interrupted-Driven-I-O" class="headerlink" title="Interrupted Driven I&#x2F;O"></a>Interrupted Driven I&#x2F;O</h3><ol><li><p>Typical details:</p><ul><li><p>CPU requests I&#x2F;O operaiton</p></li><li><p>I&#x2F;O module performs operation while CPU does other work</p></li><li><p>I&#x2F;O module informs CPU when someting comes up by interrupting CPU</p></li><li><p>CPU deals with this event</p></li><li><p>Protocol perspective:</p><p><img src="/./.Photo.asset/image-20241009113715452.png" alt="image-20241009113715452"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p>CPU perspective:</p><ul><li>issue read command</li><li>do other work</li><li>check for interrupt at the end of each cycle</li><li>If interrupted:<ul><li>save context (register)</li><li>process interrupt<ul><li>fetch data &amp; store</li></ul></li><li>recover from saved context</li></ul></li></ul></li><li><p>some probs</p><ul><li><p>Identify interrupting module</p><ol><li><p>Connect a dedicated line for each module (limits the number of devices)</p></li><li><p>software poll</p><ul><li>common Interrupt Request</li><li>get an interrupt -&gt; CPU ask each module in turn</li><li>Clear interrupt request status</li></ul></li><li><p>daisy chain or hardware poll</p><ul><li>share common interrupt request line</li><li>Interrupt acknowledge signal is sent down a chain</li></ul></li><li><p>bus master</p></li></ol><p>module have to claim the bus before raising interrupt</p><p>Eg. PCI &amp; SCSI</p><ol start="5"><li><p>Interrupt controller</p><p>8259</p></li></ol></li><li><p>locating handler programs</p><ul><li>Using a general handler program<ul><li>CPU enters it each time interrupted</li><li>look for module responsible and get address</li></ul></li><li>Using interrupt vectors<ul><li>handler program can be stored anywhere in the memory</li><li>pointer used to link handlker program</li><li>address of pointer fixed and known to the CPU</li><li>such pointers are interrupt vectors</li></ul></li></ul></li><li><p>Dealing with multiple interrupts</p><ul><li>set different priority for interrupts</li><li>Nesting of interrupts (high-priority interrupts can interrupt low-priority interrupts)</li></ul></li></ul></li></ul></li></ol><h3 id="Direct-memory-access"><a href="#Direct-memory-access" class="headerlink" title="Direct memory access"></a>Direct memory access</h3><p>not need CPU involved</p><p>Additional module (hardware) on bus</p><p>DMA controller takes over from CPU for I&#x2F;O</p><ul><li><p>operation</p><ol><li>CPU tell DMA controller: r&#x2F;w, device address, data address, data amount</li><li>CPU continues other work</li><li>DMA controller deals with transfer</li><li>DMA controller sends interrupt when finished</li></ol><p>since DMA will take control of bus for a cycle, it will slow down the CPU not as much as CPU dong transfer</p><p>some configurations:</p><p><img src="/./.Photo.asset/image-20241010120533029.png" alt="image-20241010120533029"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/./.Photo.asset/image-20241010120619723.png" alt="image-20241010120619723"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/./.Photo.asset/image-20241010120554645.png" alt="image-20241010120554645"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li></ul><h2 id="Lecture04-80X86-Microprocessor"><a href="#Lecture04-80X86-Microprocessor" class="headerlink" title="Lecture04: 80X86 Microprocessor"></a>Lecture04: 80X86 Microprocessor</h2><h3 id="internal-organization-of-8086"><a href="#internal-organization-of-8086" class="headerlink" title="internal organization of 8086"></a>internal organization of 8086</h3><p>16-bit microprocessor, 20-bit address data bus (1MB memory),</p><ul><li><p>Two sections :</p><ul><li><p>Bus interface unit (BIU): access memory and peripherals</p></li><li><p>Execution unit (EU):</p><p>execute instructions previously fetched</p></li></ul></li><li><p>internal structure:</p><p><img src="/./.Photo.asset/image-20241010210153160.png" alt="image-20241010210153160"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li></ul><h4 id="Bus-Interface-Unit"><a href="#Bus-Interface-Unit" class="headerlink" title="Bus Interface Unit"></a>Bus Interface Unit</h4><ul><li><p>take in charge of data transfer between CPU and memory and I&#x2F;O devices</p><p>including:</p><ul><li>instruciton fetch</li><li>instruction queueing</li><li>operand fetch and storage</li><li>Address relocation</li><li>bus control</li></ul></li><li><p>consists of:</p><ul><li>4 16-bit segment registers (段寄存器): CS, DS, ES, SS</li><li>1 16-bit instruction pointer: IP</li><li>1 20-bit address adder: eg. CS*16+IP</li><li>1 6-byte instruction queue</li></ul></li><li><p>when EU executing, BIU will fetch the nect one or several instructions from the memory and put in the queue</p></li></ul><h4 id="Execution-Unit"><a href="#Execution-Unit" class="headerlink" title="Execution Unit"></a>Execution Unit</h4><ul><li>take in charge of instruction execution</li><li>Consists of:<ul><li>4 16-bit general registers:<ul><li>Accumulator (AX)</li><li>Base (BX)</li><li>Count (CX)</li><li>Data (DX)</li></ul></li><li>2 16-bit pointer registers:<ul><li>Stack pointer (SP)</li><li>Base pointer (BP)</li></ul></li><li>2 16-bit index registers:<ul><li>Source Index (SI)</li><li>Destination Index (DI)</li></ul></li><li>1 16-bit flag register (9 of 16 bits are used)</li><li>ALU</li></ul></li></ul><h4 id="Registers"><a href="#Registers" class="headerlink" title="Registers"></a>Registers</h4><p>On-chip storage: super fast but expensive</p><p>Temp storage</p><table><thead><tr><th>category</th><th>bits</th><th>register name</th></tr></thead><tbody><tr><td>general</td><td>16</td><td>AX, BX, CX, DX</td></tr><tr><td></td><td>8</td><td>AH, AL, BH, BL, CH, CL, DH, DL</td></tr><tr><td>pointer</td><td>16</td><td>SP (stack pointer), BP (base pointer)</td></tr><tr><td>Index</td><td>16</td><td>SI (source index), DI (destination index)</td></tr><tr><td>Segment</td><td>16</td><td>CS (code segment), DS (data segment), SS (stack segment), ES (extra segment)</td></tr><tr><td>Instruction</td><td>16</td><td>IP (instruciton pointer)</td></tr><tr><td>Flag</td><td>16</td><td>FR (flag register)</td></tr></tbody></table><p>Note: general registers can be accessed as 1️⃣full 16 bits (AX) 2️⃣high byte only (AH) or low byte only (AL)</p><h4 id="Pipeling-in-8086"><a href="#Pipeling-in-8086" class="headerlink" title="Pipeling in 8086"></a>Pipeling in 8086</h4><ul><li>BIU fetches and stores instructions once queue has &gt; 2 empty bytes</li><li>EU consumes instructions pre-fetched and stored in the queue</li><li>to increase effiency of CPU</li><li>works during sequential instruction execution</li></ul><p><img src="/./.Photo.asset/image-20241013131307719.png" alt="image-20241013131307719"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h4 id="Flag-register"><a href="#Flag-register" class="headerlink" title="Flag register"></a>Flag register</h4><table><thead><tr><th align="center">15</th><th align="center">14</th><th align="center">13</th><th align="center">12</th><th align="center">11</th><th>10</th><th>9</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr></thead><tbody><tr><td align="center">R</td><td align="center">R</td><td align="center">R</td><td align="center">R</td><td align="center">OF</td><td>DF</td><td>IF</td><td>TF</td><td>SF</td><td>ZF</td><td>U</td><td>AF</td><td>U</td><td>PF</td><td>U</td><td>CF</td></tr></tbody></table><p>R &#x3D; reserved, U &#x3D; undefined</p><h5 id="Conditional-flags"><a href="#Conditional-flags" class="headerlink" title="Conditional flags:"></a>Conditional flags:</h5><ol><li>CF (carry flag): set whenever carry out (D7 or D15); detect errors in unsigned arithmetic operations</li><li>PF (parity flag): if the low byte has even 1s, then set</li><li>AF (auxiliary carry flag): set if there’s a carry from d3 to d4, used in BCD related arithmetic</li><li>ZF (zero flag): set when result is 0</li><li>SF (sign flag): copied from the sign bit after op</li><li>OF: set when result of a signed number operation overflows; detect errors in signed arithmetic operations</li></ol><h5 id="Control-flags"><a href="#Control-flags" class="headerlink" title="Control flags:"></a>Control flags:</h5><ol><li>DF (direction flag): indicate direction of string operations (from low to high or high to low)</li><li>IF (interrupt flag): set&#x2F;cleared to enable&#x2F;disable external maskable interrupt requests</li><li>TF (trap flag): set to allow the program to run single-step, useful for debugging</li></ol><h3 id="Chip-interface-of-8086"><a href="#Chip-interface-of-8086" class="headerlink" title="Chip interface of 8086"></a>Chip interface of 8086</h3><p><img src="/./.Photo.asset/image-20241013135448042.png" alt="image-20241013135448042"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="control-signals"><a href="#control-signals" class="headerlink" title="control signals"></a>control signals</h3><ul><li><p>$MN&#x2F;\overline{MX}$</p><ul><li><p>Minimum mode: $MN&#x2F;\overline{MX}&#x3D;1$</p><ul><li>single CPU</li><li>control signals from the CPU</li></ul></li><li><p>Maximun mode: $MN&#x2F;\overline{MX}&#x3D;0$</p><ul><li>multiple CPUs<ul><li>8288 control chip supports</li></ul></li></ul></li></ul></li><li><p>$\overline{RD}$: Output, CPU is reading from memory or I&#x2F;O</p></li><li><p>$\overline{WR}$: Outpit, CPU is writing to memory or I&#x2F;O</p></li><li><p>$M&#x2F;\overline{IO}$: output, CPU is accessing memory (high level) or IO (low level)</p></li><li><p>$READY$: input, memory&#x2F;IO is ready for data transfer</p></li><li><p>$\overline{DEN}$: output, used to enable data transceivers</p></li><li><p>$DT&#x2F;\overline{R}$: output, used to inform the data transceivers the direction of data transfer (send: high; receive: low)</p></li><li><p>$\overline{BHE}$: output, $\overline{BHE}&#x3D;0$, AD8~15 are used, 1, not used</p></li><li><p>$ALE$: outputm latch enable signal of the address latch</p></li><li><p>$HOLD$: input signal, hold the bus request</p></li><li><p>$HLDA$: output signal, hold request acknowledge</p></li><li><p>$INTR$: input, interrupt request from 8259 interrupt controller, maskable by clearing the IF in the flag register</p></li><li><p>$INTA$: output, interrupt ack</p></li><li><p>$NMI$: input, non-maskable interrupt, CPU is interrupted after finishing the current instruction; cannot be masked by software</p></li><li><p>$RESET$: input signal, reset the CPU</p><ul><li><p>IP, DS, SS, ES and the instruction queue are cleared</p></li><li><p>CS &#x3D; FFFFH, IP &#x3D; 0000H</p></li><li><p>the address of the first address of the first instruction that the CPU will execute after reset is FFFF0H (CSx16+IP)</p><p><img src="/./.Photo.asset/image-20241013143304364-8801189-8801189.png" alt="image-20241013143304364"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/./.Photo.asset/image-20241013143339246.png" alt="image-20241013143339246"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/./.Photo.asset/image-20241013143500778.png" alt="image-20241013143500778"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>bus cycle for data transfers: at least 4 clock cycles</p></li></ul></li></ul><h3 id="8086-Programming"><a href="#8086-Programming" class="headerlink" title="8086 Programming"></a>8086 Programming</h3><ul><li>typical program consists of at least 3 segments<ul><li>code segment: contain instructions</li><li>data segment: store info</li><li>stack segment: store info temporarily</li></ul></li></ul><h4 id="logical-and-physical-address"><a href="#logical-and-physical-address" class="headerlink" title="logical and physical address"></a>logical and physical address</h4><ul><li>physical address:<ul><li>the 20-bit actual address put on the address bus</li><li>1 MB (00000H to FFFFFH)</li><li>actual physical location in memory</li></ul></li><li>Logical address:<ul><li>a segment value and an offset address</li></ul></li><li>Convert: PA &#x3D; LA.segment_value</li><li>*16 + LA.offset address (wrap around if overflows)</li><li>1 physical address can be derived from different logical addresses, but one logical address only represents 1 physical address</li><li>2 segments can overlap, as a result,<ul><li>dynamic behavior of segment and offset concept</li><li>desirable in some circumstances</li></ul></li><li>code segment: 8086 fetches instructions from the code segment<ul><li>logical address of an instruction:  <strong>CS:IP</strong></li><li>Physical address generated to retrieve this instruction from memory</li></ul></li><li>Data segment: information to be processed is stored in the data segment<ul><li>Logical address of a piece of data: <strong>DS:offset</strong><ul><li>offset registers for data segement: <strong>BX, SI</strong> and <strong>DI</strong></li></ul></li></ul></li><li>Data representation in memory<ul><li>Memory: a consecutive block of bytes</li><li>if data is larger than a byte<ul><li>little endian: the low byte of the data goes to the low memory location</li><li>big endian: the high byte of the data goes to the low mwmory location</li></ul></li></ul></li><li>Stack segment:<ul><li>temporarily store information</li><li>address: <strong>SS:SP</strong> (sometimes with <strong>BP</strong>)</li><li>Registers except segment and SP insude the CPU can be stored in the stack and brought back into the CPU from the stack using push and pop</li><li><strong>grow downward</strong> from upper addresses to lower addresses in the memory,<ul><li>to protect other programs from destruction</li><li>ensure code section and stack section would not write over each other</li></ul></li></ul></li><li>Extra segment<ul><li>extra data segment essential for string operations<ul><li>logical address: ES:offset</li><li>offset registers: <strong>BX, SI, DI</strong></li></ul></li></ul></li></ul><table><thead><tr><th>segment register</th><th>CS</th><th>DS</th><th>ES</th><th>SS</th></tr></thead><tbody><tr><td>offset register(s)</td><td>IP</td><td>SI, DI, BX</td><td>SI, DI, BX</td><td>SP, BP</td></tr></tbody></table><ul><li>BIOS Function (Basic input-output system)<ul><li>test all devices, report errors</li><li>Load DOS from disk into RAM</li><li>Hand over control of PS to DOS</li></ul></li></ul><h3 id="Addressing-mode-in-8086"><a href="#Addressing-mode-in-8086" class="headerlink" title="Addressing mode in 8086"></a>Addressing mode in 8086</h3><p>take MOV as example</p><h4 id="Register-Addressing-Mode"><a href="#Register-Addressing-Mode" class="headerlink" title="Register Addressing Mode"></a>Register Addressing Mode</h4><ul><li>Data are held within registers</li><li>Eg. MOV BX,DX copy the contents of DX into BX</li><li>data can be moved among all registers except CS(cannot be set) and IP(cannot be accessed by MOV)</li></ul><h4 id="Immediate-Addressing-Mode"><a href="#Immediate-Addressing-Mode" class="headerlink" title="Immediate Addressing Mode"></a>Immediate Addressing Mode</h4><ul><li>Source operand is a constant</li><li>embedded in instructions</li><li>no need to access memory</li></ul><h4 id="Direct-Aaddressing-Mode"><a href="#Direct-Aaddressing-Mode" class="headerlink" title="Direct Aaddressing Mode"></a>Direct Aaddressing Mode</h4><ul><li>Data is stored in memory and the address is given in instructions<ul><li>Segement address in the data segment <strong>(DS)</strong> by default</li><li>Need to access memory to gain the data</li><li>Eg MOV DL,[2400]; MOV[3518],AL</li></ul></li></ul><h4 id="Register-Indirect-Addressing-Mode"><a href="#Register-Indirect-Addressing-Mode" class="headerlink" title="Register Indirect Addressing Mode"></a>Register Indirect Addressing Mode</h4><ul><li>data is stored in memory and address is held by a register<ul><li>Segment address in the data segment <strong>(DS)</strong> by default</li><li>Registers for this purpose are <strong>SI</strong>, <strong>DI</strong> and <strong>BX</strong></li><li>need to access memory to gain the data</li><li>Eg. MOV AL,[BX]</li></ul></li></ul><h4 id="Based-relative-addressing-mode"><a href="#Based-relative-addressing-mode" class="headerlink" title="Based relative addressing mode"></a>Based relative addressing mode</h4><ul><li>data is stored in memory, address can be calculated with base registers <strong>BX</strong> and <strong>BP</strong> as well as a displacement value<ul><li>default segment is <strong>DS</strong> for <strong>BX</strong>, <strong>SS</strong> for <strong>BP</strong></li><li>need to access memory to gain the data</li><li>Eg. MOV CX,[BX]+10</li></ul></li></ul><h4 id="Indexed-Relative-Addressing-Mode"><a href="#Indexed-Relative-Addressing-Mode" class="headerlink" title="Indexed Relative Addressing Mode"></a>Indexed Relative Addressing Mode</h4><p>Data is stored in memory and the address can be calculated with index registers <strong>DI</strong> and <strong>SI</strong> as<br>well as a displacement value</p><ul><li>The default segment is <strong>DS</strong></li><li>Need to access memory to gain the data<br>E.g. MOV DX,[SI]+5</li></ul><h4 id="Based-Indexed-Relative-Addressing-Mode"><a href="#Based-Indexed-Relative-Addressing-Mode" class="headerlink" title="Based-Indexed Relative Addressing Mode"></a>Based-Indexed Relative Addressing Mode</h4><p>Combines based and indexed addressing modes, one base register and one index register are<br>used</p><ul><li>The default segment is (DS) for <strong>BX</strong>, <strong>SS</strong> for <strong>BP</strong></li><li>Need to access memory to gain the data</li><li>E.g MOV CL,[BX][DI]+8</li></ul><p>80x86 allows the program to override the default segment registers</p><h2 id="Lecture-05-Assembly-Language-Programming"><a href="#Lecture-05-Assembly-Language-Programming" class="headerlink" title="Lecture 05: Assembly Language Programming"></a>Lecture 05: Assembly Language Programming</h2><h3 id="Assembly-Language-Programs"><a href="#Assembly-Language-Programs" class="headerlink" title="Assembly Language Programs"></a>Assembly Language Programs</h3><ul><li>a series of statements</li><li>consist of multiple segments</li></ul><h3 id="form-of-an-statement"><a href="#form-of-an-statement" class="headerlink" title="form of an statement"></a>form of an statement</h3><p>[label:] mnemonic [operands] [;comment]</p><ul><li>Label: each label unique; letters, digits, ?.@_$; first character not digit, less than 31 characters</li><li>“:” is needed if itis an instruction otherwise ommited</li><li>“;” leads a comment, the assembler omits anything on this line following a semicolon</li></ul><h3 id="shell-of-a-real-program"><a href="#shell-of-a-real-program" class="headerlink" title="shell of a real program"></a>shell of a real program</h3><p>full segment definition (old fashion)</p><p>Simplified segment definition</p><h3 id="Model-definition"><a href="#Model-definition" class="headerlink" title="Model definition"></a>Model definition</h3><p>SMALL; MEDIUM; COMPACT; LARGE; HUGE; TINY</p><h3 id="Simplified-Segment-Definition"><a href="#Simplified-Segment-Definition" class="headerlink" title="Simplified Segment Definition"></a>Simplified Segment Definition</h3><p>Only 3 segments can be defined: <strong>.Code</strong>; <strong>.DATA</strong>, <strong>.STACK</strong></p><p>Label PROC[FAR|NEAR]</p><p>Label ENDP</p><p>entrance should be FAR, ending should be ENDP</p><h3 id="Full-Segment-Definition"><a href="#Full-Segment-Definition" class="headerlink" title="Full Segment Definition"></a>Full Segment Definition</h3><p>label SEGMENT</p><p>label ENDS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DaSeg1 segment</span><br><span class="line">str1 db &#x27;Hello World! $&#x27;</span><br><span class="line">DaSeg1 ends</span><br></pre></td></tr></table></figure><h3 id="Control-Transfer-Instructions"><a href="#Control-Transfer-Instructions" class="headerlink" title="Control Transfer Instructions"></a>Control Transfer Instructions</h3><ul><li>Range<ul><li>short, intrasegment,<ul><li>IP changed: 1 byte -128-127</li></ul></li><li>Near, intrasegment,<ul><li>IP changed: 2 bytes -32768-327667</li></ul></li><li>Far, intersegment<ul><li>CS and IP changed</li><li>control is transferred outside the current code segment</li></ul></li></ul></li><li>Jumps</li><li>CALL statement</li></ul><h3 id="Conditional-Jumps"><a href="#Conditional-Jumps" class="headerlink" title="Conditional Jumps"></a>Conditional Jumps</h3><p>jump according to the value of the flag register</p><p>short jumps (some commands)</p><h3 id="Unconditional-jumps"><a href="#Unconditional-jumps" class="headerlink" title="Unconditional jumps"></a>Unconditional jumps</h3><p>JMP [SHORT|NEAR|FAR PTR] label</p><p>near by default</p><h2 id="subroutine-call-statement"><a href="#subroutine-call-statement" class="headerlink" title="subroutine &amp; call statement"></a>subroutine &amp; call statement</h2><ul><li>range:<ul><li>NEAR: procedure defined within the same code segment with the caller</li><li>FAR: procedure defined outside the current code segment of the caller</li></ul></li><li>PROC &amp; ENDP are used to define a subroutine</li><li>CALL is used to call a subroutine<ul><li>RET is used to call a subroutine</li></ul></li></ul><h3 id="Data-Types-Definition"><a href="#Data-Types-Definition" class="headerlink" title="Data Types &amp; Definition"></a>Data Types &amp; Definition</h3><ul><li>CPU can process 8-bit and 16-bit ops</li><li>Directives:<ul><li><strong>ORG</strong>: indicaate the beginning of the offset address</li></ul></li><li>Define variables:<ul><li><strong>DB</strong>: allocate byte-size chunks</li><li><strong>DW</strong>, <strong>DD</strong>, <strong>DQ</strong></li></ul></li><li><strong>EQU</strong>: define a constant eg. NUM <strong>EQU</strong> 234</li><li><strong>DUP</strong>: duplicate a given number of characters eg. x DB 6 DUP(23H)|y DW 3 DUP (0FF10H)</li><li>to get the segment value of a variable: <strong>SEG</strong></li><li>to get the offset address of a variable: <strong>OFFSET</strong> directive or <strong>LEA</strong> instruction</li></ul><h3 id="Arithmetic-instructions"><a href="#Arithmetic-instructions" class="headerlink" title="Arithmetic instructions"></a>Arithmetic instructions</h3><ul><li><p><strong>ADD</strong> dest src; dest &#x3D; dest + src</p><ul><li>Dest is a register</li><li>Src can be register or immediate</li><li>no mem-to-mem operations in 80x86</li><li>Change ZF, SF, AF, CF, OF, PF</li></ul></li><li><p><strong>ADC</strong> dest, src; dest &#x3D; dest + src + <strong>CF</strong></p><ul><li>For multi-bit numbers</li><li>If there’s a carry from last addtion, add 1 to the result</li></ul></li><li><p><strong>INC</strong> dest; dest &#x3D; dest + 1</p><ul><li>dest can be register or memory</li><li>dest cannot be immediate</li><li>change ZF, SF, AF, OF, PF</li><li><em><strong>does not change CF</strong></em></li></ul></li><li><p><strong>DEC</strong> dest; dest &#x3D; dest - 1</p><ul><li>dest can be a register or memory</li><li>dest cannot be an immediate</li><li>change ZF, SF, AF, OF, PF</li><li><strong>does not change CF</strong></li></ul></li><li><p><strong>LOOP</strong> xxxx</p><p>等价于</p><p><strong>DEC CX</strong></p><p><strong>JNZ xxxx</strong></p></li><li><p><strong>SUB</strong> dest, src; dest &#x3D; dest - src</p><ul><li>Dest can be a register or in memory</li><li>Src can be a register, in memory or an immediate</li><li>No mem-to-mem operations in 80X86</li><li>Change ZF, SF, AF, CF, OF, PF</li></ul></li><li><p><strong>SBB</strong> dest, src ;dest &#x3D; dest - src – CF</p><ul><li>For multi-byte numbers</li><li>If there is a borrow from last subtraction, subtracts 1<br>from the result</li></ul></li><li><p><strong>MUL</strong> operand</p><ul><li><p>byte X byte:</p><ul><li>One implicit operand is AL, the other is the operand,</li><li>result is stored in AX</li></ul></li><li><p>word X word:</p><ul><li>One implicit operand is AX, the other is the operand,</li><li>result is stored in DX &amp; AX</li></ul></li><li><p>word X byte:</p><ul><li>AL hold the byte, AH &#x3D; 0, the word is the operand,</li><li>result is stored in DX &amp; AX;</li></ul></li></ul></li><li><p><strong>DIV</strong> denominator</p><ul><li>Denominator cannot be zero</li><li>Quotient cannot be too large for the assigned register<ul><li>byte &#x2F; byte:<ul><li>Numerator in AL,</li><li>clear AH;</li><li>quotient is in AL,</li><li>remainder in AH</li></ul></li><li>word &#x2F; word:<ul><li>Numerator in AX,</li><li>clear DX ;</li><li>quotient is in AX,</li><li>remainder in DX</li></ul></li><li>word &#x2F; byte:<ul><li>Numerator in AX;</li><li>quotient is in AL (max 0FFH),</li><li>remainder in AH</li></ul></li><li>double-word &#x2F; word:<ul><li>Numerator in DX,AX;</li><li>quotient is in AX (max 0FFFFH),</li><li>remainder in DX</li><li>Denominator can be in a register or in memory</li></ul></li></ul></li></ul></li></ul><h3 id="Logic-Instructions"><a href="#Logic-Instructions" class="headerlink" title="Logic Instructions"></a>Logic Instructions</h3><ul><li><p><strong>AND</strong> dest, src; <strong>OR</strong> dest, src; <strong>XOR</strong> dest, src</p><ul><li>Bit-wise logic</li><li>dest can be a register or in memory; src can be a register, in memory, or immediate</li><li>Update SF, ZF, PF; AF is undetermined</li><li>Clear CF and OF (set CF and OF to zero)</li></ul></li><li><p><strong>NOT</strong> operand</p><ul><li>Bit-wise logic</li><li>Operand can be a register or in memory</li><li><strong>Does not change the flag register</strong></li></ul></li><li><p><strong>SHR</strong> dest, times</p><ul><li>dest can be a register or in memory</li><li>0-&gt;MSB-&gt;…-&gt;LSB-&gt;CF</li><li>Times &#x3D; 1:<ul><li>SHR xx, 1</li></ul></li><li>Times &gt;1:<ul><li>MOV CL, times</li><li>SHR xx, CL</li></ul></li></ul></li><li><p><strong>SHL</strong> dest, times</p><ul><li>All the same except in reverse direction</li></ul></li><li><p><strong>ROR</strong> dest, times</p><ul><li>dest can be a register, in memory</li><li>Times &#x3D; 1:</li><li><strong>ROR xx, 1</strong></li><li>Times &gt;1:</li><li><strong>MOV CL,</strong> <strong>times</strong></li><li><strong>ROR xx, CL</strong></li></ul><p><strong>ROL</strong> similar</p><p>eg. AX &#x3D; 1011 0011 0101 1100</p><p>ROC AX, 2</p><p>AX &#x3D; 0010 1100 1101 0111</p></li><li><p><strong>RCR</strong> dest, times</p><ul><li>dest can be a register, in memory</li><li>Times &#x3D; 1:</li><li><strong>RCR xx, 1</strong></li><li>Times &gt;1:</li><li><strong>MOV CL,</strong> <strong>times</strong></li><li><strong>RCR xx, CL</strong></li></ul><p><strong>RCL</strong> similar</p><p>eg. AX &#x3D; 1011 0011 0101 1100, CF &#x3D; 0</p><p>RCR AX, 2 &#x3D; 0010 1100 1101 0111 CF &#x3D; 0</p></li><li><p><strong>CMP</strong>  dest, src</p><ul><li>unsigned numbers<table><thead><tr><th>compare operands</th><th align="center">CF</th><th align="center">ZF</th></tr></thead><tbody><tr><td>d &gt; s</td><td align="center">0</td><td align="center">0</td></tr><tr><td>d &#x3D; s</td><td align="center">0</td><td align="center">1</td></tr><tr><td>d &lt; s</td><td align="center">1</td><td align="center">0</td></tr></tbody></table></li><li>signed numbers<table><thead><tr><th align="center">compared operands</th><th align="center">situ</th></tr></thead><tbody><tr><td align="center">d &gt; s</td><td align="center">OF &#x3D;&#x3D; SF &amp;&amp; ZF &#x3D;&#x3D; 0</td></tr><tr><td align="center">d &#x3D; s</td><td align="center">ZF &#x3D;&#x3D; 1</td></tr><tr><td align="center">d &lt; s</td><td align="center">OF !&#x3D; SF</td></tr></tbody></table></li></ul></li></ul><h2 id="Lecture-06-Memory-Address-Decoding"><a href="#Lecture-06-Memory-Address-Decoding" class="headerlink" title="Lecture 06: Memory Address Decoding"></a>Lecture 06: Memory Address Decoding</h2><h3 id="Address-decoding"><a href="#Address-decoding" class="headerlink" title="Address decoding"></a>Address decoding</h3><ul><li>absolute address decoding<ul><li>all address lines are decoded</li></ul></li><li>linear select decoding<ul><li>Only selected lines are decoded</li><li>cheap</li><li>support alias: same memoryunit with multiple addresses</li></ul></li></ul><p>Use a 74LS138 chip (3-&gt;8 decoder)</p><p><img src="/./.Photo.asset/image-20241029170656535.png" alt="image-20241029170656535"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="Data-integrity"><a href="#Data-integrity" class="headerlink" title="Data integrity"></a>Data integrity</h3><ol><li>Checksum byte<ol><li>Add all bytes together and drop all carries</li><li>take 2’s complement</li><li>store it with the data</li><li>check integrity by adding data and checksum together (0 means integrate)</li></ol></li><li>parity bit<ol><li>even parity: total number of 1 is even</li><li>odd parity: total number of 1 is odd</li><li>in 8086, use odd parity</li></ol></li></ol><h3 id="Memory-Organization-in-8086"><a href="#Memory-Organization-in-8086" class="headerlink" title="Memory Organization in 8086"></a>Memory Organization in 8086</h3><table><thead><tr><th>$\overline{BHE}$</th><th>$A_0$</th><th></th><th></th></tr></thead><tbody><tr><td>0</td><td>0</td><td>Even word</td><td>D<del>0</del>-D<del>15</del></td></tr><tr><td>0</td><td>1</td><td>Odd byte</td><td>D<del>8</del>-D<del>15</del></td></tr><tr><td>1</td><td>0</td><td>Even byte</td><td>D<del>0</del>-D<del>7</del></td></tr><tr><td>1</td><td>1</td><td>None</td><td></td></tr></tbody></table><h3 id="I-O-in-x86-family"><a href="#I-O-in-x86-family" class="headerlink" title="I&#x2F;O in x86 family"></a>I&#x2F;O in x86 family</h3><ul><li>X86 has an I&#x2F;O space in addition to memory space</li><li>use special I&#x2F;O instructions accessing I&#x2F;O devices at ports</li><li>Memory contain machine codes&#x2F;data, I&#x2F;O ports only contain data</li><li>also referred to as peripheral I&#x2F;O or isolated I&#x2F;O</li></ul><p>I&#x2F;O instructions</p><ul><li>Direct I&#x2F;O instructions: port# range from 00h to 0ffh, 256 ports<ul><li>IN    AL,port#</li><li>OUT    AL,port#</li></ul></li><li>Indirect I&#x2F;O instructions: port# range from 0000h to offffh, 65536 ports<ul><li>MOV    DX,port#</li><li>IN    AL,DX</li><li>MOV    DX,port#</li><li>OUT    DX,AL</li></ul></li></ul><h2 id="Lecture-07-8255-PPI-Chip"><a href="#Lecture-07-8255-PPI-Chip" class="headerlink" title="Lecture 07: 8255 PPI Chip"></a>Lecture 07: 8255 PPI Chip</h2><h3 id="Internal-Structure-and-Pins"><a href="#Internal-Structure-and-Pins" class="headerlink" title="Internal Structure and Pins"></a>Internal Structure and Pins</h3><ul><li><p>3 data ports: A, B and C</p><ul><li>port A: PA<del>0</del>-PA<del>7</del>, can be programmed all as input&#x2F;output</li><li>port B: PB<del>0</del>-PB<del>7</del>, similar to port A</li><li>port C: PC<del>0</del>-PC<del>7</del>, can be splitted into 2 separate parts PCL&amp;PCU, can be programmed individually</li></ul></li><li><p>Control register <strong>CR</strong>: used to setup the chip</p></li><li><p>Group A: PA&amp;PCU</p><p>Group B:PB&amp;PCL</p></li><li><p>logic：</p></li></ul><table><thead><tr><th align="left">~CS</th><th align="left">A₁</th><th align="left">A₀</th><th align="left">~RD</th><th align="left">~WR</th><th align="left">Function</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">PA-&gt;Data bus</td></tr><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">PB-&gt;Data bus</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">PC-&gt;Data bus</td></tr><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">Data bus-&gt;PA</td></tr><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">Data bus-&gt;PB</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">Data bus-&gt;PC</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">Data bus-&gt;CR</td></tr><tr><td align="left">1</td><td align="left">×</td><td align="left">×</td><td align="left">1</td><td align="left">1</td><td align="left">D₀~D₇ in float</td></tr></tbody></table><ul><li><p>Control Register</p><ul><li><p>8-bit internal register</p></li><li><p>selected when A<del>1</del>&#x3D;A<del>0</del>&#x3D;1</p></li><li><p>the first bit select mode</p><p>if 1: Input&#x2F;output modes, if 0 BSR mode</p></li><li><p><img src="/./.Photo.asset/image-20241030141737882.png" alt="image-20241030141737882"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li><li><p><img src="/./.Photo.asset/image-20241030141838221.png"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p></li></ul></li></ul><h3 id="Mode-0"><a href="#Mode-0" class="headerlink" title="Mode 0"></a>Mode 0</h3><ul><li>simple i&#x2F;o</li><li>no handshake needed</li><li>any port can be programed independently</li><li>CPU directly r&#x2F;w a port</li><li>input not latched, output latched</li></ul><h3 id="Mode-1"><a href="#Mode-1" class="headerlink" title="Mode 1"></a>Mode 1</h3><ul><li>PA &amp; PB used as i&#x2F;o ports</li><li>PC<del>3</del>~PC<del>5</del> used as handshake llines for PA</li><li>PC<del>0</del>~PC<del>2</del>used as handshake lines for PB</li><li>both input and output data are latched</li><li>PC<del>6</del> &amp; PC<del>7</del> used as separate I&#x2F;O lines for any purpose</li><li>handshake signals:<ul><li>~STB: strobe input signal</li><li>IBF: Input buffer full output signal</li><li>~OBF: output buffer full output signal</li><li>~ACK: acknowledge input signal</li><li>INTR: interrupt request signal</li></ul></li><li>Control register</li></ul><p><img src="/./.Photo.asset/image-20241031150704256.png" alt="image-20241031150704256"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/./.Photo.asset/image-20241031151026044.png" alt="image-20241031151026044"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="Mode-2-Bidirectional-Bus"><a href="#Mode-2-Bidirectional-Bus" class="headerlink" title="Mode 2 (Bidirectional Bus)"></a>Mode 2 (Bidirectional Bus)</h3><ul><li>For bidirectional handshake input&#x2F;output</li><li>Only can be used as both input and output port</li><li>PCU used as handshake lines for PA</li><li>both input and output data are latched</li><li>PC<del>0</del>~PC<del>2</del> can be used as separate I&#x2F;O lines &#x2F; handshake lines for PB</li></ul><h2 id="Lecture-08-8253-4-Timer"><a href="#Lecture-08-8253-4-Timer" class="headerlink" title="Lecture 08: 8253&#x2F;4 Timer"></a>Lecture 08: 8253&#x2F;4 Timer</h2><h3 id="Internal-Structure-pins"><a href="#Internal-Structure-pins" class="headerlink" title="Internal Structure &amp; pins"></a>Internal Structure &amp; pins</h3><ul><li>Data bus buffer</li><li>~CS: tied to a decoded address</li><li>~RD,~WR<ul><li>in isolated I&#x2F;O: ~IOR, ~IOW</li><li>Memory-mapped I&#x2F;O: ~MEMR, MEMW</li></ul></li><li>A<del>1</del>, A<del>0</del></li></ul><table><thead><tr><th align="center">A1</th><th align="center">A0</th><th>Selection</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td>Counter 0</td></tr><tr><td align="center">0</td><td align="center">1</td><td>Counter 1</td></tr><tr><td align="center">1</td><td align="center">0</td><td>Counter 2</td></tr><tr><td align="center">1</td><td align="center">1</td><td>Control word Register</td></tr></tbody></table><table><thead><tr><th align="center">&#x2F;CS</th><th align="center">&#x2F;RD</th><th align="center">&#x2F;WR</th><th align="center">A1A0</th><th align="left">FUNCTION</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">00</td><td align="left">Write counter0 (to CR0)</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">01</td><td align="left">Write counter1 (to CR1)</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">10</td><td align="left">Write counter2 (to CR2)</td></tr><tr><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">11</td><td align="left">Write control port</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">00</td><td align="left">Read counter0 (from OL0)</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">01</td><td align="left">Read counter1 (from OL1)</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">10</td><td align="left">Read counter2 (from OL2)</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">11</td><td align="left">Read control port (for 8254)</td></tr><tr><td align="center">1</td><td align="center">X</td><td align="center">X</td><td align="center">XX</td><td align="left">Not available</td></tr></tbody></table><h3 id="control-word-register"><a href="#control-word-register" class="headerlink" title="control word register"></a>control word register</h3><ul><li>selected when A<del>1</del>&#x3D;1, A<del>0</del>&#x3D;1</li><li>Used to specify counter, mode r&#x2F;w</li></ul><table><thead><tr><th align="center">D7</th><th align="center">D6</th><th align="center">D5</th><th align="center">D4</th><th align="center">D3</th><th align="center">D2</th><th align="left">D1</th><th align="left">D0</th></tr></thead><tbody><tr><td align="center">SC1</td><td align="center">SC0</td><td align="center">RW1</td><td align="center">RW0</td><td align="center">M2</td><td align="center">M1</td><td align="left">M0</td><td align="left">BCD</td></tr></tbody></table><table><thead><tr><th align="center">SC₁</th><th align="center">SC₀</th><th>SC - Select counter</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td>Select counter 0</td></tr><tr><td align="center">0</td><td align="center">1</td><td>Select counter 1</td></tr><tr><td align="center">1</td><td align="center">0</td><td>Select counter 2</td></tr><tr><td align="center">1</td><td align="center">1</td><td>Illegal for 8253<code>&lt;br&gt;</code>Read-Back command for 8254 (See Read operations)</td></tr></tbody></table><table><thead><tr><th align="center">RW₁</th><th align="center">RW₀</th><th>RW - Read &#x2F; Write</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td>Counter latch command (See Read operations)</td></tr><tr><td align="center">0</td><td align="center">1</td><td>Read &#x2F; Write least significant byte only</td></tr><tr><td align="center">1</td><td align="center">0</td><td>Read &#x2F; Write most significant byte only</td></tr><tr><td align="center">1</td><td align="center">1</td><td>Read &#x2F; write least significant byte first, then most significant byte</td></tr></tbody></table><table><thead><tr><th align="center">M₂</th><th align="center">M₁</th><th align="center">M₀</th><th align="center">Mode</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">Mode 0</td></tr><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">Mode 1</td></tr><tr><td align="center">X</td><td align="center">1</td><td align="center">0</td><td align="center">Mode 2</td></tr><tr><td align="center">X</td><td align="center">1</td><td align="center">1</td><td align="center">Mode 3</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="center">Mode 4</td></tr><tr><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">Mode 5</td></tr></tbody></table><table><thead><tr><th align="center">BCD:</th><th align="left"></th></tr></thead><tbody><tr><td align="center">0</td><td align="left">Binary counter 16-bits</td></tr><tr><td align="center">1</td><td align="left">Binary coded decimal(BCD) Counter(4 Decades)</td></tr></tbody></table><h3 id="Counters"><a href="#Counters" class="headerlink" title="Counters:"></a>Counters:</h3><ul><li>Each consists a single, 16-bit, presettable, down counter</li><li>can operate in binary&#x2F;BCD</li><li>Input, gate and output are configured by selection of modes</li><li>read from counter not disturb processing count</li></ul><h3 id="W-R-Operations"><a href="#W-R-Operations" class="headerlink" title="W&#x2F;R Operations"></a>W&#x2F;R Operations</h3><ul><li>write:<ul><li>Write a control word into control register</li><li>Load the low-order byte of a count in the counter register</li><li>Load the high-order byte of a count in the counter register</li></ul></li><li>read<ul><li><strong>Simple Read</strong>: two I&#x2F;O read operations, first one for low-order<br>byte and last one for the high order byte</li><li><strong>Counter Latch Command</strong>: one I&#x2F;O write operation used to<br>write a control word to the control register to latch a count in<br>the output latch, then two I&#x2F;O read operations are used to read<br>the latched count as in Simple Read.</li><li><strong>Read-Back Command</strong>: for 8254 only</li></ul></li></ul><h3 id="Modes"><a href="#Modes" class="headerlink" title="Modes"></a>Modes</h3><p>Software trigger<br>No repeat<br>Mode 0: Interrupt on terminal count<br>Mode 4: Software triggered strobe<br>Repeat<br>Mode 2: Rate generator<br>Mode 3: Square wave rate generator<br>Hardware trigger<br>No repeat (but retriggerable)<br>Mode 1: Hardware retriggerable one-shot<br>Mode 5: Hardware triggered strobe</p><h4 id="Mode-0：Interrupt-on-Terminal-Count"><a href="#Mode-0：Interrupt-on-Terminal-Count" class="headerlink" title="Mode 0：Interrupt on Terminal Count"></a>Mode 0：Interrupt on Terminal Count</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[CPU writes count into CR]--&gt;B[Count is conveyed to the CE]</span><br><span class="line">B--&gt;C[Counting down]</span><br><span class="line">C--&gt;D[Output signal when reaches 0]</span><br></pre></td></tr></table></figure><ul><li><p>Gate disable:</p><ul><li>Gate &#x3D; 1 enables counting</li><li>Gate &#x3D; 0 disables counting</li></ul></li><li><p>New count</p><ul><li>If a new count is written to the counter, it will be loaded on the next CLK pulse and counting will continue from the new count</li><li>In case of two byte count:<ul><li>Writing the first byte disables the current counting</li><li>Writing the second byte loads the new count on the next CLK pulse and<br>counting will continue from the new count</li></ul></li></ul></li></ul><p><img src="/./.Photo.asset/image-20241108141834173.png" alt="image-20241108141834173"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h4 id="Mode-1：Hardware-Retriggerable-One-shot"><a href="#Mode-1：Hardware-Retriggerable-One-shot" class="headerlink" title="Mode 1：Hardware Retriggerable One-shot"></a>Mode 1：Hardware Retriggerable One-shot</h4><ul><li>Normal Operation:<ul><li>The output will be initially high after the mode set operation;</li><li>The output will go low on the CLK pulse following the rising(0-to-1) edge of the gate input;</li><li>The output will go high on the terminal count and remain high until the next rising edge of the gate input.</li><li>Output: one-shot of N clock pulses on every trigger</li><li>does not automatically repeat</li></ul></li></ul><p><img src="/./.Photo.asset/image-20241108141856567.png" alt="image-20241108141856567"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h4 id="Mode-2-Rate-Generator"><a href="#Mode-2-Rate-Generator" class="headerlink" title="Mode 2: Rate Generator"></a>Mode 2: Rate Generator</h4><ul><li>Normal Operation:<ul><li>The output will be initially high;</li><li>The output will go low for one clock pulse before the terminal count;</li><li>The output then goes high, the counter reloads the initial count and the process is repeated</li><li>Output: periodical signal with a period of N-1 clock<br>pulses high and 1 clock pulse low</li></ul></li></ul><p><img src="/./.Photo.asset/image-20241108141912391.png"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h4 id="Mode-3-Square-Wave-Rate-Generator"><a href="#Mode-3-Square-Wave-Rate-Generator" class="headerlink" title="Mode 3: Square Wave Rate Generator"></a>Mode 3: Square Wave Rate Generator</h4><ul><li>Normal Operation:<ul><li>The output will be initially high;</li><li>For even count, counter is decremented by 2 on the falling edge of each clock pulse; when reaches terminal count, the state of the output is changed and the counter is reloaded with the full count and the whole process is repeated</li><li>For odd count, the first clock pulse decrements the count by 1. Subsequent clockpulses decrement the clock by 2. After timeout, the output goes low and the full count is reloaded. The first clock pulse (following the reload) decrements the count by 3 and subsequent clock pulse decrement the count by two. Then the whole process is repeated</li></ul></li></ul><p><img src="/./.Photo.asset/image-20241108150720630.png" alt="image-20241108150720630"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/./.Photo.asset/image-20241108150731058.png" alt="image-20241108150731058"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>if gate goes low while output is low, output is set high immediately.</p><p><img src="/./.Photo.asset/image-20241108151338821.png" alt="image-20241108151338821"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><ul><li>New count:<ul><li>The current counting sequence does not affect when the new count is written.</li><li>If a trigger is received after writing a new count but before the end of the current half-cycle of the square wave, the counter will be loaded with the new count on the next CLK pulse and counting will continue from the new count.</li><li>Otherwise, the new count will be loaded at end of the current half-cycle.</li></ul></li></ul><h4 id="Mode-4-Software-Triggered-Strobe"><a href="#Mode-4-Software-Triggered-Strobe" class="headerlink" title="Mode 4: Software Triggered Strobe"></a>Mode 4: Software Triggered Strobe</h4><ul><li>Normal Operation:<ul><li>The output will be initially high;</li><li>The output will go low for one CLK pulse after the terminal count</li></ul></li><li>Gate disable:<ul><li>If Gate is one, the counting is enabled; otherwise, it is disabled</li></ul></li><li>New count:<ul><li>If a new count is written during counting, it will be loaded on the next CLK pulse and counting will continue from the new count. If the count is two byte then:<ul><li>Writing the first byte has no effect on counting</li><li>Writing the second byte allows the new count to be loaded on the next CLK pulse</li></ul></li></ul></li></ul><p><img src="/./.Photo.asset/image-20241108152016534.png" alt="image-20241108152016534"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h4 id="Mode-5-Hardware-Triggered-Strobe"><a href="#Mode-5-Hardware-Triggered-Strobe" class="headerlink" title="Mode 5: Hardware Triggered Strobe"></a>Mode 5: Hardware Triggered Strobe</h4><ul><li><p>Normal Operation:</p><ul><li>The output will be initially high;</li><li>The counting is triggered by the rising edge of the Gate</li><li>The output will go low for one CLK pulse after the terminal count</li></ul></li><li><p>Retrotriggering:</p><ul><li>If the triggering occurs during the counting, the initial count is loaded on the next CLK pulse and the counting will be continued until the terminal count is reached</li></ul></li><li><p>New count:</p><ul><li>the current counting sequence will not be affected. If the trigger occurs after the new count but before the terminal count, the counter will be loaded with the new count on the next CLK pulse and counting will continue from there</li></ul></li></ul><p><img src="/./.Photo.asset/image-20241108152305720.png" alt="image-20241108152305720"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="Lecture-9-Interrupts-8259"><a href="#Lecture-9-Interrupts-8259" class="headerlink" title="Lecture 9: Interrupts &amp;8259"></a>Lecture 9: Interrupts &amp;8259</h2><ul><li>256 interrupt types in total: INT 00 ~ INT 0FFh</li><li>Type* 4 &#x3D; PA of interrupt vector (first 1KB store interrupt vectors, called Interrupt Vector Table (IVT))</li><li>Interrupt vector points the entrance address of the corresponding interrupt service routine (ISR)</li></ul><p><img src="/./.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90.photoasset/image-20241108153421166.png" alt="image-20241108153421166"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h4 id="Categories："><a href="#Categories：" class="headerlink" title="Categories："></a>Categories：</h4><ul><li>Hardware (external) interrupts<ul><li>Maskable (from INTR)</li><li>Non-maskable (from NMI)</li></ul></li><li>Software (internal) interrupts<ul><li>Using the INT instruction</li><li>Predefined conditional (exception) interrupts</li></ul></li></ul><h3 id="Hardware-Interrupts"><a href="#Hardware-Interrupts" class="headerlink" title="Hardware Interrupts"></a>Hardware Interrupts</h3><ul><li>Maskable interrupt<ul><li>Trigger: INTR pin, input-signal, high active</li><li>TYPE: No predefined type</li><li>IF &#x3D; 1, enable; IF &#x3D; 0, disable<ul><li>STI sets IF, CLI clears IF</li></ul></li><li>Reasons:<ul><li>Interrupt requests of external I&#x2F;O devices</li></ul></li><li>Procedure<ul><li>CPU responds to INTR interrupt requests<ul><li>External I&#x2F;O devices send interrupt requests to CPU</li><li>CPU will check INTR pin on the last cycle of an instruction: if the INTR is high and IF &#x3D; 1, CPU responds to the interrupt request</li><li>CPU sends two negative pluses on the ~INTA pin to<br>the I&#x2F;O device<br>After receiving the second ~INTA, I&#x2F;O device sends<br>the interrupt type N on the data bus</li></ul></li><li>CPU executes the ISR of INT N<ul><li>CPU reads the N from data bus</li><li>Push the FR in stack</li><li>Clear IF and TF</li><li>Push the CS and IP of the next instruction in stack</li><li>Load the ISR entrance address and moves to the ISR</li><li>At the end of the ISR, IRET will pop IP, CS and FR in turn, CPU returns to previous program and proceeds</li></ul></li></ul></li></ul></li><li>Software Interrupts<ul><li>INT xx instruction<ul><li>An ISR is called upon instruction such as “INT xx”<ul><li>E.g., int 21h ; Dos service</li></ul></li><li>CPU always responds and goes execute the corresponding ISR<ul><li>Not affected by the IF</li></ul></li><li>You can “CALL” any ISR by using the INT instruction</li></ul></li><li>Predefined conditional interrupts<ul><li>“INT 00” (divide error): dividing a number by zero, or quotient is too large</li><li>“INT 01” (single step):If TF &#x3D; 1, CPU will generates an INT 1 interrupt after executing each instruction for debugging</li><li>“INT 03” (breakpoint): When CPU hits the breakpoint set in the program, CPU generates INT 3 interrupt for debugging</li><li>“INT 04” (signed number overflow): INTO instruction; Check the OF after an arithmetic instruction</li><li>“INT 02”: NMI</li></ul></li><li>Procedure：<ul><li>For NMI<ul><li>CPU checks NMI, generates INT 02 interrupt automatically regardless of IF and executes to the ISR</li></ul></li><li>For software (internal) interrupts<ul><li>CPU generates INT N interrupt automatically and executes to the corresponding ISR</li></ul></li></ul></li></ul></li><li>256 Interrupts<ul><li>0-4 dedicated</li><li>5-31 reserved for system use</li><li>32-255 reserved for users</li></ul></li><li>Interrupt Priority<ul><li>INT &gt; NMI &gt; INTR</li></ul></li><li>Priority of INTR Interrupts<ul><li>Software polling</li><li>Hardware checking</li><li>Vectored interrupt controller: eg. 8259(Programmed Interrupt Controller aka PIC)<ul><li>Manage interrupt requests</li><li>flexible peripheral controller chip<ul><li>deal with 64 interrupt inputs</li><li>can be masked</li><li>various priority schemes can be programmed</li></ul></li><li>orginally available as a separate IC, later in motherboards chipset, and in modern processors built in</li></ul></li></ul></li><li>Higher priority interrupts can interrupt lower interrupts</li></ul><h2 id="Lecture-10-BIOS-and-DOS-Programming"><a href="#Lecture-10-BIOS-and-DOS-Programming" class="headerlink" title="Lecture 10: BIOS and DOS Programming"></a>Lecture 10: BIOS and DOS Programming</h2><h3 id="BIOS-INT-10H-Programming"><a href="#BIOS-INT-10H-Programming" class="headerlink" title="BIOS INT 10H Programming"></a>BIOS INT 10H Programming</h3><ul><li><p>INT 10H subroutines are burned into the ROM BIOS (in 80x86-based IBM PCs)</p></li><li><p>Used to communicate with the computer’s screen video</p><ul><li>E.g., changing the color of characters or background color, cleaning the screen, changing the location of the cursor, drawing lines on the screen</li><li>By setting AH with different values, you can “call”<br>those functions</li></ul></li><li><p>Scrolling the windows</p><table><thead><tr><th align="center">Registers</th><th align="center">UP&#x2F;DOWN</th></tr></thead><tbody><tr><td align="center">AH</td><td align="center">06h&#x2F;07h</td></tr><tr><td align="center">AL</td><td align="center">number of lines to scroll</td></tr><tr><td align="center">BH</td><td align="center">display attribute</td></tr><tr><td align="center">CH</td><td align="center">y coordinate of top left</td></tr><tr><td align="center">CL</td><td align="center">x coodinate of top left</td></tr><tr><td align="center">DH</td><td align="center">y coodinate of lower right</td></tr><tr><td align="center">DL</td><td align="center">y coodinate of lower right</td></tr></tbody></table><p>if AL &#x3D;&#x3D; 0, the entire windows is blank</p></li><li><p>Set cursor position: AH &#x3D; 02h</p><table><thead><tr><th align="center">Registers</th><th align="center">Functions</th></tr></thead><tbody><tr><td align="center">BH</td><td align="center">page number</td></tr><tr><td align="center">DH</td><td align="center">row</td></tr><tr><td align="center">DL</td><td align="center">column</td></tr></tbody></table></li><li><p>Set Video Mode: AH &#x3D; 00h</p><ul><li>In text mode, the screen is viewed as a matrix of rows and columns of characters<ul><li>E.g., AL &#x3D; 03h: VGA 80x25 chars, 16 colors</li></ul></li><li>In graphics mode, the screen is viewed as a matrix of horizontal and vertical pixels<ul><li>Each pixel can have different color</li><li>The size of video memory decides the number of pixels and colors</li><li>E.g., AL &#x3D; 13H: VGA 320x200 pixels, 256 colors</li></ul></li></ul></li></ul><h3 id="DOS-Interrupt-21H"><a href="#DOS-Interrupt-21H" class="headerlink" title="DOS Interrupt 21H"></a>DOS Interrupt 21H</h3><ul><li><p>Provided by MS-DOS</p><ul><li>Based on BIOS-ROM</li><li>After the DOS is loaded into the memory, you can invoke INT 21H to perform some extremely useful functions</li><li>E.g., input from keyboard, display results on screen</li><li>By setting AH with different values, you can invoke<br>those functions</li></ul></li><li><p>AH &#x3D; 09H: Output String on Screen</p><ul><li>Can be used to send a set of ASCII data to the<br>monitor</li><li>DX is set to the offset address of the ASCII string to be displayed (DS is assumed to be the data segment)</li><li>All characters will be displayed until it encounters the dollar sign “$“</li></ul></li><li><p>AH &#x3D;  4CH: Exit to DOS</p><ul><li><p>AH &#x3D; 4CH</p></li><li><p>AL &#x3D; 00H</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV AX,4C00H</span><br><span class="line">INT 21H</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="Lecture-11-Serial-Data-Communication-8251"><a href="#Lecture-11-Serial-Data-Communication-8251" class="headerlink" title="Lecture 11: Serial Data Communication &amp; 8251"></a>Lecture 11: Serial Data Communication &amp; 8251</h2><ul><li>Data transmission: transfer of data from point to point</li><li>Communication channel: the medium used to<br>convey information (copper wires, optical fibbers, wireless communication channels)</li></ul><h3 id="Two-ways-parallel-Serial"><a href="#Two-ways-parallel-Serial" class="headerlink" title="Two ways: parallel &amp; Serial"></a>Two ways: parallel &amp; Serial</h3><ul><li><p>Parallel data transfers:</p><ul><li>Each bit uses a separate line (wire)</li><li>Often 8 or more lines are used</li><li>Control signals in addition</li><li>Fast &amp; expensive &amp; for short-distance communication</li></ul></li><li><p>Serial data transfers:</p><ul><li>One single data line</li><li>Bits are sent over the line one by one</li><li>No dedicated lines for control signals</li><li>Cheap &amp; slow &amp; for long-distance communication</li></ul></li></ul><h3 id="Serial-Communication"><a href="#Serial-Communication" class="headerlink" title="Serial Communication"></a>Serial Communication</h3><h4 id="Data-Transfer-Rate"><a href="#Data-Transfer-Rate" class="headerlink" title="Data Transfer Rate"></a>Data Transfer Rate</h4><ul><li>Symbol rate, a misnomer is baud rate<ul><li>The number of distinct symbol or pulse changes (signaling events) made to the transmission medium per second in a digitally modulated signal or a line code, quantified using the baud unit</li><li>Each symbol can represent one (binary encoded signal) or several bits of data</li></ul></li><li>Bit rate<ul><li>the number of bits that are conveyed or processed per unit of time, quantified using the bits per second (bit&#x2F;s or bps) unit</li></ul></li></ul><h4 id="Synchronization-Methods"><a href="#Synchronization-Methods" class="headerlink" title="Synchronization Methods"></a>Synchronization Methods</h4><ul><li><p>Asynchronous serial communication:</p><ul><li><p>Transfer one byte at a time</p></li><li><p>The starting of each byte is asynchronous, and therefore each byte needs synchronization between the sender and the receiver using start bit.</p></li><li><p>eg. 1 start bit, each character 8 bits, a parity bit, 2 stop bits. 100 characters&#x2F;second</p><p>Baud rate: 100*(1+8+1+2) &#x3D; 1200bps</p></li></ul></li><li><p>Synchronous serial communication:</p><ul><li>Transfer a block of data at a time</li><li>The sender and the receiver are synchronized at the beginning of data transfer using synch characters.<ol><li>Character-Oriented Synchronous Transmission</li><li>Bit-Oriented Synchronous Transmission</li></ol></li></ul></li></ul><h3 id="Communication-Modes"><a href="#Communication-Modes" class="headerlink" title="Communication Modes"></a>Communication Modes</h3><ul><li>Simplex:<ul><li>Only one way</li><li>E.g., printer</li></ul></li><li>Half-duplex:<ul><li>Data is transmitted one way at a time</li><li>E.g., walky-talky</li></ul></li><li>Full-duplex<ul><li>Data can go both ways at the same time</li><li>E.g., telephone</li></ul></li></ul><h3 id="Error-Detection"><a href="#Error-Detection" class="headerlink" title="Error Detection"></a>Error Detection</h3><ul><li>Parity bit<ul><li>Used in asynchronous serial communication</li><li>Put an extra parity bit at the end of each character<ul><li>Even-parity: the data and the parity bit has an even number of 1s; odd-parity</li></ul></li></ul></li><li>CRC Calculation<ul><li>vk-bit data, n-bit CRC:</li></ul></li></ul><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Computer-Organization&quot;&gt;&lt;a href=&quot;#Computer-Organization&quot; class=&quot;headerlink&quot; title=&quot;Computer Organization&quot;&gt;&lt;/a&gt;Computer Organization&lt;/</summary>
      
    
    
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/categories/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="知识整理/Knowledge" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86-Knowledge/"/>
    
  </entry>
  
  <entry>
    <title>暑期旅途</title>
    <link href="https://ryanstarfox.github.io/2024/09/17/2024/20240916%20%E6%9A%91%E5%81%87%E6%97%85%E6%B8%B8%E5%B0%8F%E7%BB%93/"/>
    <id>https://ryanstarfox.github.io/2024/09/17/2024/20240916%20%E6%9A%91%E5%81%87%E6%97%85%E6%B8%B8%E5%B0%8F%E7%BB%93/</id>
    <published>2024-09-17T04:21:00.000Z</published>
    <updated>2024-09-17T04:21:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="暑期旅途"><a href="#暑期旅途" class="headerlink" title="暑期旅途"></a>暑期旅途</h1><p>2023年的暑假，自六月中旬开始，至八月中下旬的军训，我一度以为这可能是我最长的假期，也是旅游最多的假期了：我于7月与友人前去西藏，看了银河横跨星空、路过赛马比赛、赏了冰川遇了藏羚羊；于7月底去了日本，在福冈拜访了林爷爷，泡了日本温泉，喜欢上了京都这座城市，和奈良小鹿贴贴，并且在归国的飞机上发了烧；于8月重游南京，重访明孝陵，在夫子庙人挤人，又顺路去了扬州游览瘦西湖，并且在旅途中就发烧了。充实又开心，我知道，这将是我此生难忘的一个夏天。</p><p><img src="/images/2024/%E6%88%AA%E5%B1%8F2024-09-16%2023.35.43.png" alt="截屏2024-09-16 23.35.43"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>谁知第二年——也就是今年的暑假，我因无小学期，放了足足3个月的假，从6月中到9月中，于是我竟然比去年旅游的次数还要多——这一年暑假也将是此生难忘吧？</p><h2 id="北京"><a href="#北京" class="headerlink" title="&#x3D;&#x3D;北京&#x3D;&#x3D;"></a>&#x3D;&#x3D;北京&#x3D;&#x3D;</h2><p>6月前去北京。上海是一座气候舒适但是没什么文化底蕴的城市，北京是一座文化底蕴深厚但是不怎么舒适的城市——感觉这是大多数北京的同学对于北京的看法。兴许是时间的缘故吧，我并未体会到北京的不舒适，仅有的几天停留中，也还没来得及吃厌北京火锅和北京烤鸭。</p><p><img src="/images/2024/IMG_5941.jpeg" alt="IMG_5941"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>我是有点嫉妒北京的文化底蕴的，总觉得随便一个地方都能和历史上的某一个事件联系起来，这种与过去连接的感觉非常奇妙。虽然如果从小住在北京，或是在北京住了足够长的时间，应该会对这种感觉越来越不屑吧？</p><p>在北京拜访了几位友人，并且长谈。许久不见，总有说不完的话。与y聊天的那一夜的酒喝到近23:00，地铁停运，在这座陌生的城市里骑了一个钟头共享单车才到旅馆——清北的位置真的是偏远啊！那天晚上还路过了友校：</p><p><img src="/images/2024/IMG_6090.jpeg" alt="IMG_6090"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>虽然本不想安排得非常累，但是没想到最后还是有些特种兵。最累的一天反而不是去长城的那一天——那一天早起，8点到八达岭长城的时候已经人满为患。有人抄近路乘缆车到离好汉坡只有一楼之遥的北7楼（没记错的话），我是从北一楼一路爬到了好汉坡，又一路爬到了没什么人的最最末尾北十二楼，在那里与一位大叔分别为对方合影留念，最后在北十一楼下长城。最累的是游览颐和园、圆明园和清北的那一天。颐和、圆明二园本就很大，最后也没有完全兜玩，只是确保那些必看的都去一一参观过。随后去清，不料清在自招活动之类的，未能如愿进校，前去北，leo带我兜了一圈，随后与leo前去王府井参观Apple store和它对面的Huawei store（这就是无可救药的果粉）。那一天走了3万余步，最累。</p><p>庆丰包子味道一般，但是看上去很有帝王之气。</p><p><img src="/images/2024/IMG_6132.jpeg" alt="IMG_6132"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="崇明"><a href="#崇明" class="headerlink" title="&#x3D;&#x3D;崇明&#x3D;&#x3D;"></a>&#x3D;&#x3D;崇明&#x3D;&#x3D;</h2><p>去崇明也是临时起意，起因是身为护士的母亲难得地有了连续两天的休息，就决定前去从未去过但是不远的崇明岛。</p><p>一路开车过去的，经过上海长江大桥（可惜上海市长不是江大桥了），我妈有感而发：“这座桥值得50元路费。”</p><p>崇明两天主要就逛逛各种森林公园，吃吃便宜又美味的农家乐。农家乐的饭菜真的比商场预制菜好吃一百万倍！（是不是商场里除了烤肉和火锅都是预制菜。。。）海边有很多螃蟹。</p><p>看到东滩可以夜公园，想起来之前读到过上海最适合观星的地方是崇明，想以后带着望远镜来看星星。东滩好像是一个扬子鳄保护基地之类的，可惜没见到扬子鳄。</p><p>回家的时候意外地发现嘉定的电视塔和电线杆很日本，在车上胡乱拍了一张。</p><p><img src="/images/2024/_DSC1385.JPG" alt="_DSC1385"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="嵊泗"><a href="#嵊泗" class="headerlink" title="&#x3D;&#x3D;嵊泗&#x3D;&#x3D;"></a>&#x3D;&#x3D;嵊泗&#x3D;&#x3D;</h2><p>去嵊泗也是临时起意，原因也是身为护士的母亲难得地有了连续两天的休息。一路开车过去，经过东海大桥，我妈有感而发：“这座桥值100元路费。”</p><p>到了沈家湾码头，一路乘船去嵊泗，船蛮稳的，不晕。穿上在放奥运会。</p><p>嵊泗是一座美丽的小岛，爱上了，加入旅居城市清单了。海边真的很美，好想永远住在海边啊！</p><p><img src="/images/2024/IMG_6592.jpeg" alt="IMG_6592"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>在这里租不到山地自行车，所以只能租电瓶车环岛骑行，非常舒适，只是我还是更喜欢自行车一些。</p><p>第二天早起看日出，结果没看到，有山挡着，太阳不是从海里出来的，而是从山后出来的。</p><p><img src="/.7/.Photo.asset/IMG_6636.jpeg" alt="IMG_6636"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>海边好多小螃蟹和海蟑螂。</p><h2 id="长沙张家界"><a href="#长沙张家界" class="headerlink" title="&#x3D;&#x3D;长沙张家界&#x3D;&#x3D;"></a>&#x3D;&#x3D;长沙张家界&#x3D;&#x3D;</h2><p>与Leo一起去的，住在五一广场，也就是市中心，离Apple Store很近，两个无可救药的果粉在长沙Apple store体验vision pro（这已经是我第三次体验vision pro了）。</p><p>马王堆汉墓和湖南博物馆都要提前预约，我们临行前才想起，马王堆汉墓去不成了，湖南博物馆在携程上找了一个导游带我们讲解参观，导游水平很高，感觉性格很受。在湖南博物馆看到了辛追夫人，这么看来也不用去马王堆汉墓了。</p><p>在长沙呆了两天后，去了张家界。</p><p>张家界全是土菜馆，所以我也吃得很开心——美味无比！我爱土菜馆！我爱农家乐！量大管饱又美味！建议交大开满中国各地的农家乐。</p><p>张家界很奇妙，或许是阿凡达拍摄地的缘故吧，所以感觉外国人比例甚至可能超过了上海市中心，甚至是可以和交大这样的大学相当。<img src="/images/2024/_DSC1986.JPG" alt="_DSC1986"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>山真的是一重一重的。</p><p>不过我对于张家界的感知也并没有觉得景色非常美，感觉壮观归壮观，但是不过尔尔。不过值得一提的是那里的接驳车系统——原始但是有效！那里的接驳车系统如下：接驳车按照规定的路线行驶，和司机说好你要去哪里，他沿着路线放你下去之后你去找工作人员，工作人员会告诉你接下来乘坐哪一班接驳车并且告知那个司机自己的目的地。这个看上去有点原始的系统竟然出奇地高效！repect respect</p><p>我和Leo一直有一个感知：SHSer的走路速度一直比普通人快一些，尤其是对于普通人正常的速度，我们会觉得很难受，有点高不成低不就，再快一点慢一点都会舒服得多。这一点在张家界那里得到了印证：游客中心说要30分钟的路程，我们竟然只走了15分钟，对此颇为惊讶。在金鞭溪那里的时候，由于是平地，我们记了个时，发现2.58km的走路配速竟然是12’11’’，还有两段7km的记录，竟然配速也是15’多，真是擅长走路的两个人。<img src="/images/2024/fitness1.jpg" alt="fitness1"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>btw，金鞭溪好多🐒。</p><p><img src="/images/2024/_DSC1960.JPG" alt="_DSC1960"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>这只猢狲看上去在深思</p><p>在机场回上海候机的时候遇到两个同去上海的人，他们像是科技控股相关公司的员工，与他们相谈甚欢，我和Leo正好专业对口，又是果粉。对方提到想投资安克，正在做调研，安克正是主流苹果配件厂商之一。</p><h2 id="日本"><a href="#日本" class="headerlink" title="&#x3D;&#x3D;日本&#x3D;&#x3D;"></a>&#x3D;&#x3D;日本&#x3D;&#x3D;</h2><p>重访日本，此次主要目的是带外公外婆出过玩玩——外婆还接到了太外婆的任务，买点酥心糖吃吃：太外婆记得小时候吃到的东洋糖非常甜，想吃吃看。酥心糖是没有买到，但是买了很多软糖硬糖和糕点。买的大福本还担心她咬不动，结果竟然一下子吃了8个，吃得晚饭都吃不下。</p><p>此次依次拜访了名古屋-京都-奈良-大阪。填补了一些去年的遗憾吧。</p><p>名古屋去年未去过，但感觉大名鼎鼎，去看了看名古屋城。</p><p><img src="/images/2024/IMG_7237.jpeg" alt="IMG_7237"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>京都去年的遗憾很多，一一填补：在伏见稻荷大社重买了去年弄丢的狐狸玩具、进去了去年过了参拜时间而没能参观的国宝金阁寺、参观了去年根本没时间去的二条城。我发现我对京都已经开始有点熟悉了，有一夜家人都累了在酒店休息，我独自出去逛，凭我的记忆走到了去年住的酒店。在鸭川旁边坐了很久。京都也是一个以后有机会一定要来旅居的城市！加入旅居列表！</p><p> <img src="/images/2024/IMG_7449.jpg" alt="IMG_7449"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>奈良重访小鹿，它们比去年凶一些，可能是秋天发情期的缘故吧？今年进了春日大社——去年在春日大社门口遇见了P同学，长谈之后竟然过了参观时间。</p><p>在大阪的第一天我又一次经过了打烊的黑门市场，但是在最后回国的那一天上午，我终于见到了开门的黑门市场！A5和牛美味。三度经过了去年吃的一家烧肉，可惜此次没机会吃，下次再去。</p><p>在日本的几天，我的外公外婆其实不是很吃得惯日本的饭菜，甚至我妈也没有很吃得惯——本以为日本与中国足够近，应该菜品也足够相近的。到头来，我的外公外婆最满意的是两顿弥生轩的日式快餐和一顿一兰拉面。</p><p>此次出行也有一些插曲，四人各犯了一次错：</p><p>我：把Apple pencil落在京都的酒店，连夜从奈良赶回京都，再回奈良几乎是乘到了JR的末班车。</p><p><img src="/images/2024/IMG_7289.jpeg" alt="IMG_7289"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>母亲：约定好在A地点等我，我送疲倦的外公外婆回酒店后回到A点，竟然不见踪影，电话也打不通，此时还暴雨骤降，我只好狼狈地去罗森躲雨。后来知道她只是去逛免税店了，免税店太吵接不到电话。</p><p>外婆：上面我送外公外婆回酒店的原因不仅仅是因为他们疲倦，还因外婆的手机落在了酒店。</p><p>外公：在机场跟着我们走结果自己走散了，还好距离不远，找到了。</p><p>总之还是较为顺利，没出什么大岔子。</p><p>以及此次去日本在京都遇到了T同学，去年也在奈良遇到了P同学，真是他乡遇故知啊！</p><h2 id="其他的一些碎碎念"><a href="#其他的一些碎碎念" class="headerlink" title="&#x3D;&#x3D;其他的一些碎碎念&#x3D;&#x3D;"></a>&#x3D;&#x3D;其他的一些碎碎念&#x3D;&#x3D;</h2><p>其实主要想讲讲日记。</p><p>我是从2018年8月1日开始写日记的，之所以这个日期记得这么清楚，是因为这是我去新加坡马来西亚旅游出发的日子。我为什么要记日记呢？其实是害怕遗忘——我太珍视自己的记忆了——记了日记，我就可以更放心地遗忘了。（其实拍照也是一个道理啊！）</p><p>一直以来，我写日记是传统的纸笔写日记的。上了大学之后，写日记是为数不多还需要用到笔的场景，我也因此格外珍惜用纸笔写日记的机会。可是在旅途中，把日记带出去又厚重又不安全，正巧iOS17发布了手记app，我便在旅途中体验体验，在此分享一下自己的感受：</p><p>电子日记最令人顾虑的是数据，不过目前绝大多数日记平台都支持导出日记&#x2F;打印日记了，这是我敢用电子日记的大前提！电子日记的最大优点是记录多媒体：手记app每次都会推荐放在日记里的图片、定位等多媒体，我很喜欢。不仅如此，还有一个记录心情功能，这个功能是我最心水的，我几乎想以后不用纸笔记日记了。</p><p><img src="/images/2024/emotion.jpg" alt="emotion"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>但是它也有痛点：没有iPad版，也就意味着它不能手写，我认为这就失去了日记的感觉——其实用Apple pencil写日记已经让我感到勉为其难了，但是手记只能在手机上打字，因此我放弃了这个计划。</p><p>但是我有计划将手记app和纸质日记的优点相结合：</p><p>在旅途中，我会选择手记app，不用带出日记本，安全又方便。而且旅途中会有大量照片、定位，正合适手记app。</p><p>平时，我会记录纸质日记，但我打算参考手记app的记录心情功能，给自己做一些小便签小贴纸记录每天的心情。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;暑期旅途&quot;&gt;&lt;a href=&quot;#暑期旅途&quot; class=&quot;headerlink&quot; title=&quot;暑期旅途&quot;&gt;&lt;/a&gt;暑期旅途&lt;/h1&gt;&lt;p&gt;2023年的暑假，自六月中旬开始，至八月中下旬的军训，我一度以为这可能是我最长的假期，也是旅游最多的假期了：我于7月与友人前</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="旅行/Travel" scheme="https://ryanstarfox.github.io/tags/%E6%97%85%E8%A1%8C-Travel/"/>
    
  </entry>
  
  <entry>
    <title>没抢到果子首发的经历</title>
    <link href="https://ryanstarfox.github.io/2024/09/15/2024/20240915%20%E6%B2%A1%E6%8A%A2%E5%88%B0%E9%A6%96%E5%8F%91/"/>
    <id>https://ryanstarfox.github.io/2024/09/15/2024/20240915%20%E6%B2%A1%E6%8A%A2%E5%88%B0%E9%A6%96%E5%8F%91/</id>
    <published>2024-09-15T13:31:00.000Z</published>
    <updated>2024-09-15T13:31:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="没抢到果子首发的经历"><a href="#没抢到果子首发的经历" class="headerlink" title="没抢到果子首发的经历"></a>没抢到果子首发的经历</h1><p>好笑，时隔一年整，没抢到首发</p><p>今年吸取了去年的教训，决定抢贵一点的机型，因为愿意加钱买首发的富哥富姐想必也会无脑冲超级顶配吧？所以我和Bill都筹集了资金，决定一人购置两台iPhone 16 pro max 1t机型</p><p>但是事情出现了转机：发布会之后，9&#x2F;13日之前，我先前去闲鱼进行一些市场调研，发现挂出来的基本上都是256g的机型，也就是iPhone 16 pro max的最低配，令人感到疑惑。可能性有二：</p><ol><li>没有人买1t版本，大家都买256g，所以大家都挂256g</li><li>没有人有1t的货，所以说1t非常抢手</li></ol><p>最终我和Bill决定，我购置一台256g，一台1t，Bill购置两台512，平摊风险</p><p>我特地在抢之前熟悉了一下流程。去年是在Apple store直接购买的。今年由于原账号转了美区，美区支付方式没有微信支付宝和储蓄卡，只有信用卡，而我没有信用卡，因此只得作罢。在淘宝Apple Store官方、京东Apple自营店、微信小程序Apple store中。最终选择了微信小程序Apple store，因其与Apple store体验最相似。</p><p>13日20时，准时开抢！</p><p><img src="/images/2024/image-20240915202059320-6402860-6402864-6402866.png" alt="image-20240915202059320"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>情况如图，Hertz最为fx，竟然进去了不买，只是去逛逛，像是除夕夜去南京路轧闹猛</p><p>随后我出状况了，我之前把钱集中到了我的上海银行卡里面，结果发现有限额，而且限额只有5000，我连转都转不出去。最后还是我妈的协助下购置的两台。虽然20:06就登上了，本应07就付款，结果硬生生一台10分一台15分付的款。</p><p>与此同时Bill亦出状况了，他给我打电话，我不接。后来发现又是钱的问题，又是颜色的问题，好像也拖得较晚，但比我略早一些。</p><p>买是买上了，有没有首发呢？</p><p>去年Leo也是碰到银行卡限额的问题，群里东拼西凑借满了钱，记得是拖到20分上下才付款，结果还是首发，所以应该能抢到吧？</p><p>第二天早上起来一看：预计送货日期10&#x2F;14-18，心凉了半截</p><p><img src="/images/2024/%E6%88%AA%E5%B1%8F2024-09-15%2020.31.51-6403523.png" alt="截屏2024-09-15 20.31.51"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>于是乎，直接退货，现在已经是这样了，，</p><p>与Bill交流发现他亦未抢到首发，他最后不知怎么抢了3台，看上去都是第二批</p><p><img src="/images/2024/image-20240915203506721-6403711.png" alt="image-20240915203506721"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="/images/2024/image-20240915203549756.png" alt="image-20240915203549756"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>我帮他挂了闲鱼，看看能不能赚到钱吧。。。</p><p> Bill补充分析：</p><p><img src="/images/2024/0.png" alt="img"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>真是奇怪没想到最热门的是白色，经典咏流传啊！新颜色不过尔尔。</p><p>综上所述，银行卡限额真的是罪大恶极！！</p><p>我气急败坏，于昨日前去上海银行解决此问题，打算将日限额提至每日50k，月限额保持每月100k</p><p>昨日先前去观看电影《里斯本丸号沉没》，随后就驱自行车前往上海银行嘉定总行</p><p>到号之后又等待许久，才得知这张银行卡既没有工资进出，有没有贷款进出，所以5000的限额已经算是很大了。我疑惑、惊讶，感觉银行、款项大、5000元人民币两两都有关系，可三个放在一起就有些好笑。</p><p>银行职员为我提出了两条解决方法：</p><ol><li>转入另一张无限额的银行卡。可是我的别的银行卡都各有各的用处，不想混在一起搞不清楚，作罢</li><li>办一张信用卡，bingo！</li></ol><p>我一直都想办一张信用卡，因为对于国际支付方便一些，正好趁此机会顺水推舟办一张</p><p>网上查找后，发现可以学生零额度申请而且支持国际支付的推荐去上海银行，于是穿过马路前往中国银行嘉定总行</p><p>微信扫了一个码，按照指示输入相关信息后，眼看临门一脚，发现界面加载不出</p><p>在浏览器中打开、在中国银行app内均不行</p><p>遂作罢，估计中秋系统升级，过两天再尝试</p><p>唉此次抢iPhone 16 Pro Max计划出师不利、诸事不顺、功败垂成</p><p><img src="/images/2024/hero_static__f5zgxhmj6geq_large_2x.jpg" alt="hero_static__f5zgxhmj6geq_large_2x"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;没抢到果子首发的经历&quot;&gt;&lt;a href=&quot;#没抢到果子首发的经历&quot; class=&quot;headerlink&quot; title=&quot;没抢到果子首发的经历&quot;&gt;&lt;/a&gt;没抢到果子首发的经历&lt;/h1&gt;&lt;p&gt;好笑，时隔一年整，没抢到首发&lt;/p&gt;
&lt;p&gt;今年吸取了去年的教训，决定抢贵一</summary>
      
    
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/categories/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="Apple" scheme="https://ryanstarfox.github.io/tags/Apple/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
  </entry>
  
  <entry>
    <title>高光时刻--还可以吧</title>
    <link href="https://ryanstarfox.github.io/2024/09/10/2024/20240910%20%E8%8B%B9%E6%9E%9C%E5%8F%91%E5%B8%83%E4%BC%9A/"/>
    <id>https://ryanstarfox.github.io/2024/09/10/2024/20240910%20%E8%8B%B9%E6%9E%9C%E5%8F%91%E5%B8%83%E4%BC%9A/</id>
    <published>2024-09-10T08:34:00.000Z</published>
    <updated>2024-09-10T08:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高光时刻–还可以吧"><a href="#高光时刻–还可以吧" class="headerlink" title="高光时刻–还可以吧"></a>高光时刻–还可以吧</h1><p>新年快乐🎉🎉<img src="/images/2024/hero_static__f5zgxhmj6geq_large_2x.jpg" alt="hero_static__f5zgxhmj6geq_large_2x"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>这是我第一次在假期里的苹果发布会，说来好笑，交大竟至今仍未开学</p><p>我的直观感受此次发布会无甚惊喜，基本都是常规更新，也有几款产品更新得很烂，真的毫无诚意</p><h2 id="iPhone-系列"><a href="#iPhone-系列" class="headerlink" title="iPhone 系列"></a>iPhone 系列</h2><p>首先，iPhone16这个外观和颜色真的丑啊！！</p><p><img src="/images/2024/iPhone16.png" alt="iPhone16"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>我其实很早之前就看到iPhone16的爆料渲染图了，看到这个设计的时候真的觉得是丑啊。我可以理解为了支持空间视频的功能，两个摄像头不能对角线放置，要水平&#x2F;竖直放置，但是这个摄像头模块让人感到非常不协调：为什么要把闪光灯单独拉到摄像模块之外呢？如果用iPhone X那样的设计或者用iPhone 12那样的设计，我还是可以理解的，但是为了标新立异弄成这样，真的是可可又悲悲。不过不要低估苹果的畜牧业，我看了这个设计看了半年，竟然已被驯化，觉得这个外观还可以了，真的是果粉可悲的自适应。</p><p>其次，这个颜色真的有点奇怪。黑白是常规的颜色，另外三款颜色我认为不比去年（15系列的颜色真的是太好看了！），也是有点标新立异。其实我认为最大的问题在于摄像模块的颜色比周围深，色差较大，给人奇怪的感觉。三款彩色中，我认为绿色最佳，蓝色平平，粉色好丑。Hertz认为配色像垃圾桶，过于廉价。他这么一说真的回不来了。</p><p><img src="/images/2024/%E5%9E%83%E5%9C%BE%E6%A1%B6.png" alt="垃圾桶"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>比较令我惊讶的是iPhone16竟然也给了摄影键，本在惊叹刀钝了，没想到刀法依旧——压感功能是Pro exclusive的。</p><p>16Pro让人有点期待，毕竟A18Pro是第二代3纳米芯片，应该能解决去年A17Pro的发热问题，这才是满血3纳米！不过比较好笑，官方介绍里的对比默认对比的竟然是12Pro，一下让人觉得哑然失笑。</p><p><img src="/images/2024/%E6%88%AA%E5%B1%8F2024-09-10%2015.58.45.png" alt="截屏2024-09-10 15.58.45"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>别的都是常规升级吧？我有一点没弄清楚，这次全系都有“融合式摄像头”，在标准版能承担广角和长焦的工作，有人看懂是什么意思嘛？还是说仅仅是另一个噱头？感觉标准版的长焦还是需要依靠裁切+算法。</p><h2 id="Apple-watch-系列"><a href="#Apple-watch-系列" class="headerlink" title="Apple watch 系列"></a>Apple watch 系列</h2><p>watch ultra只是多了新配色，无聊，不表。</p><p><img src="/images/2024/%E6%88%AA%E5%B1%8F2024-09-10%2016.01.17.png" alt="截屏2024-09-10 16.01.17"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>watch x可以聊聊：官方给出的最大卖点是薄，不过私以为对于手表来说其实厚度的感知没有那么大，续航才是对于使用体验更重要的部分。目前的续航，正常用可以一天有点宽裕，但是如果旅游、记录大量运动，那么连一天的续航都没有，我在旅途中都是开低电量模式的，这会牺牲常亮显示、运动监测等功能。诚然，这一代升级了快充，但是谁会出门带一根watch的线呢？虽然第三方有小巧的充电头，但是那种又只能超级慢充，也不舒服。所以我认为走偏了——包括上半年的iPad pro我也觉得是类似的问题，不过那个变薄还比watch x变薄更有道理一些，上述的一些缺点并没有，而且变薄变轻的确舒适。</p><p>不过leo主张，现在的watch是比正常的watch厚一些，变薄是有道理的，体验确实会更好，不过让人觉得不如ultra 1。</p><p>比较牛的是熄屏显示可以1Hz刷新率了，所以说可以显示秒针了。以及亮面铝金属外壳看上去好看一些了，我一开始还以为是不锈钢。</p><p>另一件好笑的是：官方声称watch x边框变薄了，我认为我和绝大多数用户都想看到其相对于789的模具变薄了多少，结果官网只有和3456se对比，真是此地无银三百两。</p><p><img src="/images/2024/%E6%88%AA%E5%B1%8F2024-09-10%2015.59.30.png" alt="截屏2024-09-10 15.59.30"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="AirPods系列"><a href="#AirPods系列" class="headerlink" title="AirPods系列"></a>AirPods系列</h2><p>先说说好笑的AirPods Max，所有的升级只有新配色和type-C，芯片没换性能无提升——这不是和AirPods pro 2（type- C）一样，悄咪咪上架就行了嘛？我不要新颜色，能不能给我AirPods Max2</p><p><img src="/images/2024/AirPods4.png" alt="AirPods4"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'>AirPods 4我认为不错，降噪效果能有AirPods pro一代的效果（还是从AirPods Max的介绍里推断出来的）、无线充电（普通+手表充电器）、力度感应器（就是不知道能不能调整音量，要是可以的话就完美了，不过以苹果的尿性估计是没有的）。总之就是最强半入耳！感觉是在音质和舒适性上找到了平衡点（不喜欢骨传导&#x2F;耳夹式，音质差&amp;漏音)。</p><p><img src="/images/2024/apm%E5%92%8Capapp%E5%AF%B9%E6%AF%94.png" alt="apm和apapp对比"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h2 id="综上所述"><a href="#综上所述" class="headerlink" title="综上所述"></a>综上所述</h2><p>觉得还可以吧，中规中矩，不拉胯，但因为没什么有意思的。今年吸取了去年的经验，决定倒买倒卖iPhone 16 Pro Max 沙漠色 1Tb款，成本13999，最多亏0元，不知道能赚多少。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;高光时刻–还可以吧&quot;&gt;&lt;a href=&quot;#高光时刻–还可以吧&quot; class=&quot;headerlink&quot; title=&quot;高光时刻–还可以吧&quot;&gt;&lt;/a&gt;高光时刻–还可以吧&lt;/h1&gt;&lt;p&gt;新年快乐🎉🎉&lt;img src=&quot;/images/2024/hero_static</summary>
      
    
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/categories/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="Apple" scheme="https://ryanstarfox.github.io/tags/Apple/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
  </entry>
  
  <entry>
    <title>影评：《姥姥的外孙》</title>
    <link href="https://ryanstarfox.github.io/2024/08/31/2024/20240831%20%E5%A7%A5%E5%A7%A5%E7%9A%84%E5%A4%96%E5%AD%99/"/>
    <id>https://ryanstarfox.github.io/2024/08/31/2024/20240831%20%E5%A7%A5%E5%A7%A5%E7%9A%84%E5%A4%96%E5%AD%99/</id>
    <published>2024-08-31T15:48:19.000Z</published>
    <updated>2024-08-31T15:48:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="永恒的难题"><a href="#永恒的难题" class="headerlink" title="永恒的难题"></a>永恒的难题</h1><p>今天去看了姥姥的外孙</p><p>这是一部铺垫得很慢的电影。电影前半段我几乎以为是一部喜剧片，没想到这竟然只是糖衣，前后的呼应竟更让人唏嘘不已。</p><p>印象最深刻的镜头是几组火车的镜头。安乘着火车和大舅一家陪同外婆去烧香祈福，又一同乘回来；铁轨穿过繁忙但不繁华、热闹但不喧闹、市井但不低俗的郊区小镇；尤其是最后得知外婆为自己存款时，安愣住了，向后的火车的喧嚣遮盖了他杂乱的思绪，他恍惚看见小时外婆“轻易”的约定，向后的火车声音却变得平静，安回到此时此刻。铁轨上的天空，树梢之间，有彩虹。</p><p>从最后一次化疗后的剧情，真正让人落泪不止。</p><p>老人需要什么？老人需要陪伴。老人害怕什么？老人害怕孤独。老人爱自己的孩子，老人恨自己的孩子。老人又变回了孩子。安用手机给外婆看弱智美颜特效，安陪外婆打牌，安安慰深夜痛哭的外婆，安给临终的外婆唱安眠曲。</p><p>这个时代太快，让人不愿承认但又不得不承认，代沟就是在越来越大，后辈和长辈的话题真的越来越少，无非是新闻、饭菜、小时故事。诚然可悲，但又无可奈何。但是我依旧想多与长辈沟通，我想认识更加立体的自己的长辈，ta们作为一个真实的人，而不是相对于自己的一个身份。</p><p>我也很害怕我会变心。小孩子的心思很简单：我要孝顺，我希望所有人都好，就像电影中的彩虹说：“我长大要当医生为姥姥治病。”但是现实的种种风尘斑驳了赤字之心。大舅最后才想起来，自己夜不能寐的原因。我是独生子女家庭，相比大家庭子女之间地位的矛盾，独生子女家庭的矛盾更在于放不下孩子、也需要孩子的父母，和想为自己往前飞却又希望回头带着父母一起往前的瞻前顾后。父母曾经是一切——但是所有孩子都会背叛父母，父母不是一切；所有的父母也不得不接受这份背叛，让孩子向前飞。</p><p>长辈、后辈、友谊、利益、事业、爱情，我们迷失在其中，我们忘了一些誓言，但是总有人记得，但或许没人理得清这些关系吧？对这些关系做任何的比较或许都是一种痛苦。安不要再问外婆最爱的人是谁了，安对外婆说自己最爱的人是外婆。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;永恒的难题&quot;&gt;&lt;a href=&quot;#永恒的难题&quot; class=&quot;headerlink&quot; title=&quot;永恒的难题&quot;&gt;&lt;/a&gt;永恒的难题&lt;/h1&gt;&lt;p&gt;今天去看了姥姥的外孙&lt;/p&gt;
&lt;p&gt;这是一部铺垫得很慢的电影。电影前半段我几乎以为是一部喜剧片，没想到这竟然只是糖衣</summary>
      
    
    
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/categories/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="豆瓣/Douban" scheme="https://ryanstarfox.github.io/tags/%E8%B1%86%E7%93%A3-Douban/"/>
    
  </entry>
  
  <entry>
    <title>fxlego大典v1.0</title>
    <link href="https://ryanstarfox.github.io/2024/08/11/2024/20240811%20%E4%B8%8A%E4%B8%AD%E8%85%94%E8%AF%8D%E5%85%B8v1.1/"/>
    <id>https://ryanstarfox.github.io/2024/08/11/2024/20240811%20%E4%B8%8A%E4%B8%AD%E8%85%94%E8%AF%8D%E5%85%B8v1.1/</id>
    <published>2024-08-11T04:00:00.000Z</published>
    <updated>2024-08-11T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="v1-0"><a href="#v1-0" class="headerlink" title="v1.0"></a>v1.0</h2><p>写这一份上中腔词典的原因是一时兴起。其实很难说我这里所说的“上中腔”的具体定义是什么。说是上中腔，但又主要是大师班的同学常用，但别的班也有一批同学会用。说是大师班的同学常用，但又主要是大师班的男生在用，女生们也会用其中的一些表述，但不多。为了简单起见，还是称其为上中腔好了。写这份东西写主要是图一乐，回顾一下以前的一些已经成为典故的趣事，不可当真。用上中腔的表述来说，这份东西其实非常🌭，ydfx。编写这份东西的时候，毛哥和Nababa同学给我提供了很多帮助，他们是我的第一批读者，帮助我扩充了一些词条，也回忆了有意思的故事，其中Nababa同学还帮我写了一些我不是很熟悉的词条。感谢zjh同学，在发布前夕又补充了大量词条。也感谢myj，sty同学，从他们那里我也了解到更多的一些我不熟悉的词条和它们的词源典故。以下的词条的例句来源于我与同学的聊天记录，感谢这些聊天记录！这些必然包含着我的片面性与局限性，欢迎扩充更多词条以及修订词条！</p><h2 id="v1-1"><a href="#v1-1" class="headerlink" title="v1.1"></a>v1.1</h2><p>修订、增补了一些词条。由于微信显示不出\dagger，\ddagger和\star符号，在微信公众号中改成了粗体、斜体和下划线。也欢迎下载原文档查看。感谢Nababa同学和try同学的批评指正以及提供的资料。<br>关于到底什么是“上中腔”，try同学认为这是九班腔，又因高三重分班后在大师班内广泛传播，随后又平行班也沾染了一些这种腔调。认为有一定道理，不知大家怎么看。感觉这确实很难定义，但确实有这么个东西。它可以是上中腔、九班腔甚至只是我身边的人的口癖。感觉这份东西还是非常主观啊！嗨不过也是写这好玩儿而已。只是一份🌭词典罢了<br>估计也就到1.1就差不多了吧。如果这份东西还能再写一个1.2就真的🌭又fx了。</p><p>$\dagger$表示已经过时或者不常用的词条，$\ddagger$表示含义、出处有较强侮辱性的词条，$\star$表示常用词条</p><h1 id="拼音缩写对照表"><a href="#拼音缩写对照表" class="headerlink" title="拼音缩写对照表"></a>拼音缩写对照表</h1><table><thead><tr><th align="center">缩写</th><th align="center">中文</th><th align="center">变体</th></tr></thead><tbody><tr><td align="center">buc</td><td align="center">不错</td><td align="center">bc（不错）</td></tr><tr><td align="center">bd</td><td align="center">不懂</td><td align="center"></td></tr><tr><td align="center">bzd</td><td align="center">不知道</td><td align="center"></td></tr><tr><td align="center">ee</td><td align="center">呃呃</td><td align="center"></td></tr><tr><td align="center">fx</td><td align="center">发笑</td><td align="center">fxfx（发笑发笑）<br />ydfx（有点发笑）</td></tr><tr><td align="center">hb</td><td align="center">好吧</td><td align="center"></td></tr><tr><td align="center">hd</td><td align="center">好的</td><td align="center">hod（吼的（好的的变体））</td></tr><tr><td align="center">hyys</td><td align="center">很有意思</td><td align="center"></td></tr><tr><td align="center">ii</td><td align="center">哎哎</td><td align="center"></td></tr><tr><td align="center">jwyj</td><td align="center">经我研究</td><td align="center"></td></tr><tr><td align="center">juj</td><td align="center">拒绝</td><td align="center"></td></tr><tr><td align="center">kb</td><td align="center">可悲</td><td align="center">kbkb（可悲可悲）<br />ydkb（有点可悲）</td></tr><tr><td align="center">kknd</td><td align="center">看看你的</td><td align="center"></td></tr><tr><td align="center">kyd</td><td align="center">可以的</td><td align="center"></td></tr><tr><td align="center">kyx</td><td align="center">看一下</td><td align="center"></td></tr><tr><td align="center">nsw</td><td align="center">脑死亡</td><td align="center"></td></tr><tr><td align="center">nk</td><td align="center">脑控&#x2F;南京</td><td align="center"></td></tr><tr><td align="center">nkr</td><td align="center">脑控人</td><td align="center"></td></tr><tr><td align="center">oo</td><td align="center">哦哦</td><td align="center">oO</td></tr><tr><td align="center">mxd</td><td align="center">没想到</td><td align="center"></td></tr><tr><td align="center">qnjs</td><td align="center">请你介绍</td><td align="center"></td></tr><tr><td align="center">sd</td><td align="center">是的</td><td align="center">bsd（不是的）</td></tr><tr><td align="center">szyd</td><td align="center">是这样的</td><td align="center"></td></tr><tr><td align="center">tina</td><td align="center">天哪</td><td align="center">tn（天哪）</td></tr><tr><td align="center">ylrc</td><td align="center">原来如此</td><td align="center"></td></tr><tr><td align="center">xm</td><td align="center">羡慕</td><td align="center"></td></tr><tr><td align="center">zssm</td><td align="center">这是什么</td><td align="center"></td></tr></tbody></table><h1 id="2-假文言"><a href="#2-假文言" class="headerlink" title="2. 假文言"></a>2. 假文言</h1><h2 id="人称代词-母"><a href="#人称代词-母" class="headerlink" title="人称代词+母"></a>人称代词+母</h2><ul><li>【释义】xx的母亲</li><li>【变体】你母，我母</li><li>【例句】好吧，你母今年贵庚？</li></ul><h2 id="表示程度的词-佳-star"><a href="#表示程度的词-佳-star" class="headerlink" title="表示程度的词+佳$^\star$"></a>表示程度的词+佳$^\star$</h2><ul><li>【释义】表示对事物的评判，一般不用好、坏，而是用“佳”</li><li>【变体】不佳、极佳、最佳、较佳</li><li>【例句】哎呀，外面天气确不佳。</li></ul><h2 id="何处"><a href="#何处" class="headerlink" title="何处"></a>何处</h2><ul><li>【释义】在哪里</li><li>【例句】届时具体何处会面，可再研。</li></ul><h2 id="亦-star"><a href="#亦-star" class="headerlink" title="亦$^\star$"></a>亦$^\star$</h2><ul><li>【释义】也</li><li>【例句】但他们亦用苹果。</li></ul><h2 id="可-不可-star"><a href="#可-不可-star" class="headerlink" title="可&#x2F;不可$^\star$"></a>可&#x2F;不可$^\star$</h2><ul><li>【释义】可以</li><li>【例句】kb，如果有体育，则不可。</li></ul><h1 id="3-大词小用"><a href="#3-大词小用" class="headerlink" title="3. 大词小用"></a>3. 大词小用</h1><h2 id="部署-star"><a href="#部署-star" class="headerlink" title="部署$^\star$"></a>部署$^\star$</h2><ul><li>【释义】筹划，准备，实施</li><li>【例句】哦，明早你起床后部署一下收款。</li><li>【例句】且室友今天还在部署去日本玩的机票。</li></ul><h2 id="会面-star"><a href="#会面-star" class="headerlink" title="会面$^\star$"></a>会面$^\star$</h2><ul><li>【释义】见面，碰头</li><li>【例句】届时具体何处会面，可再研。</li></ul><h2 id="昏聩"><a href="#昏聩" class="headerlink" title="昏聩"></a>昏聩</h2><ul><li>【释义】昏了头，做出一些荒谬或者愚蠢的事情</li><li>【例句】早上淑芬很昏聩。</li></ul><h2 id="拒绝-star"><a href="#拒绝-star" class="headerlink" title="拒绝$^\star$"></a>拒绝$^\star$</h2><ul><li>【释义】语气词，表示拒绝，但是语气不正式，有点委婉地表示拒绝，常与微信[抱拳]表情包连用</li><li>【例句】拒绝到国权路。</li></ul><h2 id="令人心寒"><a href="#令人心寒" class="headerlink" title="令人心寒"></a>令人心寒</h2><ul><li>【释义】让人感到寒心，夸张化表述</li></ul><h2 id="视奸"><a href="#视奸" class="headerlink" title="视奸"></a>视奸</h2><ul><li>【释义】偷偷监视</li><li>【词源】双枪小帅对于董行为的描述（经常偷偷在后门监视同学们自修上课是否认真）</li><li>【例句】被你视奸。</li></ul><h2 id="通过-star"><a href="#通过-star" class="headerlink" title="通过$^\star$"></a>通过$^\star$</h2><ul><li>【释义】表示赞同</li><li>【近义词】支持</li><li>【例句】可以可以，通过，接受了。</li></ul><h2 id="污名化"><a href="#污名化" class="headerlink" title="污名化"></a>污名化</h2><ul><li>【释义】表示不承认对方对自己的批评，常与拒绝、禁止连用，有时也用于承认自己的批评不妥当</li><li>【词源】中国外交部常用语</li><li>【例句】hd你说的对，污名化一次。</li></ul><h2 id="研究-star"><a href="#研究-star" class="headerlink" title="研究$^\star$"></a>研究$^\star$</h2><ul><li>【释义】了解一下</li><li>【变体】研究一下，经我研究</li><li>【例句】所以研究你有无入坑想法。</li></ul><h2 id="支持-star"><a href="#支持-star" class="headerlink" title="支持$^\star$"></a>支持$^\star$</h2><ul><li>【释义】表示赞同</li><li>【近义词】通过</li><li>【例句】狠狠支持了。</li></ul><h1 id="4-数学相关"><a href="#4-数学相关" class="headerlink" title="4. 数学相关"></a>4. 数学相关</h1><h2 id="笛卡尔的茅厕-dagger"><a href="#笛卡尔的茅厕-dagger" class="headerlink" title="笛卡尔的茅厕$^\dagger$"></a>笛卡尔的茅厕$^\dagger$</h2><ul><li>【释义】解析几何</li><li>【词源】笛卡尔为解析几何的创立者。在郭fj同学的纯几何杯赛”大司马杯“号召中，提到：“笛卡尔的茅厕吸引了许多无头苍蝇”。</li></ul><h2 id="号角已经吹响-dagger"><a href="#号角已经吹响-dagger" class="headerlink" title="号角已经吹响$^\dagger$"></a>号角已经吹响$^\dagger$</h2><ul><li>【释义】开始</li><li>【词源】同来源于”大司马杯“号召：“大司马杯的号角已经吹响”。</li></ul><h2 id="数学是思维的体操-dagger"><a href="#数学是思维的体操-dagger" class="headerlink" title="数学是思维的体操$^\dagger$"></a>数学是思维的体操$^\dagger$</h2><ul><li>【释义】数学可以锻炼人的思维，正如体操可以锻炼人的身体</li><li>【词源】来源于公众号“数学是思维的体操”。该公众号管理者是平几吧成员，曾请郭fj同学帮忙做平面几何题。后此公众号的名号经郭fj而在⑨班传播，因名字魔性遂成梗。<br>后面由于音近，有呕人变“体操”为“蕊尻”，更加发笑。</li><li>【变体】数学是思维的蕊尻</li></ul><h2 id="无头苍蝇-dagger"><a href="#无头苍蝇-dagger" class="headerlink" title="无头苍蝇$^\dagger$"></a>无头苍蝇$^\dagger$</h2><ul><li>【释义】做出无脑行为的人</li><li>【词源】同来源于在郭fj同学的纯几何杯赛”大司马杯“号召中，提到：“笛卡尔的茅厕吸引了许多无头苍蝇”。</li></ul><h1 id="5-模仿老师"><a href="#5-模仿老师" class="headerlink" title="5. 模仿老师"></a>5. 模仿老师</h1><h2 id="像像我和你讲-说"><a href="#像像我和你讲-说" class="headerlink" title="像像我和你讲&#x2F;说"></a>像像我和你讲&#x2F;说</h2><ul><li>【释义】发语词，用开玩笑语气表示通知或者规劝对方</li><li>【词源】吴jy老师说话有时有些口吃，她本身口头禅是“像我和你讲”，但应口吃就成了“像像我和你讲”</li></ul><h2 id="you-cross-the-line-dagger"><a href="#you-cross-the-line-dagger" class="headerlink" title="you cross the line$^\dagger$"></a>you cross the line$^\dagger$</h2><ul><li>【释义】你越界了</li><li>【词源】李p老师布置的一张flyer，一组使用高超PS技巧P出来了杰哥帮助同学买东西、解决住宿问题，最终被发现后被批越界</li></ul><h2 id="whip-dagger"><a href="#whip-dagger" class="headerlink" title="whip$^\dagger$"></a>whip$^\dagger$</h2><ul><li>【释义】鞭打</li><li>【词源】李p老师为了解释whip这个词的意思，在教室里展示whip 小f同学</li></ul><h1 id="6-其他"><a href="#6-其他" class="headerlink" title="6. 其他"></a>6. 其他</h1><h2 id="be-star"><a href="#be-star" class="headerlink" title="be$^\star$"></a>be$^\star$</h2><ul><li>【释义】上海话中的“be”发音的语气词，常与weisa连用，也可写作“beh”</li><li>【词源】高一时，钟zj同学在周日晚自修补先修课作业，在教室大喊一声：“be，什么是线性有关？”</li></ul><h2 id="dismiss-star"><a href="#dismiss-star" class="headerlink" title="dismiss$^\star$"></a>dismiss$^\star$</h2><ul><li>【释义】拒绝，抛弃，绝交，用于开玩笑语气</li><li>【例句】她已经被我dismiss</li></ul><h2 id="保守估计98分-dagger"><a href="#保守估计98分-dagger" class="headerlink" title="保守估计98分$^\dagger$"></a>保守估计98分$^\dagger$</h2><ul><li>【释义】表示自己在虚张声势</li><li>【词源】rui同学在某场历史考试结束之后大喊大叫：“保守估计98分”。</li><li>【变体】保守估计</li><li>【例句】今天保守估计基金能挣500</li></ul><h2 id="刺痛"><a href="#刺痛" class="headerlink" title="刺痛"></a>刺痛</h2><ul><li>【释义】表示一些事情使心情受到负面影响</li><li>【例句】比如说提起我的高数失败，就是一种刺痛。</li></ul><h2 id="“董”相关-dagger"><a href="#“董”相关-dagger" class="headerlink" title="“董”相关$^\dagger$"></a>“董”相关$^\dagger$</h2><ul><li>【释义】董jq老师衍生出来的一系列词语，例如“不董装董”、“董装不董”</li><li>【词源】高一时董jq老师神出鬼没。有时有人进班级或在后门窥视，让人疑心是董老师，因此称其“不董装董”，自此衍生出来一系列词语</li></ul><h2 id="胡椒-dagger"><a href="#胡椒-dagger" class="headerlink" title="胡椒$^\dagger$"></a>胡椒$^\dagger$</h2><ul><li>【释义】匿名的显得很牛的人</li><li>【词源】春考之后，英语大佬曹yw同学在英语群里以胡椒的匿名id问老师能不能不做英语作业了。</li></ul><h2 id="基里巴斯-dagger"><a href="#基里巴斯-dagger" class="headerlink" title="基里巴斯$^\dagger$"></a>基里巴斯$^\dagger$</h2><ul><li>【释义】时空错乱，倒时差</li><li>【词源】Cosmo同学在数学考前复习语文，语文考前复习数学，时空错乱，像是生活在横跨日界线的基里巴斯一样</li></ul><h2 id="看看你的-star"><a href="#看看你的-star" class="headerlink" title="看看你的$^\star$"></a>看看你的$^\star$</h2><ul><li>【释义】看看对方的情况</li><li>【例句】[发送了一张图片，是一个量表]看看你的！</li></ul><h2 id="口区-dagger"><a href="#口区-dagger" class="headerlink" title="口区$^\dagger$"></a>口区$^\dagger$</h2><ul><li>【释义】表示恶心</li><li>【词源】“呕”这个字拆开来，来源于孙m同学，rui同学最爱用，后来风靡开来了</li><li>【变体】呕（先有的“口区”，再有的“呕”）</li></ul><h2 id="蓝奶酪-dagger-ddagger"><a href="#蓝奶酪-dagger-ddagger" class="headerlink" title="蓝奶酪${^\dagger} {^\ddagger}$"></a>蓝奶酪${^\dagger} {^\ddagger}$</h2><ul><li>【释义】味道恶臭的物品。</li><li>【词源】来自高二地理课张yt发现所坐座位有恶臭，经沈ty研究恶臭来源为龚zr的自制酸奶，故用同为恶臭奶制品的蓝奶酪代指。</li></ul><h2 id="某巨-dagger"><a href="#某巨-dagger" class="headerlink" title="某巨$^\dagger$"></a>某巨$^\dagger$</h2><ul><li>【释义】对厉害的人的尊称</li><li>【例词】郭巨</li></ul><h2 id="谬误"><a href="#谬误" class="headerlink" title="谬误"></a>谬误</h2><ul><li>【释义】表示用轻松的语气对某人的批评，常与完全连用</li><li>【例句】我又发现了一些小谬误。</li></ul><h2 id="你好-star"><a href="#你好-star" class="headerlink" title="你好$^\star$"></a>你好$^\star$</h2><ul><li>【释义】表示接下来说的内容将以一种戏剧化或者夸张化的语气，常与“同学”、“请”连用</li><li>【例句】你好，请飞来北京看。</li></ul><h2 id="脑控"><a href="#脑控" class="headerlink" title="脑控"></a>脑控</h2><ul><li>【释义】嘲讽对方做了一些比较荒谬的事情</li><li>【词源】原出处已散逸，或许来源于廖凯原的《轩辕反熵运行体系》，或许来源于网上关于脑控的发笑阴谋论</li></ul><h2 id="脑死亡-star"><a href="#脑死亡-star" class="headerlink" title="脑死亡$^\star$"></a>脑死亡$^\star$</h2><ul><li>【释义】做了一些荒谬或者略微有点愚蠢、没有逻辑的事情，可以形容自己或者别人，贬义。常与热狗连用。</li><li>【词源】来源于《破道计划》（郭xj著）“所有人眼前一黑，全部倒下，他们的大脑承载了本不该承载的东西，全部陷入了脑死亡。”</li><li>【变体】nsw、脑死亡一次、nsw吧、脑死、眼前一黑，陷入脑死亡</li><li>【例句】我今天早上11:15起床已经nsw！</li></ul><h2 id="Odeur-dagger"><a href="#Odeur-dagger" class="headerlink" title="Odeur$^\dagger$"></a>Odeur$^\dagger$</h2><ul><li>【释义】匿名者</li><li>【词源】网课期间，沈ty同学以Odeur的化名出没于各个腾讯会议会议室</li></ul><h2 id="然而"><a href="#然而" class="headerlink" title="然而"></a>然而</h2><ul><li>【释义】表示转折</li><li>【例句】然而：我可悲。</li></ul><h2 id="热狗-star"><a href="#热狗-star" class="headerlink" title="热狗$^\star$"></a>热狗$^\star$</h2><ul><li>【释义】表示做事不太聪明又有点可爱发笑，可作为名词、形容词、副词、语气词使用</li><li>【词源】高一义卖高sm同学提议可以卖热狗，后虽热狗因卫生原因被否，但是高sm同学读“热狗”的口音流传了下来</li><li>【变体】热狗人，🌭，🌭吧，小热狗以及众多表情包的形式</li><li>【例句】这也是为什么有小热狗喜欢iPad mini。</li></ul><h2 id="请-star"><a href="#请-star" class="headerlink" title="请$^\star$"></a>请$^\star$</h2><ul><li>【释义】发语词，表示接下来说的内容将以一种戏剧化或者夸张化的语气，有时用来表达比较轻松语气的请教，常与同学、你好连用</li><li>【例句】请你加速！</li></ul><h2 id="事实上"><a href="#事实上" class="headerlink" title="事实上"></a>事实上</h2><ul><li>【释义】in fact，也不知为何常被拿来发语，语言非常欧化呐</li><li>【例句】事实上我后天早上说不定也要从交大出发。</li></ul><h2 id="同学-star"><a href="#同学-star" class="headerlink" title="同学$^\star$"></a>同学$^\star$</h2><ul><li>【释义】表示接下来说的内容将以一种戏剧化或者夸张化的语气，常与请、你好连用、注意</li><li>【例句】同学，你有些发笑。</li></ul><h2 id="tsosnymud-dagger"><a href="#tsosnymud-dagger" class="headerlink" title="tsosnymud$^\dagger$"></a>tsosnymud$^\dagger$</h2><ul><li>【释义】“操死你妈的”用外国人口音读出来</li><li>【词源】来源于章jh同学对“操你妈的”进行加强，并且用更顺口的语气说出来。</li></ul><h2 id="完全"><a href="#完全" class="headerlink" title="完全"></a>完全</h2><ul><li>【释义】表示夸张化的否定</li><li>【例句】完全错误！</li></ul><h2 id="显然-star"><a href="#显然-star" class="headerlink" title="显然$^\star$"></a>显然$^\star$</h2><ul><li>【释义】表示夸张化的语气</li><li>【例句】我显然追求最佳显示效果。</li></ul><h2 id="一次-star"><a href="#一次-star" class="headerlink" title="一次$^\star$"></a>一次$^\star$</h2><ul><li>【释义】用于自嘲，常与发笑、热狗连用</li><li>【例句】🌭一次</li></ul><h2 id="智慧"><a href="#智慧" class="headerlink" title="智慧"></a>智慧</h2><ul><li>【释义】常用于自夸，其否定形式常常表示轻松语气的批评</li><li>【例句】我是智慧的。</li><li>【例句】大不智慧！</li></ul><h2 id="中情局-dagger"><a href="#中情局-dagger" class="headerlink" title="中情局$^\dagger$"></a>中情局$^\dagger$</h2><ul><li>【释义】偷看英语默写答案</li><li>【词源】高一时钟zj同学作为英语课代表，是及时雨中的普罗米修斯，他从老师或者隔壁同学那里盗来答案，史称中情局。</li></ul><h2 id="注意-star"><a href="#注意-star" class="headerlink" title="注意$^\star$"></a>注意$^\star$</h2><ul><li>【释义】表示提醒对方说错话或者做事荒谬，常与“智力”连用</li><li>【例句】注意！到虹桥只需1h5min。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;h2 id=&quot;v1-0&quot;&gt;&lt;a href=&quot;#v1-0&quot; class=&quot;headerlink&quot; title=&quot;v1.0&quot;&gt;&lt;/a&gt;v1.0&lt;/h</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="校园/School" scheme="https://ryanstarfox.github.io/tags/%E6%A0%A1%E5%9B%AD-School/"/>
    
    <category term="高中/High School" scheme="https://ryanstarfox.github.io/tags/%E9%AB%98%E4%B8%AD-High-School/"/>
    
  </entry>
  
  <entry>
    <title>fxlego大典v1.0</title>
    <link href="https://ryanstarfox.github.io/2024/07/28/2024/20240728%20%E4%B8%8A%E4%B8%AD%E8%85%94%E8%AF%8D%E5%85%B8v1.0/"/>
    <id>https://ryanstarfox.github.io/2024/07/28/2024/20240728%20%E4%B8%8A%E4%B8%AD%E8%85%94%E8%AF%8D%E5%85%B8v1.0/</id>
    <published>2024-07-28T08:19:00.000Z</published>
    <updated>2024-07-28T08:19:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="fxlego大典v1-0"><a href="#fxlego大典v1-0" class="headerlink" title="fxlego大典v1.0"></a>fxlego大典v1.0</h1><p><strong>写这一份上中腔词典的原因是一时兴起。其实很难说我这里所说的“上中腔”的具体定义是什么。说是上中腔，但又主要是大师班的同学常用，但别的班也有一批同学会用。说是大师班的同学常用，但又主要是大师班的男生在用，女生们也会用其中的一些表述，但不多。为了简单起见，还是称其为上中腔好了。写这份东西写主要是图一乐，回顾一下以前的一些已经成为典故的趣事，不可当真。用上中腔的表述来说，这份东西其实非常🌭，ydfx。编写这份东西的时候，毛哥和Nababa同学给我提供了很多帮助，他们是我的第一批读者，帮助我扩充了一些词条，也回忆了有意思的故事，其中Nababa同学还帮我写了一些我不是很熟悉的词条。感谢zjh同学，在发布前夕又补充了大量词条。也感谢myj，sty同学，从他们那里我也了解到更多的一些我不熟悉的词条和它们的词源典故。以下的词条的例句来源于我与同学的聊天记录，感谢这些聊天记录！这些必然包含着我的片面性与局限性，欢迎扩充更多词条以及修订词条！</strong></p><p><strong>\dagger</strong>表示已经过时或者不常用的词条，<strong>\ddagger</strong>表示含义、出处有较强侮辱性的词条，<strong>\star</strong>表示常用词条</p><h1 id="拼音缩写对照表"><a href="#拼音缩写对照表" class="headerlink" title="拼音缩写对照表"></a>拼音缩写对照表</h1><table><thead><tr><th><strong>缩写</strong></th><th><strong>中文</strong></th><th><strong>变体</strong></th></tr></thead><tbody><tr><td><strong>buc</strong></td><td><strong>不错</strong></td><td><strong>bc（不错）</strong></td></tr><tr><td><strong>bd</strong></td><td><strong>不懂</strong></td><td></td></tr><tr><td><strong>bzd</strong></td><td><strong>不知道</strong></td><td></td></tr><tr><td><strong>ee</strong></td><td><strong>呃呃</strong></td><td></td></tr><tr><td><strong>fx</strong></td><td><strong>发笑</strong></td><td><strong>fxfx（发笑发笑）</strong> <strong>ydfx（有点发笑）</strong></td></tr><tr><td><strong>hb</strong></td><td><strong>好吧</strong></td><td></td></tr><tr><td><strong>hd</strong></td><td><strong>好的</strong></td><td><strong>hod（吼的（好的的变体））</strong></td></tr><tr><td><strong>hyys</strong></td><td><strong>很有意思</strong></td><td></td></tr><tr><td><strong>ii</strong></td><td><strong>哎哎</strong></td><td></td></tr><tr><td><strong>jwyj</strong></td><td><strong>经我研究</strong></td><td></td></tr><tr><td><strong>juj</strong></td><td><strong>拒绝</strong></td><td></td></tr><tr><td><strong>kb</strong></td><td><strong>可悲</strong></td><td><strong>kbkb（可悲可悲）</strong> <strong>ydkb（有点可悲）</strong></td></tr><tr><td><strong>kknd</strong></td><td><strong>看看你的</strong></td><td></td></tr><tr><td><strong>kyd</strong></td><td><strong>可以的</strong></td><td></td></tr><tr><td><strong>kyx</strong></td><td><strong>看一下</strong></td><td></td></tr><tr><td><strong>nsw</strong></td><td><strong>脑死亡</strong></td><td></td></tr><tr><td><strong>nk</strong></td><td><strong>脑控&#x2F;南京</strong></td><td></td></tr><tr><td><strong>nkr</strong></td><td><strong>脑控人</strong></td><td></td></tr><tr><td><strong>mxd</strong></td><td><strong>没想到</strong></td><td></td></tr><tr><td><strong>qnjs</strong></td><td><strong>请你介绍</strong></td><td></td></tr><tr><td><strong>sd</strong></td><td><strong>是的</strong></td><td><strong>bsd（不是的）</strong></td></tr><tr><td><strong>szyd</strong></td><td><strong>是这样的</strong></td><td></td></tr><tr><td><strong>tina</strong></td><td><strong>天哪</strong></td><td><strong>tn（天哪）</strong></td></tr><tr><td><strong>ylrc</strong></td><td><strong>原来如此</strong></td><td></td></tr><tr><td><strong>xm</strong></td><td><strong>羡慕</strong></td><td></td></tr><tr><td><strong>zssm</strong></td><td><strong>这是什么</strong></td><td></td></tr></tbody></table><h1 id="2-假文言"><a href="#2-假文言" class="headerlink" title="2. 假文言"></a>2. 假文言</h1><h2 id="人称代词-母"><a href="#人称代词-母" class="headerlink" title="人称代词+母"></a>人称代词+母</h2><ul><li><strong>【释义】xx的母亲</strong></li><li><strong>【变体】你母，我母</strong></li><li><strong>【例句】好吧，你母今年贵庚？</strong></li></ul><h2 id="表示程度的词-佳-star"><a href="#表示程度的词-佳-star" class="headerlink" title="表示程度的词+佳**^\star**"></a>表示程度的词+佳**^\star**</h2><ul><li><strong>【释义】表示对事物的评判，一般不用好、坏，而是用“佳”</strong></li><li><strong>【变体】不佳、极佳、最佳、较佳</strong></li><li><strong>【例句】哎呀，外面天气确不佳。</strong></li></ul><h2 id="何处"><a href="#何处" class="headerlink" title="何处"></a>何处</h2><ul><li><strong>【释义】在哪里</strong></li><li><strong>【例句】届时具体何处会面，可再研。</strong></li></ul><h2 id="亦-star"><a href="#亦-star" class="headerlink" title="亦**^\star**"></a>亦**^\star**</h2><ul><li><strong>【释义】也</strong></li><li><strong>【例句】但他们亦用苹果。</strong></li></ul><h2 id="可-不可-star"><a href="#可-不可-star" class="headerlink" title="可&#x2F;不可**^\star**"></a>可&#x2F;不可**^\star**</h2><ul><li><strong>【释义】可以</strong></li><li><strong>【例句】kb，如果有体育，则不可。</strong></li></ul><h1 id="3-大词小用"><a href="#3-大词小用" class="headerlink" title="3. 大词小用"></a>3. 大词小用</h1><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ul><li><strong>【释义】筹划，准备，实施</strong></li><li><strong>【例句】哦，明早你起床后部署一下收款。</strong></li><li><strong>【例句】且室友今天还在部署去日本玩的机票。</strong></li></ul><h2 id="会面-star"><a href="#会面-star" class="headerlink" title="会面**^\star**"></a>会面**^\star**</h2><ul><li><strong>【释义】见面，碰头</strong></li><li><strong>【例句】届时具体何处会面，可再研。</strong></li></ul><h2 id="昏聩"><a href="#昏聩" class="headerlink" title="昏聩"></a>昏聩</h2><ul><li><strong>【释义】昏了头，做出一些荒谬或者愚蠢的事情</strong></li><li><strong>【例句】早上淑芬很昏聩。</strong></li></ul><h2 id="拒绝-star"><a href="#拒绝-star" class="headerlink" title="拒绝**^\star**"></a>拒绝**^\star**</h2><ul><li><strong>【释义】语气词，表示拒绝，但是语气不正式，有点委婉地表示拒绝，常与微信[抱拳]表情包连用</strong></li><li><strong>【例句】拒绝到国权路。</strong></li></ul><h2 id="通过-star"><a href="#通过-star" class="headerlink" title="通过**^\star**"></a>通过**^\star**</h2><ul><li><strong>【释义】表示赞同</strong></li><li><strong>【近义词】支持</strong></li><li><strong>【例句】可以可以，通过，接受了。</strong></li></ul><h2 id="污名化"><a href="#污名化" class="headerlink" title="污名化"></a>污名化</h2><ul><li><strong>【释义】表示不承认对方对自己的批评，常与拒绝、禁止连用，有时也用于承认自己的批评不妥当</strong></li><li><strong>【词源】中国外交部常用语</strong></li><li><strong>【例句】hd你说的对，污名化一次。</strong></li></ul><h2 id="研究-star"><a href="#研究-star" class="headerlink" title="研究**^\star**"></a>研究**^\star**</h2><ul><li><strong>【释义】了解一下</strong></li><li><strong>【变体】研究一下，经我研究</strong></li><li><strong>【例句】所以研究你有无入坑想法。</strong></li></ul><h2 id="支持-star"><a href="#支持-star" class="headerlink" title="支持**^\star**"></a>支持**^\star**</h2><ul><li><strong>【释义】表示赞同</strong></li><li><strong>【近义词】通过</strong></li><li><strong>【例句】狠狠支持了。</strong></li></ul><h2 id="4-数学相关"><a href="#4-数学相关" class="headerlink" title="4. 数学相关"></a>4. 数学相关</h2><h2 id="笛卡尔的茅厕-dagger"><a href="#笛卡尔的茅厕-dagger" class="headerlink" title="笛卡尔的茅厕**^\dagger**"></a>笛卡尔的茅厕**^\dagger**</h2><ul><li><strong>【释义】解析几何</strong></li><li><strong>【词源】笛卡尔为解析几何的创立者。在郭fj同学的纯几何杯赛”大司马杯“号召中，提到：“笛卡尔的茅厕吸引了许多无头苍蝇”。</strong></li></ul><h2 id="号角已经吹响-dagger"><a href="#号角已经吹响-dagger" class="headerlink" title="号角已经吹响**^\dagger**"></a>号角已经吹响**^\dagger**</h2><ul><li><strong>【释义】开始</strong></li><li><strong>【词源】同来源于”大司马杯“号召：“大司马杯的号角已经吹响”。</strong></li></ul><h2 id="无头苍蝇-dagger"><a href="#无头苍蝇-dagger" class="headerlink" title="无头苍蝇**^\dagger**"></a>无头苍蝇**^\dagger**</h2><ul><li><strong>【释义】做出无脑行为的人</strong></li><li><strong>【词源】同来源于在郭fj同学的纯几何杯赛”大司马杯“号召中，提到：“笛卡尔的茅厕吸引了许多无头苍蝇”。</strong></li></ul><h1 id="5-模仿老师"><a href="#5-模仿老师" class="headerlink" title="5. 模仿老师"></a>5. 模仿老师</h1><h2 id="像像我和你讲-说"><a href="#像像我和你讲-说" class="headerlink" title="像像我和你讲&#x2F;说"></a>像像我和你讲&#x2F;说</h2><ul><li><strong>【释义】发语词，用开玩笑语气表示通知或者规劝对方</strong></li><li><strong>【词源】吴jy老师说话有时有些口吃，她本身口头禅是“像我和你讲”，但应口吃就成了“像像我和你讲”</strong></li></ul><h2 id="you-cross-the-line-dagger"><a href="#you-cross-the-line-dagger" class="headerlink" title="you cross the line**^\dagger**"></a>you cross the line**^\dagger**</h2><ul><li><strong>【释义】你越界了</strong></li><li><strong>【词源】李p老师布置的一张flyer，一组使用高超PS技巧P出来了杰哥帮助同学买东西、解决住宿问题，最终被发现后被批越界</strong></li></ul><h2 id="whip-dagger"><a href="#whip-dagger" class="headerlink" title="whip**^\dagger**"></a>whip**^\dagger**</h2><ul><li><strong>【释义】鞭打</strong></li><li><strong>【词源】李p老师为了解释whip这个词的意思，在教室里展示whip 小f同学</strong></li></ul><h1 id="6-其他"><a href="#6-其他" class="headerlink" title="6. 其他"></a>6. 其他</h1><h2 id="be-star"><a href="#be-star" class="headerlink" title="be**^\star**"></a>be**^\star**</h2><ul><li><strong>【释义】上海话中的“be”发音的语气词，常与weisa连用，也可写作“beh”</strong></li><li><strong>【词源】高一时，钟zj同学在周日晚自修补先修课作业，在教室大喊一声：“be，什么是线性有关？”</strong></li></ul><h2 id="保守估计98分-dagger"><a href="#保守估计98分-dagger" class="headerlink" title="保守估计98分**^\dagger**"></a>保守估计98分**^\dagger**</h2><ul><li><strong>【释义】表示自己在虚张声势</strong></li><li><strong>【词源】rui同学在某场物理考试结束之后大喊大叫：“保守估计98分”。</strong></li></ul><h2 id="刺痛"><a href="#刺痛" class="headerlink" title="刺痛"></a>刺痛</h2><ul><li><strong>【释义】表示一些事情使心情受到负面影响</strong></li><li><strong>【例句】比如说提起我的高数失败，就是一种刺痛。</strong></li></ul><h2 id="tsosnymud-dagger"><a href="#tsosnymud-dagger" class="headerlink" title="tsosnymud**^\dagger**"></a>tsosnymud**^\dagger**</h2><ul><li><strong>【释义】“操死你妈的”用外国人口音读出来</strong></li><li><strong>【词源】来源于章jh同学对“操你妈的”进行加强，并且用更顺口的语气说出来。</strong></li></ul><h2 id="“董”相关-dagger"><a href="#“董”相关-dagger" class="headerlink" title="“董”相关**^\dagger**"></a>“董”相关**^\dagger**</h2><ul><li><strong>【释义】董jq老师衍生出来的一系列词语，例如“不董装董”、“董装不董”</strong></li><li><strong>【词源】高一时董jq老师神出鬼没。有时有人进班级或在后门窥视，让人疑心是董老师，因此称其“不董装董”，自此衍生出来一系列词语</strong></li></ul><h2 id="胡椒-dagger"><a href="#胡椒-dagger" class="headerlink" title="胡椒**^\dagger**"></a>胡椒**^\dagger**</h2><ul><li><strong>【释义】匿名的显得很牛的人</strong></li><li><strong>【词源】春考之后，英语大佬曹yw同学在英语群里以胡椒的匿名id问老师能不能不做英语作业了。</strong></li></ul><h2 id="基里巴斯-dagger"><a href="#基里巴斯-dagger" class="headerlink" title="基里巴斯**^\dagger**"></a>基里巴斯**^\dagger**</h2><ul><li><strong>【释义】时空错乱，倒时差</strong></li><li><strong>【词源】Cosmo同学在数学考前复习语文，语文考前复习数学，时空错乱，像是生活在横跨日界线的基里巴斯一样</strong></li></ul><h2 id="看看你的-star"><a href="#看看你的-star" class="headerlink" title="看看你的**^\star**"></a>看看你的**^\star**</h2><ul><li><strong>【释义】看看对方的情况</strong></li><li><strong>【例句】[发送了一张图片，是一个量表]看看你的！</strong></li></ul><h2 id="口区-dagger"><a href="#口区-dagger" class="headerlink" title="口区**^\dagger**"></a>口区**^\dagger**</h2><ul><li><strong>【释义】表示恶心</strong></li><li><strong>【词源】“呕”这个字拆开来，来源于孙m同学，rui同学最爱用，后来风靡开来了</strong></li><li><strong>【变体】呕（先有的“口区”，再有的“呕”）</strong></li></ul><h2 id="蓝奶酪"><a href="#蓝奶酪" class="headerlink" title="蓝奶酪****"></a>蓝奶酪****</h2><ul><li><strong>【释义】味道恶臭的物品。</strong></li><li><strong>【词源】来自高二地理课张yt发现所坐座位有恶臭，经沈ty研究恶臭来源为龚zr的自制酸奶，故用同为恶臭奶制品的蓝奶酪代指。</strong></li></ul><h2 id="某巨-dagger"><a href="#某巨-dagger" class="headerlink" title="某巨**^\dagger**"></a>某巨**^\dagger**</h2><ul><li><strong>【释义】对厉害的人的尊称</strong></li><li><strong>【例词】郭巨</strong></li></ul><h2 id="谬误"><a href="#谬误" class="headerlink" title="谬误"></a>谬误</h2><ul><li><strong>【释义】表示用轻松的语气对某人的批评，常与完全连用</strong></li><li><strong>【例句】我又发现了一些小谬误。</strong></li></ul><h2 id="你好"><a href="#你好" class="headerlink" title="你好"></a>你好</h2><ul><li><strong>【释义】表示接下来说的内容将以一种戏剧化或者夸张化的语气，常与“同学”、“请”连用</strong></li><li><strong>【例句】你好，请飞来北京看。</strong></li></ul><h2 id="脑控"><a href="#脑控" class="headerlink" title="脑控"></a>脑控</h2><ul><li><strong>【释义】嘲讽对方做了一些比较荒谬的事情</strong></li><li><strong>【词源】原出处已散逸，或许来源于廖凯原的《轩辕反熵运行体系》，或许来源于网上关于脑控的发笑阴谋论</strong></li></ul><h2 id="脑死亡-star"><a href="#脑死亡-star" class="headerlink" title="脑死亡**^\star**"></a>脑死亡**^\star**</h2><ul><li><strong>【释义】做了一些荒谬或者略微有点愚蠢、没有逻辑的事情，可以形容自己或者别人，贬义。常与热狗连用。</strong></li><li><strong>【词源】来源于《破道计划》（郭xj著）“所有人眼前一黑，全部倒下，他们的大脑承载了本不该承载的东西，全部陷入了脑死亡。”</strong></li><li><strong>【变体】nsw、脑死亡一次、nsw吧、脑死、眼前一黑，陷入脑死亡</strong></li><li><strong>【例句】我今天早上11:15起床已经nsw！</strong></li></ul><h2 id="Odeur-dagger"><a href="#Odeur-dagger" class="headerlink" title="Odeur**^\dagger**"></a>Odeur**^\dagger**</h2><ul><li><strong>【释义】匿名者</strong></li><li><strong>【词源】网课期间，沈ty同学以Odeur的化名出没于各个腾讯会议会议室</strong></li></ul><h2 id="然而"><a href="#然而" class="headerlink" title="然而"></a>然而</h2><ul><li><strong>【释义】表示转折</strong></li><li><strong>【例句】然而：我可悲。</strong></li></ul><h2 id="热狗-star"><a href="#热狗-star" class="headerlink" title="热狗**^\star**"></a>热狗**^\star**</h2><ul><li><strong>【释义】表示做事不太聪明又有点可爱发笑，可作为名词、形容词、副词、语气词使用</strong></li><li><strong>【词源】高一义卖高sm同学提议可以卖热狗，后虽热狗因卫生原因被否，但是高sm同学读“热狗”的口音流传了下来</strong></li><li><strong>【变体】热狗人，🌭，🌭吧，小热狗以及众多表情包的形式</strong></li><li><strong>【例句】这也是为什么有小热狗喜欢iPad mini。</strong></li></ul><h2 id="请"><a href="#请" class="headerlink" title="请"></a>请</h2><ul><li><strong>【释义】发语词，表示接下来说的内容将以一种戏剧化或者夸张化的语气，有时用来表达比较轻松语气的请教，常与同学、你好连用</strong></li><li><strong>【例句】请你加速！</strong></li></ul><h2 id="事实上"><a href="#事实上" class="headerlink" title="事实上"></a>事实上</h2><ul><li><strong>【释义】in fact，也不知为何常被拿来发语，语言非常欧化呐</strong></li><li><strong>【例句】事实上我后天早上说不定也要从交大出发。</strong></li></ul><h2 id="同学"><a href="#同学" class="headerlink" title="同学"></a>同学</h2><ul><li><strong>【释义】表示接下来说的内容将以一种戏剧化或者夸张化的语气，常与请、你好连用、注意</strong></li><li><strong>【例句】同学，你有些发笑。</strong></li></ul><h2 id="完全"><a href="#完全" class="headerlink" title="完全"></a>完全</h2><ul><li><strong>【释义】表示夸张化的否定</strong></li><li><strong>【例句】完全错误！</strong></li></ul><h2 id="显然"><a href="#显然" class="headerlink" title="显然"></a>显然</h2><ul><li><strong>【释义】表示夸张化的语气</strong></li><li><strong>【例句】我显然追求最佳显示效果。</strong></li></ul><h2 id="一次"><a href="#一次" class="headerlink" title="一次"></a>一次</h2><ul><li><strong>【释义】用于自嘲，常与发笑、热狗连用</strong></li><li><strong>【例句】🌭一次</strong></li></ul><h2 id="智慧"><a href="#智慧" class="headerlink" title="智慧"></a>智慧</h2><ul><li><strong>【释义】常用于自夸，其否定形式常常表示轻松语气的批评</strong></li><li><strong>【例句】我是智慧的。</strong></li><li><strong>【例句】大不智慧！</strong></li></ul><p><strong>## <strong>中情局</strong>^\dagger</strong></p><ul><li><strong>【释义】偷看英语默写答案</strong></li><li><strong>【词源】高一时钟zj同学作为英语课代表，是及时雨中的普罗米修斯，他从老师或者隔壁同学那里盗来答案，史称中情局。</strong></li></ul><h2 id="注意-star"><a href="#注意-star" class="headerlink" title="注意**^\star**"></a>注意**^\star**</h2><ul><li><strong>【释义】表示提醒对方说错话或者做事荒谬，常与“智力”连用</strong></li><li><strong>【例句】注意！到虹桥只需1h5min。</strong></li></ul><p><strong>写这一份上中腔词典的原因是一时兴起。其实很难说我这里所说的“上中腔”的具体定义是什么。说是上中腔，但又主要是大师班的同学常用，但别的班也有一批同学会用。说是大师班的同学常用，但又主要是大师班的男生在用，女生们也会用其中的一些表述，但不多。为了简单起见，还是称其为上中腔好了。写这份东西写主要是图一乐，回顾一下以前的一些已经成为典故的趣事，不可当真。用上中腔的表述来说，这份东西其实非常🌭，ydfx。编写这份东西的时候，毛哥和Nababa同学给我提供了很多帮助，他们是我的第一批读者，帮助我扩充了一些词条，也回忆了有意思的故事，其中Nababa同学还帮我写了一些我不是很熟悉的词条。感谢zjh同学，在发布前夕又补充了大量词条。也感谢myj，sty同学，从他们那里我也了解到更多的一些我不熟悉的词条和它们的词源典故。以下的词条的例句来源于我与同学的聊天记录，感谢这些聊天记录！这些必然包含着我的片面性与局限性，欢迎扩充更多词条以及修订词条！</strong></p><p><strong>\dagger</strong>表示已经过时或者不常用的词条，<strong>\ddagger</strong>表示含义、出处有较强侮辱性的词条，<strong>\star</strong>表示常用词条</p><h1 id="拼音缩写对照表-1"><a href="#拼音缩写对照表-1" class="headerlink" title="拼音缩写对照表"></a>拼音缩写对照表</h1><table><thead><tr><th><strong>缩写</strong></th><th><strong>中文</strong></th><th><strong>变体</strong></th></tr></thead><tbody><tr><td><strong>buc</strong></td><td><strong>不错</strong></td><td><strong>bc（不错）</strong></td></tr><tr><td><strong>bd</strong></td><td><strong>不懂</strong></td><td></td></tr><tr><td><strong>bzd</strong></td><td><strong>不知道</strong></td><td></td></tr><tr><td><strong>ee</strong></td><td><strong>呃呃</strong></td><td></td></tr><tr><td><strong>fx</strong></td><td><strong>发笑</strong></td><td><strong>fxfx（发笑发笑）</strong> <strong>ydfx（有点发笑）</strong></td></tr><tr><td><strong>hb</strong></td><td><strong>好吧</strong></td><td></td></tr><tr><td><strong>hd</strong></td><td><strong>好的</strong></td><td><strong>hod（吼的（好的的变体））</strong></td></tr><tr><td><strong>hyys</strong></td><td><strong>很有意思</strong></td><td></td></tr><tr><td><strong>ii</strong></td><td><strong>哎哎</strong></td><td></td></tr><tr><td><strong>jwyj</strong></td><td><strong>经我研究</strong></td><td></td></tr><tr><td><strong>juj</strong></td><td><strong>拒绝</strong></td><td></td></tr><tr><td><strong>kb</strong></td><td><strong>可悲</strong></td><td><strong>kbkb（可悲可悲）</strong> <strong>ydkb（有点可悲）</strong></td></tr><tr><td><strong>kknd</strong></td><td><strong>看看你的</strong></td><td></td></tr><tr><td><strong>kyd</strong></td><td><strong>可以的</strong></td><td></td></tr><tr><td><strong>kyx</strong></td><td><strong>看一下</strong></td><td></td></tr><tr><td><strong>nsw</strong></td><td><strong>脑死亡</strong></td><td></td></tr><tr><td><strong>nk</strong></td><td><strong>脑控&#x2F;南京</strong></td><td></td></tr><tr><td><strong>nkr</strong></td><td><strong>脑控人</strong></td><td></td></tr><tr><td><strong>mxd</strong></td><td><strong>没想到</strong></td><td></td></tr><tr><td><strong>qnjs</strong></td><td><strong>请你介绍</strong></td><td></td></tr><tr><td><strong>sd</strong></td><td><strong>是的</strong></td><td><strong>bsd（不是的）</strong></td></tr><tr><td><strong>szyd</strong></td><td><strong>是这样的</strong></td><td></td></tr><tr><td><strong>tina</strong></td><td><strong>天哪</strong></td><td><strong>tn（天哪）</strong></td></tr><tr><td><strong>ylrc</strong></td><td><strong>原来如此</strong></td><td></td></tr><tr><td><strong>xm</strong></td><td><strong>羡慕</strong></td><td></td></tr><tr><td><strong>zssm</strong></td><td><strong>这是什么</strong></td><td></td></tr></tbody></table><h1 id="2-假文言-1"><a href="#2-假文言-1" class="headerlink" title="2. 假文言"></a>2. 假文言</h1><h2 id="人称代词-母-1"><a href="#人称代词-母-1" class="headerlink" title="人称代词+母"></a>人称代词+母</h2><ul><li><strong>【释义】xx的母亲</strong></li><li><strong>【变体】你母，我母</strong></li><li><strong>【例句】好吧，你母今年贵庚？</strong></li></ul><h2 id="表示程度的词-佳-star-1"><a href="#表示程度的词-佳-star-1" class="headerlink" title="表示程度的词+佳**^\star**"></a>表示程度的词+佳**^\star**</h2><ul><li><strong>【释义】表示对事物的评判，一般不用好、坏，而是用“佳”</strong></li><li><strong>【变体】不佳、极佳、最佳、较佳</strong></li><li><strong>【例句】哎呀，外面天气确不佳。</strong></li></ul><h2 id="何处-1"><a href="#何处-1" class="headerlink" title="何处"></a>何处</h2><ul><li><strong>【释义】在哪里</strong></li><li><strong>【例句】届时具体何处会面，可再研。</strong></li></ul><h2 id="亦-star-1"><a href="#亦-star-1" class="headerlink" title="亦**^\star**"></a>亦**^\star**</h2><ul><li><strong>【释义】也</strong></li><li><strong>【例句】但他们亦用苹果。</strong></li></ul><h2 id="可-不可-star-1"><a href="#可-不可-star-1" class="headerlink" title="可&#x2F;不可**^\star**"></a>可&#x2F;不可**^\star**</h2><ul><li><strong>【释义】可以</strong></li><li><strong>【例句】kb，如果有体育，则不可。</strong></li></ul><h1 id="3-大词小用-1"><a href="#3-大词小用-1" class="headerlink" title="3. 大词小用"></a>3. 大词小用</h1><h2 id="部署-1"><a href="#部署-1" class="headerlink" title="部署"></a>部署</h2><ul><li><strong>【释义】筹划，准备，实施</strong></li><li><strong>【例句】哦，明早你起床后部署一下收款。</strong></li><li><strong>【例句】且室友今天还在部署去日本玩的机票。</strong></li></ul><h2 id="会面-star-1"><a href="#会面-star-1" class="headerlink" title="会面**^\star**"></a>会面**^\star**</h2><ul><li><strong>【释义】见面，碰头</strong></li><li><strong>【例句】届时具体何处会面，可再研。</strong></li></ul><h2 id="昏聩-1"><a href="#昏聩-1" class="headerlink" title="昏聩"></a>昏聩</h2><ul><li><strong>【释义】昏了头，做出一些荒谬或者愚蠢的事情</strong></li><li><strong>【例句】早上淑芬很昏聩。</strong></li></ul><h2 id="拒绝-star-1"><a href="#拒绝-star-1" class="headerlink" title="拒绝**^\star**"></a>拒绝**^\star**</h2><ul><li><strong>【释义】语气词，表示拒绝，但是语气不正式，有点委婉地表示拒绝，常与微信[抱拳]表情包连用</strong></li><li><strong>【例句】拒绝到国权路。</strong></li></ul><h2 id="通过-star-1"><a href="#通过-star-1" class="headerlink" title="通过**^\star**"></a>通过**^\star**</h2><ul><li><strong>【释义】表示赞同</strong></li><li><strong>【近义词】支持</strong></li><li><strong>【例句】可以可以，通过，接受了。</strong></li></ul><h2 id="污名化-1"><a href="#污名化-1" class="headerlink" title="污名化"></a>污名化</h2><ul><li><strong>【释义】表示不承认对方对自己的批评，常与拒绝、禁止连用，有时也用于承认自己的批评不妥当</strong></li><li><strong>【词源】中国外交部常用语</strong></li><li><strong>【例句】hd你说的对，污名化一次。</strong></li></ul><h2 id="研究-star-1"><a href="#研究-star-1" class="headerlink" title="研究**^\star**"></a>研究**^\star**</h2><ul><li><strong>【释义】了解一下</strong></li><li><strong>【变体】研究一下，经我研究</strong></li><li><strong>【例句】所以研究你有无入坑想法。</strong></li></ul><h2 id="支持-star-1"><a href="#支持-star-1" class="headerlink" title="支持**^\star**"></a>支持**^\star**</h2><ul><li><strong>【释义】表示赞同</strong></li><li><strong>【近义词】通过</strong></li><li><strong>【例句】狠狠支持了。</strong></li></ul><h2 id="4-数学相关-1"><a href="#4-数学相关-1" class="headerlink" title="4. 数学相关"></a>4. 数学相关</h2><h2 id="笛卡尔的茅厕-dagger-1"><a href="#笛卡尔的茅厕-dagger-1" class="headerlink" title="笛卡尔的茅厕**^\dagger**"></a>笛卡尔的茅厕**^\dagger**</h2><ul><li><strong>【释义】解析几何</strong></li><li><strong>【词源】笛卡尔为解析几何的创立者。在郭fj同学的纯几何杯赛”大司马杯“号召中，提到：“笛卡尔的茅厕吸引了许多无头苍蝇”。</strong></li></ul><h2 id="号角已经吹响-dagger-1"><a href="#号角已经吹响-dagger-1" class="headerlink" title="号角已经吹响**^\dagger**"></a>号角已经吹响**^\dagger**</h2><ul><li><strong>【释义】开始</strong></li><li><strong>【词源】同来源于”大司马杯“号召：“大司马杯的号角已经吹响”。</strong></li></ul><h2 id="无头苍蝇-dagger-1"><a href="#无头苍蝇-dagger-1" class="headerlink" title="无头苍蝇**^\dagger**"></a>无头苍蝇**^\dagger**</h2><ul><li><strong>【释义】做出无脑行为的人</strong></li><li><strong>【词源】同来源于在郭fj同学的纯几何杯赛”大司马杯“号召中，提到：“笛卡尔的茅厕吸引了许多无头苍蝇”。</strong></li></ul><h1 id="5-模仿老师-1"><a href="#5-模仿老师-1" class="headerlink" title="5. 模仿老师"></a>5. 模仿老师</h1><h2 id="像像我和你讲-说-1"><a href="#像像我和你讲-说-1" class="headerlink" title="像像我和你讲&#x2F;说"></a>像像我和你讲&#x2F;说</h2><ul><li><strong>【释义】发语词，用开玩笑语气表示通知或者规劝对方</strong></li><li><strong>【词源】吴jy老师说话有时有些口吃，她本身口头禅是“像我和你讲”，但应口吃就成了“像像我和你讲”</strong></li></ul><h2 id="you-cross-the-line-dagger-1"><a href="#you-cross-the-line-dagger-1" class="headerlink" title="you cross the line**^\dagger**"></a>you cross the line**^\dagger**</h2><ul><li><strong>【释义】你越界了</strong></li><li><strong>【词源】李p老师布置的一张flyer，一组使用高超PS技巧P出来了杰哥帮助同学买东西、解决住宿问题，最终被发现后被批越界</strong></li></ul><h2 id="whip-dagger-1"><a href="#whip-dagger-1" class="headerlink" title="whip**^\dagger**"></a>whip**^\dagger**</h2><ul><li><strong>【释义】鞭打</strong></li><li><strong>【词源】李p老师为了解释whip这个词的意思，在教室里展示whip 小f同学</strong></li></ul><h1 id="6-其他-1"><a href="#6-其他-1" class="headerlink" title="6. 其他"></a>6. 其他</h1><h2 id="be-star-1"><a href="#be-star-1" class="headerlink" title="be**^\star**"></a>be**^\star**</h2><ul><li><strong>【释义】上海话中的“be”发音的语气词，常与weisa连用，也可写作“beh”</strong></li><li><strong>【词源】高一时，钟zj同学在周日晚自修补先修课作业，在教室大喊一声：“be，什么是线性有关？”</strong></li></ul><h2 id="保守估计98分-dagger-1"><a href="#保守估计98分-dagger-1" class="headerlink" title="保守估计98分**^\dagger**"></a>保守估计98分**^\dagger**</h2><ul><li><strong>【释义】表示自己在虚张声势</strong></li><li><strong>【词源】rui同学在某场物理考试结束之后大喊大叫：“保守估计98分”。</strong></li></ul><h2 id="刺痛-1"><a href="#刺痛-1" class="headerlink" title="刺痛"></a>刺痛</h2><ul><li><strong>【释义】表示一些事情使心情受到负面影响</strong></li><li><strong>【例句】比如说提起我的高数失败，就是一种刺痛。</strong></li></ul><h2 id="tsosnymud-dagger-1"><a href="#tsosnymud-dagger-1" class="headerlink" title="tsosnymud**^\dagger**"></a>tsosnymud**^\dagger**</h2><ul><li><strong>【释义】“操死你妈的”用外国人口音读出来</strong></li><li><strong>【词源】来源于章jh同学对“操你妈的”进行加强，并且用更顺口的语气说出来。</strong></li></ul><h2 id="“董”相关-dagger-1"><a href="#“董”相关-dagger-1" class="headerlink" title="“董”相关**^\dagger**"></a>“董”相关**^\dagger**</h2><ul><li><strong>【释义】董jq老师衍生出来的一系列词语，例如“不董装董”、“董装不董”</strong></li><li><strong>【词源】高一时董jq老师神出鬼没。有时有人进班级或在后门窥视，让人疑心是董老师，因此称其“不董装董”，自此衍生出来一系列词语</strong></li></ul><h2 id="胡椒-dagger-1"><a href="#胡椒-dagger-1" class="headerlink" title="胡椒**^\dagger**"></a>胡椒**^\dagger**</h2><ul><li><strong>【释义】匿名的显得很牛的人</strong></li><li><strong>【词源】春考之后，英语大佬曹yw同学在英语群里以胡椒的匿名id问老师能不能不做英语作业了。</strong></li></ul><h2 id="基里巴斯-dagger-1"><a href="#基里巴斯-dagger-1" class="headerlink" title="基里巴斯**^\dagger**"></a>基里巴斯**^\dagger**</h2><ul><li><strong>【释义】时空错乱，倒时差</strong></li><li><strong>【词源】Cosmo同学在数学考前复习语文，语文考前复习数学，时空错乱，像是生活在横跨日界线的基里巴斯一样</strong></li></ul><h2 id="看看你的-star-1"><a href="#看看你的-star-1" class="headerlink" title="看看你的**^\star**"></a>看看你的**^\star**</h2><ul><li><strong>【释义】看看对方的情况</strong></li><li><strong>【例句】[发送了一张图片，是一个量表]看看你的！</strong></li></ul><h2 id="口区-dagger-1"><a href="#口区-dagger-1" class="headerlink" title="口区**^\dagger**"></a>口区**^\dagger**</h2><ul><li><strong>【释义】表示恶心</strong></li><li><strong>【词源】“呕”这个字拆开来，来源于孙m同学，rui同学最爱用，后来风靡开来了</strong></li><li><strong>【变体】呕（先有的“口区”，再有的“呕”）</strong></li></ul><h2 id="蓝奶酪-1"><a href="#蓝奶酪-1" class="headerlink" title="蓝奶酪****"></a>蓝奶酪****</h2><ul><li><strong>【释义】味道恶臭的物品。</strong></li><li><strong>【词源】来自高二地理课张yt发现所坐座位有恶臭，经沈ty研究恶臭来源为龚zr的自制酸奶，故用同为恶臭奶制品的蓝奶酪代指。</strong></li></ul><h2 id="某巨-dagger-1"><a href="#某巨-dagger-1" class="headerlink" title="某巨**^\dagger**"></a>某巨**^\dagger**</h2><ul><li><strong>【释义】对厉害的人的尊称</strong></li><li><strong>【例词】郭巨</strong></li></ul><h2 id="谬误-1"><a href="#谬误-1" class="headerlink" title="谬误"></a>谬误</h2><ul><li><strong>【释义】表示用轻松的语气对某人的批评，常与完全连用</strong></li><li><strong>【例句】我又发现了一些小谬误。</strong></li></ul><h2 id="你好-1"><a href="#你好-1" class="headerlink" title="你好"></a>你好</h2><ul><li><strong>【释义】表示接下来说的内容将以一种戏剧化或者夸张化的语气，常与“同学”、“请”连用</strong></li><li><strong>【例句】你好，请飞来北京看。</strong></li></ul><h2 id="脑控-1"><a href="#脑控-1" class="headerlink" title="脑控"></a>脑控</h2><ul><li><strong>【释义】嘲讽对方做了一些比较荒谬的事情</strong></li><li><strong>【词源】原出处已散逸，或许来源于廖凯原的《轩辕反熵运行体系》，或许来源于网上关于脑控的发笑阴谋论</strong></li></ul><h2 id="脑死亡-star-1"><a href="#脑死亡-star-1" class="headerlink" title="脑死亡**^\star**"></a>脑死亡**^\star**</h2><ul><li><strong>【释义】做了一些荒谬或者略微有点愚蠢、没有逻辑的事情，可以形容自己或者别人，贬义。常与热狗连用。</strong></li><li><strong>【词源】来源于《破道计划》（郭xj著）“所有人眼前一黑，全部倒下，他们的大脑承载了本不该承载的东西，全部陷入了脑死亡。”</strong></li><li><strong>【变体】nsw、脑死亡一次、nsw吧、脑死、眼前一黑，陷入脑死亡</strong></li><li><strong>【例句】我今天早上11:15起床已经nsw！</strong></li></ul><h2 id="Odeur-dagger-1"><a href="#Odeur-dagger-1" class="headerlink" title="Odeur**^\dagger**"></a>Odeur**^\dagger**</h2><ul><li><strong>【释义】匿名者</strong></li><li><strong>【词源】网课期间，沈ty同学以Odeur的化名出没于各个腾讯会议会议室</strong></li></ul><h2 id="然而-1"><a href="#然而-1" class="headerlink" title="然而"></a>然而</h2><ul><li><strong>【释义】表示转折</strong></li><li><strong>【例句】然而：我可悲。</strong></li></ul><h2 id="热狗-star-1"><a href="#热狗-star-1" class="headerlink" title="热狗**^\star**"></a>热狗**^\star**</h2><ul><li><strong>【释义】表示做事不太聪明又有点可爱发笑，可作为名词、形容词、副词、语气词使用</strong></li><li><strong>【词源】高一义卖高sm同学提议可以卖热狗，后虽热狗因卫生原因被否，但是高sm同学读“热狗”的口音流传了下来</strong></li><li><strong>【变体】热狗人，🌭，🌭吧，小热狗以及众多表情包的形式</strong></li><li><strong>【例句】这也是为什么有小热狗喜欢iPad mini。</strong></li></ul><h2 id="请-1"><a href="#请-1" class="headerlink" title="请"></a>请</h2><ul><li><strong>【释义】发语词，表示接下来说的内容将以一种戏剧化或者夸张化的语气，有时用来表达比较轻松语气的请教，常与同学、你好连用</strong></li><li><strong>【例句】请你加速！</strong></li></ul><h2 id="事实上-1"><a href="#事实上-1" class="headerlink" title="事实上"></a>事实上</h2><ul><li><strong>【释义】in fact，也不知为何常被拿来发语，语言非常欧化呐</strong></li><li><strong>【例句】事实上我后天早上说不定也要从交大出发。</strong></li></ul><h2 id="同学-1"><a href="#同学-1" class="headerlink" title="同学"></a>同学</h2><ul><li><strong>【释义】表示接下来说的内容将以一种戏剧化或者夸张化的语气，常与请、你好连用、注意</strong></li><li><strong>【例句】同学，你有些发笑。</strong></li></ul><h2 id="完全-1"><a href="#完全-1" class="headerlink" title="完全"></a>完全</h2><ul><li><strong>【释义】表示夸张化的否定</strong></li><li><strong>【例句】完全错误！</strong></li></ul><h2 id="显然-1"><a href="#显然-1" class="headerlink" title="显然"></a>显然</h2><ul><li><strong>【释义】表示夸张化的语气</strong></li><li><strong>【例句】我显然追求最佳显示效果。</strong></li></ul><h2 id="一次-1"><a href="#一次-1" class="headerlink" title="一次"></a>一次</h2><ul><li><strong>【释义】用于自嘲，常与发笑、热狗连用</strong></li><li><strong>【例句】🌭一次</strong></li></ul><h2 id="智慧-1"><a href="#智慧-1" class="headerlink" title="智慧"></a>智慧</h2><ul><li><strong>【释义】常用于自夸，其否定形式常常表示轻松语气的批评</strong></li><li><strong>【例句】我是智慧的。</strong></li><li><strong>【例句】大不智慧！</strong></li></ul><p><strong>## <strong>中情局</strong>^\dagger</strong></p><ul><li><strong>【释义】偷看英语默写答案</strong></li><li><strong>【词源】高一时钟zj同学作为英语课代表，是及时雨中的普罗米修斯，他从老师或者隔壁同学那里盗来答案，史称中情局。</strong></li></ul><h2 id="注意-star-1"><a href="#注意-star-1" class="headerlink" title="注意**^\star**"></a>注意**^\star**</h2><ul><li><strong>【释义】表示提醒对方说错话或者做事荒谬，常与“智力”连用</strong></li><li><strong>【例句】注意！到虹桥只需1h5min。</strong></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;fxlego大典v1-0&quot;&gt;&lt;a href=&quot;#fxlego大典v1-0&quot; class=&quot;headerlink&quot; title=&quot;fxlego大典v1.0&quot;&gt;&lt;/a&gt;fxlego大典v1.0&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;写这一份上中腔词典的原因是一时兴起。其实很难</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="校园/School" scheme="https://ryanstarfox.github.io/tags/%E6%A0%A1%E5%9B%AD-School/"/>
    
    <category term="高中/High School" scheme="https://ryanstarfox.github.io/tags/%E9%AB%98%E4%B8%AD-High-School/"/>
    
  </entry>
  
  <entry>
    <title>9 3/4车站和驯龙高手</title>
    <link href="https://ryanstarfox.github.io/2024/06/06/2024/20240606%20Vision%20Pro/"/>
    <id>https://ryanstarfox.github.io/2024/06/06/2024/20240606%20Vision%20Pro/</id>
    <published>2024-06-06T04:58:00.000Z</published>
    <updated>2024-06-06T04:58:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="9-3-4车站和驯龙高手"><a href="#9-3-4车站和驯龙高手" class="headerlink" title="9 3&#x2F;4车站和驯龙高手"></a>9 3&#x2F;4车站和驯龙高手</h1><p>今天由于一些机缘巧合，在交大玉兰苑二楼体验到了Vision Pro，随便写一点感受，</p><p><img src="/images/2024/VP-1.webp" alt="img"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>戴上Vision Pro的其实有点麻烦的，有点笨重，我用的是单环的绑带，要束得比较紧。耳朵也一下子不知道是要盖在绑带下面还是不要盖在绑带下面。鼻子下面是会有一点点漏光的，没有那么贴合，佩戴的过程中，那块贴面的磁吸零件也经常松动（可能因为那块贴面的零件并不是量身定做的吧？）带上Vision Pro，我的第一感觉是与带着眼镜的观感无异。再定睛一看，会感觉有点“花”，怀疑是被各种人戴了之后摄像头上有点油渍没有擦掉吧（这其实和普通的眼镜也是一个道理）。再仔细体验，觉得确实暗部会比实际的亮度更低一些，细节不太清楚，有点糊作一团（这也可能是我加入的镜片和我实际的度数不太一致的缘故）。但是即使有这么多问题，戴上去的感觉还是震撼的，身临其境的感觉会让你忘记以上的缺点。甚至之前被诟病的“视角小”的问题我觉得也没有那么严重，因为本来视线的边缘就是模糊的，问题不是很大。让我感到有点吃力的是Vision Pro的重量。这次因为是体验，所以没有用双环的绑带，脖子感觉快要断掉了。我的面部确实也压得有点难受。而且眼睛离屏幕这么近，又要用视线来控制焦点，眼睛也是有点累的。</p><p>但是不得不说，VisionOS已经打磨得比较好了。记得《乔布斯传》中有一位苹果高管对于iPad的描述。ta在那里使用iPad，旁边一个素不相识的小孩看到了也很感兴趣，ta于是把iPad借给了那个小孩，那个小孩拿到iPad，不需要任何的使用手册，就很轻易地上手了iPad。我认为Vision Pro也是类似的体验，ta的交互中能够找到来自iPhone的Home键、手势操作的影子，用户完全不会有面对一个界面不知所措的感觉。符合直觉的设计是好设计。</p><p>体验了几个App。一个是看那个机械零件。那位引导我的店员说其实可以走进这个零件看内部构造，但是我不敢，我觉得会一头撞进去。真的有一种9 3&#x2F;4车站的感觉。那个零件是可以用手拆开的，让我感到惊讶的是甚至可以用手来将它翻转。认为这个手部识别应该会比较难，这确实是比较让我惊喜的一点。也体验了那个知名的与恐龙面对面的App。恐龙走出屏幕的时候，我真的很害怕，竟然一下子蹲了下来。我小心翼翼地想像驯龙高手里面的Hiccup用手去摸龙的额头，但是它咬了我一下，我害怕得把手缩了回去。太真了。还体验了iMAX看电影，看了几段试看片段。哇那个真的是太爽了，真的想在电影院一样。但是我试图像宣传片里的一样把银幕放到湖的上面，我自己好坐在湖边看，但是来不及研究出应该怎么操作。不过我还是体验了几个环境的场景。看了雪山、沙漠、湖边、月球。真的非常震撼。最后体验的app是淘宝。没想到国内厂商已经这么快就适配了Vision Pro。打开淘宝，说实话也都是几个我比较熟悉的商品：大疆mini 4，索尼A7C2等等（怀疑被算法了，这不是我一直念叨想要的嘛）点进去，是可以把立体的商品拿出来看的。感觉这个真的会重塑线上购物的体验。</p><p><img src="/images/2024/VP-2.webp" alt="img"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>感谢trt告知了我这个活动，真的很难得。这应该是那一个幻想中的美好未来的一部分吧？不知这个产业以后会变成什么样。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;9-3-4车站和驯龙高手&quot;&gt;&lt;a href=&quot;#9-3-4车站和驯龙高手&quot; class=&quot;headerlink&quot; title=&quot;9 3&amp;#x2F;4车站和驯龙高手&quot;&gt;&lt;/a&gt;9 3&amp;#x2F;4车站和驯龙高手&lt;/h1&gt;&lt;p&gt;今天由于一些机缘巧合，在交大玉兰苑二楼体</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
  </entry>
  
  <entry>
    <title>Ars Longa, Vita brevis</title>
    <link href="https://ryanstarfox.github.io/2024/06/05/2024/20240604%20%E5%9D%82%E6%9C%AC%E9%BE%99%E4%B8%80/"/>
    <id>https://ryanstarfox.github.io/2024/06/05/2024/20240604%20%E5%9D%82%E6%9C%AC%E9%BE%99%E4%B8%80/</id>
    <published>2024-06-05T07:00:00.000Z</published>
    <updated>2023-11-02T07:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ars-Longa-Vita-brevis"><a href="#Ars-Longa-Vita-brevis" class="headerlink" title="Ars Longa, Vita brevis"></a>Ars Longa, Vita brevis</h1><p><img src="/images/2024/ryuichi-0.tiff" alt="ryuichi-0"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>现在已经很晚了，刚刚和一位朋友打了电话煲了电话粥，所以现在事实上已经是6月5日1:00多了，即使如此，我还是觉得有必要趁我的感受没有消失前写下我看完《坂本龙一：杰作》之后的感受。</p><p>我是什么时候知道坂本龙一的呢？高三的时候，我做作业喜欢听钢琴曲。我的钢琴曲都选自Apple music每周更新的钢琴休憩小站的歌单，其中就有坂本龙一的《OPUS》和《energy flow》。OPUS是我在这个歌单中挑出来单曲循环过的音乐之一，我能听出它的非同寻常。“坂本龙一”这个日本名字就进入了我的记忆。又是“龙”，又是“一”的，听上去就是一个大师嘛。我后来才知道，他确实是一位大师。</p><p>后来，我发现坂本龙一确实久负盛名。在一些视频中，我了解到了他的名作《Merry Christmas, Mr. Lawrence》。我很庆幸我对于美是有敏锐的感受的，我看一个介绍他的视频中的很多音乐中，给我留下最深印象的就是《Merry Christmas， Mr Lawrence》。但是我真正了解他反而是在他去世前不久。2021，2022年的时候，我在B站上找过大量有关于他的视频进行了解，看了纪录片《坂本龙一：终曲》，我发现他不是那种老态龙钟的保守的音乐大师，而是颇为先锋。不仅在年轻的时候，他在YMO他做过很多尝试，甚至到他步入中老年之后，也试着去创新，去写出《async》这样的先锋作品，这让我对他既是愈发感兴趣，又是愈发敬佩。我也尝试去听他的音乐，有些先锋音乐、实验音乐不适合作为常听的娱乐性的或者说仅仅是让我专注下来的bgm，只适合作为一种新奇的体验，但从中我能够感到坂本龙一对于音乐本质的独到理解与不断的探索。</p><p>只是我开始了解他没多久，他就离世了。</p><p>《坂本龙一：杰作》是他留给我们最后的礼物。</p><p><img src="/images/2024/ryuichi-1.jpeg" alt="ryuichi-1"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>在5&#x2F;31，我发现《坂本龙一：杰作》上院线了。我认为我一定要去看，而且我也认为我应该一个人去看。我谁都没有约。</p><p>是6月4日20:00-21:43的票。我很担心自己能不能看完的，因为担心自己没有这个耐心，但是随着乐音渐强，我代入了这种情绪化的氛围，我就知道自己一定能听下去，我本来以为或许自己会包场，因为感觉这种形式能接受的人很少吧？但是实际上没有包场，全场一共9位观众。坐在我前面的我能看到的4位观众中，1位看微信看得睡着了，1位在看微信，2位在刷短视频。手机的屏幕很亮很刺眼，我尽量压低身子，希望他们的座位挡住屏幕的光。不知道他们有没有享受这一段旅程。电影院运作的噪音很大，这对于这样一场音乐会而言是很严重的影响，但无妨。</p><p>前几周刚好连续看了坂本龙一的两本自传《我还能看到几次满月升起》和《音乐即自由》，同时我也不是什么专业的音乐人，所以我看这部作品的时候，我在想的是，坂本龙一在演奏时会想什么呢？镜头一直给坂本龙一的脸特写，我可以看到他最细微的表情，我尽力地去揣度他的想法。</p><p>《BB（Bernardo Bertoilucci）》是他这次演奏会的第二首音乐。我第一次知道，原来BB指的是Bernardo Bertoilucci。贝托鲁奇是坂本龙一敬爱的前辈，为他的电影配乐，尽管有许多起伏与碰撞，但能为自己心目中的大师的作品配乐，坂本龙一想必是非常幸福的。而看到两位大师合作，那种惺惺相惜，是如此让人动容。整个音乐会有两首音乐都是贝托鲁奇的电影配乐。一首是《The Last Emperor》，一首是《The Sheltering Sky》。《The Last Emperor》是坂本龙一是贝托鲁奇的第一次合作，而《The Sheltering Sky》的合作或许是对于坂本龙一影响最大的一次。事实上“我还能看到几次满月升起”就摘自《遮蔽的天空》，这句话坂本龙一直到晚年也一直在回味，甚至喃喃自语。已经30年了。</p><p>我也是第一次知道“Andata”的中文是的“离去”。我对于《Andata》的旋律相对而言较为熟悉，但知道了它的含义之后，又对它的那种空落感的认识更加具象化。这次是纯钢琴演奏，因此没有原曲中应该是电子合成音的那一部分。但却是觉得那部分电子合成音或许更有那种空落之感。坂本龙一青年时自杀的女友离去了、他未曾见到最后一面的父亲离去了、带他进入电影配乐的大岛渚离去了、他心目中的大师贝托鲁奇离去了、他的挚友大卫·鲍伊离去了、YMO的高桥幸宏也先他一步离去了，现在他自己也要离去了。</p><p>再下一首让我印象深刻的音乐就是《Aubade2020》（《晨曲2020》）。我认为这或许是坂本龙一的《朝花夕拾》？这或许是整场音乐会最轻快的的旋律了，其中的欢乐莫不是他幼时特殊幼儿园中学钢琴的经历，莫不是他第一次作出《小白兔之歌》的感受？这种快乐是轻快的。我认为这其实与后面一首《Ichimei-Small happiness》（《一命：渺小的幸福》）相对照。这首音乐不快乐，有种物哀之感，但很幸福，应该是他此刻的感受吧？鲜花在谢的时候是幸福的，红叶在飘落的时候是幸福的，最终土地上还会长出新的苗来。</p><p>《Tong Poo》(《东风》)是坂本龙一年轻时的名作，我想他这应该是在回想YMO时期，那段他探索民族音乐的时期吧？在YMO的经历，让坂本龙一走向了国际化。最后因为与细野晴臣和高桥幸宏观念不合最终解散。解散之后YMO有两次重聚，一次是商业性的，几个人还处于矛盾的状态，不太愉快，但是第二次是自发的，年岁的增长让三位也更加平和包容，时隔多年为YMO画上了一个完美的句号。</p><p>《20180219（w&#x2F;prepared piano》（《预制钢琴》）前，坂本龙一手动改装琴弦，赋予了钢琴特殊的音色。这种音色让我回想起坂本龙一在福岛海啸之后去拜访福岛，找到的那架破烂钢琴的音色，或许也正是从中获得灵感吧？wrepared指的应当也是wreck- prepared吧？感觉这种改装钢琴的手法非常实验性，但是做出来的效果却出人意料的动听和谐。</p><p>倒数第二首诗另外一首电影配乐《Merry Christmas, Mr Lawrence》。这首音乐在他的音乐生涯中也有这举足轻重的地位。他因为这首音乐，去了奥斯卡现场，见到了贝托鲁奇，才有了后面的电影配乐的那一半故事。但是坂本龙一对于这首音乐的态度很矛盾，也是到了晚年才释怀。他起先一直不愿意谈这首音乐，因为厌倦这首音乐成为他的公众形象（其实这也有点叛逆），但他去听别人的音乐会，理解了听不到自己想听的音乐的难受，因此开始不忌讳在自己的音乐会上面演奏这首音乐，也算是最终和解吧。我事先没见过演奏单，也一直在想坂本龙一是否会把这首音乐放进他留下来的最后的礼物呢？我一直等，听到了《The Last Emperor》中《Where is Armo》的开头差点以为是《Merry Christmas, Mr Lawrence》。我听到最后都已经觉得，或许这最后一次他想为了自己演奏，不弹这首了吧，没想到这一首音乐的旋律最终还是浮现了出来，他想必是彻底和解了，他最后一次为世界弹了一遍《圣诞快乐，劳伦斯先生》。他会不会想起大卫·鲍伊，想起在奥斯卡遇到贝托鲁奇，想起北野武油腻但纯真的脸。这是他唯一一首微笑着演奏的音乐。</p><p><img src="/images/2024/ryuichi-2.png" alt="ryuichi-2"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>最后一首音乐是《OPUS》，这是我第一次知道坂本龙一这个名字的媒介，却也是坂本龙一的落幕。我事先是知道这首音乐</p><p>是最后一首音乐，但是没想到是以一种如此伤感的形式：弹着弹着，脚步声响起，琴声依旧，琴键上的手消失了，琴键却兀自地弹着。字幕提醒着我们“斯人已逝，乐音不止”。</p><p><img src="/images/2024/ryuichi-3.png" alt="ryuichi-3"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>全片的最后一幕是Ars Longa, Vita brevis（艺术千秋，人生朝露），这句话也在他的《你还能看到多少次满月升起》里出现过，这是坂本龙一的墓志铭，恰如其分。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ars-Longa-Vita-brevis&quot;&gt;&lt;a href=&quot;#Ars-Longa-Vita-brevis&quot; class=&quot;headerlink&quot; title=&quot;Ars Longa, Vita brevis&quot;&gt;&lt;/a&gt;Ars Longa, Vita brevis</summary>
      
    
    
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/categories/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="豆瓣/Douban" scheme="https://ryanstarfox.github.io/tags/%E8%B1%86%E7%93%A3-Douban/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="感悟/Thoughts" scheme="https://ryanstarfox.github.io/tags/%E6%84%9F%E6%82%9F-Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>Ride, ride through the day</title>
    <link href="https://ryanstarfox.github.io/2024/01/16/2024/20240115%20%E9%AA%91%E8%BD%A6/"/>
    <id>https://ryanstarfox.github.io/2024/01/16/2024/20240115%20%E9%AA%91%E8%BD%A6/</id>
    <published>2024-01-15T22:00:00.000Z</published>
    <updated>2024-01-15T22:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ride-ride-through-the-day"><a href="#Ride-ride-through-the-day" class="headerlink" title="Ride, ride through the day"></a>Ride, ride through the day</h1><p>我能接受的最快的还算能享受的速度是自行车的速度。</p><p>在读大学以前，我很少骑车。出行无非三种方式：步行、乘父母的车、乘公交。乘公交的时光是漫长的，总需要一样东西来分散注意力，打磨时光。对我而言，那常常是手中的Kindle和耳朵里的AirPods。公交车是颠簸的，有一股怪味，窗缝和座位底下总感觉很脏，车门打开时候嘎吱嘎吱的。地铁稍微稳一点，但是隆隆的运行声让我总要带上降噪耳机，即使我不想听音乐。在公交上，我能感受到阅读和欣赏音乐的快乐，但是我不享受这段单调、重复、死板的旅程。</p><p>乘父母的车比乘公交舒服一些。至少有一整面的窗户是留给我的，我可以看看路边的景色。可这景色往往是单调的——在这个车速限制的观察的宏观尺度上、在城市里，我看到的几乎只有千篇一律的楼和不断重复的路灯、路牌、和路上的标线。对我而言，享受的纯粹的车程可能只有那种空旷、笔直、怪石环绕的无人公路或是溪边的人小路。感觉山石和水流是少数不多在宏观的尺度之下还能欣赏的东西了。平时乘车唯一的享受之处在于与家人的聊天，但这也不属于旅途的享受的范畴了。</p><p>但是每次步行就很享受。步行足够慢，慢到我可以看清路途中的一切细节；步行足够随意，我想停便停、想快便快、想慢便慢；步行足够放松，我可以肆意挥霍自己的注意力；步行足够真实，我可以去触碰大地，听落叶的声音，嗅即将下雨的味道。步行是生活；步行是探索；步行是欣赏；步行是作诗。</p><p>高中毕业之后，第一个新的交通体验是亲自开车。我的母亲很惊讶我没有像刻板印象中的男孩一样喜欢车这类所谓“阳刚”的东西。我没有很喜欢开车的感觉。我认为开车的感觉甚至比乘车还糟糕。除了不能好好看看身边的景，甚至注意力都被分开了——“看”就几乎只够实现最功利的目的了。</p><p>第二个新的交通体验是自行车。我上大学前自行车骑得不多，高中毕业后用从自己成功从SHS骑共享单车骑40km回家的经历换来了一辆入门的山地车giant-atx720。大学这一个学期，我骑的里程可能比我人生的前18年加起来都要多。我很享受骑行。骑行其实和步行很像——过了两三天后也还记得很多那段路的细节。在闵行骑车时每次都是绿灯，出了闵行就一直等红灯。过了一座桥后远远看到一座寺庙的大雄宝殿，在地图上查看发现是法华禅寺。非机动车道上奔波的除了疾驶的外卖小哥还有从工具箱里掉了一只扳手出来的维修工人。电瓶车的侧面伸出一个毛茸茸的头和一条兴奋地晃着的小尾巴，在等红绿灯时，那只小狗跳下了车，车上的老爷爷和隔壁车的老奶奶告诉它还没到，回去，它就回去了。看到嘉定新城一片风景秀丽的河边步道，旁边是红色的黄色的树，那是在嘉定城市规划馆旁边。馆对面还有一家养乐多工厂，以前我的太外婆经常送给我养乐多，一板一板的。骑着骑着，耳机里随机到了Queen的《Bicycle Race》。在骑过苏州河的时候，那个地方离虹桥很近，看到了4，5架飞的很低的飞机，就直直地在头顶掠过，连航空公司的名字都能看到。有幸拍下了几张照片，再往前骑一点是一帮在等着看飞机降落的年轻人。</p><p><img src="https://s2.loli.net/2024/01/16/Imwr2g7NSOHP3bc.jpg"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>很喜欢这张</p><p><img src="https://s2.loli.net/2024/01/16/7eBCAGfIDEhPoFS.jpg" alt="4D9F189E-268A-4145-B2AC-D232CA7BE78F_1_105_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>《中国东方航空》</p><p>但是我最近意识到骑行的享受较步行已经有所下降了。我是在一天晚上意识到这件事的。那天晚上图书馆闭馆，和一个偶然遇到的高中同学一起回去。她没找到共享单车，所以我们一同走回去。在教超旁边，我看到一颗树，那棵树很粗，看上去年龄比旁边的行道树大了不少。一般而言，人感知到一件事往往能够快速唤醒一个人沉睡的回忆的。对我而言，最灵敏的是嗅觉，但是嗅觉稍纵即逝，往往我还没有想起那一段回忆就消逝了，空留感受的余音和美丽的遗憾。但是视觉是真切的，那棵粗得不一般的树让我立刻想到了小学上学路上和祖父一同依据树干粗细“钦定”的树老大、老二、老三和老四。我骑行的时候从未注意过这棵树。</p><p>步行、骑行。对于很多人来说，通勤是种折磨。是啊，谁愿意一大早起来挤在狭小的车厢内呢？步行作为通勤的方式可能在现在已经不太实际了，但是骑行还是可以作为一种折中的办法吧？我不愿意每一段路程都要想办法消磨时间，我还是希望多几段可以享受的旅程的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ride-ride-through-the-day&quot;&gt;&lt;a href=&quot;#Ride-ride-through-the-day&quot; class=&quot;headerlink&quot; title=&quot;Ride, ride through the day&quot;&gt;&lt;/a&gt;Ride, ride</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="感悟/Thoughts" scheme="https://ryanstarfox.github.io/tags/%E6%84%9F%E6%82%9F-Thoughts/"/>
    
  </entry>
  
  <entry>
    <title>法大悲 repo</title>
    <link href="https://ryanstarfox.github.io/2023/12/18/2023/20231218%20Les%20Miserables/"/>
    <id>https://ryanstarfox.github.io/2023/12/18/2023/20231218%20Les%20Miserables/</id>
    <published>2023-12-18T02:00:00.000Z</published>
    <updated>2023-12-18T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong># 法大悲 repo</strong></p><p>有幸抢到了法大悲的票</p><p><img src="https://s2.loli.net/2023/12/18/UWxcoTA1ajbFOCR.jpg" alt="IMG_4199"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>于是在12月15日的交大金课工程学导论课下课后翘了晚上18:30的数学分析习题课前去上海文化广场观看</p><p>乘地铁紫竹高新区–&gt;上海南站–&gt;陕西南路</p><p>坐一号线的时候还有一个地铁迷兴奋地跑过来拍照，说这部地铁是上海一号线第一辆列车</p><p>感觉很好运</p><p>因为好久没有听音乐剧了，打算在路上重听一下10周年版的大悲，然后发现自己的耳朵进化了，已经听得出AirPods 2无法承受这种宏大的交响乐了，在地铁上后悔没有把大馒头4带出来。</p><p>在上海南站换乘的时候听到《The Confrontation》已经听得头皮发麻了，非常期待！！</p><p>从陕西南路出来发现是环贸iapm，高考后莫名其妙对这里非常熟，打卡圣诞Apple store</p><p>晚饭在一家深井陈记烤鹅吃了雪菜牛肉饭，一直很喜欢吃这道菜，很鲜。</p><p>没有给饭拍照（哎这次就是没想到应当多拍点照片）因为外面打光很好，想给自己拍张照</p><p><img src="https://s2.loli.net/2023/12/18/K64xzwLN8lhuoPs.jpg" alt="IMG_4149"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>发现反光不够好</p><p>走到上海文化广场，路边的旗，，</p><p><img src="https://s2.loli.net/2023/12/18/YanyOVHXALDiuCt.jpg" alt="IMG_4147"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>进去了，人很多，见到一个女孩子拿着徕卡相机（不是镜头，是镜头+相机），感觉她很富有</p><p>看到上海电视台也在有那里采访，趁没有人偷偷拍了一张大海报（的一<strong>部分</strong></p><p><img src="https://s2.loli.net/2023/12/18/t6qTKCLmgUDzX7l.jpg" alt="IMG_4156"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>买了一些纪念品：纪念册和CD</p><p><img src="https://s2.loli.net/2023/12/18/biS1KTlWwFpZvsJ.jpg" alt="IMG_4158"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>可以给大家看看纪念册里面，很精美！sukisuki</p><p><img src="https://s2.loli.net/2023/12/18/5ATNofDdberYPLU.jpg" alt="IMG_4202"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="https://s2.loli.net/2023/12/18/Yrtw9ycmFziBTso.jpg" alt="IMG_4200"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="https://s2.loli.net/2023/12/18/QAWdPORnVxUMluG.jpg" alt="IMG_4201"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>在进场的时候还偶遇xys小姐，小小震撼，，和她大眼瞪小眼</p><p>记得第一次看10周年的时候还有点无聊，因为确实10周年仅仅是一个音乐会，表演的部分不是很多，自己还没有定力只听音乐不做别的事情，眼睛没事情做。这一次看现场还是完全不懂的法语，隐隐约约有点担心自己会不会感觉无聊，，</p><p>但其实当《Prologue》的旋律一开始的时候，我就知道不可能会感到无聊，现场的声音和耳机里的声音是不好比的，每一个音符使灵魂震颤，’Pitié,pitié’一开口，我一下子很恍惚，真的不敢相信自己能在现场听到</p><p>我全程都很亢奋，尤其是《The Confrontation》、《Do you hear the people sing》、《One day more》</p><p>《Master of the house》很欢乐，《Beggars at the feast》大家真的在拍手</p><p>小珂赛特和伽弗洛什都很可爱，，喜欢《橱窗里的娃娃》，甜甜的小女孩谁不爱</p><p>冉阿让说“你命令我不要死，我会努力尝试”的时候真的热烈盈眶</p><p>不过也有一些缺点，忘记哪一段高潮的时候设备爆音了，一下子出戏了</p><p>第二幕的时候很多地方不该拍手，但是观众在乱拍手，导致几首歌之间的衔接被打断了</p><p>不过总体来说，真的远胜录像版本，毕竟大悲所有的版本里面，现场版是最好的！</p><p>录了两段encore：</p><p>唱了两遍《finale》，唱第二遍的时候感觉演员是想台下的观众一起唱吧，可惜大家实在是不会说法语</p><p>其实有点可惜没有唱《Do you hear the people sing》，不知道是不是政治原因，感觉那个更适合大合唱</p><p>落幕！</p><p><img src="https://s2.loli.net/2023/12/18/94YXLOwyPoBaiUK.jpg" alt="IMG_4164"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="https://s2.loli.net/2023/12/18/h7AMOUcflVsbiRu.jpg" alt="IMG_4169"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>像梦一样的晚上</p><p>回来路上真的很上头，想重看10周年25周年电影和书了，于是在地铁上就下载了电子书，关掉《麦田里的守望者》，开始看《悲惨世界》</p><p>在地铁上还是只能拿AirPods pro 2听大悲，很难受，一回到寝室就使用大馒头听。大馒头4确实很牛！头戴式耳机的声场优势在这种交响乐上真的体现得淋漓尽致。</p><p>ww还想再看</p><p>哎可惜这次没拍什么照片，还没有养成随时随地用影像记录生活的好习惯</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;# 法大悲 repo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有幸抢到了法大悲的票&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/12/18/UWxcoTA1ajbFOCR.jpg&quot; alt=&quot;IMG_4199&quot;  data-t</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
  </entry>
  
  <entry>
    <title>看星星</title>
    <link href="https://ryanstarfox.github.io/2023/11/02/2023/20231101%20%E7%9C%8B%E6%98%9F%E6%98%9F/"/>
    <id>https://ryanstarfox.github.io/2023/11/02/2023/20231101%20%E7%9C%8B%E6%98%9F%E6%98%9F/</id>
    <published>2023-11-01T16:12:00.000Z</published>
    <updated>2023-11-01T16:12:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="看星星"><a href="#看星星" class="headerlink" title="看星星"></a>看星星</h1><p>很巧，很多很喜欢的作品都是星际题材：星际争霸、星球大战、星际牛仔……无数的星星各有各的神秘与朦胧，对于我而言，星星对我的吸引不仅仅在于对未知的好奇，更因其因人类认知的永远无法企及全部星星的崇高与悲壮。</p><p>我是什么时候开始看星星的呢？应当是高一学期初那几个夜晚。当时和Bill臭味相投，已经忘了是什么契机，发现上中竟然能看到很多星星，于是乎每天晚上晚自修结束一起去上中操场，躺在软软的草地上面，一颗一颗地认星星，最后爬起来的时候发现屁股和背全都湿掉了。当时就和他聊，说多少年后，这一段一起看星星的时光可能会模糊朦胧，可能会分不清楚究竟是梦还是真实，但绝对不敢把这段时光忘掉，因为这一段时光太珍贵了。从2020年10月的天空开始几个月的天空当时都十分熟悉。火星、木星、土星、牛郎、织女、天津一、天津四、毕宿五、五车二、五车三、天狼、北落师门、还有整个参宿。这些只在书上看到的名字突然在现实世界有了一个实体。这就好比我抬起头，第一次发现那崇高的未知世界的大门竟然有一道缝，缝里洒出来一束光，我进不去那个世界，却可以沐浴在光芒之中。</p><p>后来大操场翻修了，在高中期间再也没开，我和Bill也停止了看星星。很久不看星星，对于星空也陌生了。高三那年的中秋节，我和我的母亲半夜出去散步，想找一个好地方赏月，无奈到处都是灯光，钠灯的晕影无情地遮盖了月之皎洁。后来不知是谁想出对策，可以去楼顶赏月。我们到了楼顶，地平线附近依旧是橙色的，但天空暗了很多，不仅月景更加干净，星星也看到的更多了。那是木星、土星。我惊讶地发现自己依约能够识别出一些星星，使用手机软件对这天空一看，大多都是熟悉的名字。那一瞬间，感到星星是重逢故友。但人之渺小有何德何能与星星为友？能与星星连接，与自然连接，与崇高连接，心中反而怯怯的、空空的。</p><p>之前听过一个理论：怯魅的过程实际上是斩断了人与世界的连接感。就好比告诉小孩圣诞老人不存在，礼物是父母偷偷送的，小孩依旧收到礼物，但是心里总会空落落的。（应该是《刘擎》里的观点？）我发现我或许就在用与星星的连接去填补内心的空落，我在尝试与更大的世界产生联系，让自己的心与宇宙交融。</p><p>暑假里去了西藏，在高原上，我们两次出去看星空。我第一次用肉眼看到了银河，看到了更多的星星。那一瞬间的崇高感至今时时浮现，感觉那是我和世界联系得最紧密的时刻。</p><p>一起来看星星吧！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;看星星&quot;&gt;&lt;a href=&quot;#看星星&quot; class=&quot;headerlink&quot; title=&quot;看星星&quot;&gt;&lt;/a&gt;看星星&lt;/h1&gt;&lt;p&gt;很巧，很多很喜欢的作品都是星际题材：星际争霸、星球大战、星际牛仔……无数的星星各有各的神秘与朦胧，对于我而言，星星对我的吸引不仅仅在</summary>
      
    
    
    
    <category term="感悟/Thoughts" scheme="https://ryanstarfox.github.io/categories/%E6%84%9F%E6%82%9F-Thoughts/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
  </entry>
  
  <entry>
    <title>怀念高中</title>
    <link href="https://ryanstarfox.github.io/2023/10/18/2023/20231017%20%E6%80%80%E5%BF%B5%E9%AB%98%E4%B8%AD/"/>
    <id>https://ryanstarfox.github.io/2023/10/18/2023/20231017%20%E6%80%80%E5%BF%B5%E9%AB%98%E4%B8%AD/</id>
    <published>2023-10-18T05:14:00.000Z</published>
    <updated>2023-10-18T05:14:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="怀念高中"><a href="#怀念高中" class="headerlink" title="怀念高中"></a>怀念高中</h1><p>今天看到朋友圈里很多团委后两届小朋友发的部门合照，一下子很感慨，也很怀念SHS。</p><p>说来好笑，高三的时候大家都口口声声说盼望高三毕业，但是读大学读了一个月出头，朋友圈不知为何却刮起了“想回高三”的风潮。想回高三，这又未尝不是一种斯德哥尔摩呢？高三很苦，但是苦中作乐显得尤其的珍贵。我永远怀念那几个逃课的夜晚，在中兴楼的万圣节之夜，在四楼楼梯间和一楼门厅外柱子后面怯生生地长（发）聊（疯），团代会后在教工之家喝着免费的热可可和热巧克力狂欢（发疯*2）。感觉高三给我的感觉就是大家都是集中精力在冲高考，别的方面已经毫无顾忌了：食堂不好吃就天天出去吃，天天在教室里“热狗”“小丑”地嘴炮。可以肆意地发泄自己的不满情绪而不会有人介意。</p><p>高三的印记也有一些留到了大学。对我而言，最重要的印记是音乐。高三听了很多作业钢琴曲和睡眠钢琴曲，而我现在还保留着学习时听钢琴曲的习惯。听到那些熟悉的旋律，恍惚间似乎真的回到了那些大家都很累，有时集中精神有时在“自我放松”的晚自修。又一件说来好笑的事，我尝尝可以把在追的《星球大战》系列与高三联系起来，因为高三后期意外地发现星战的几首main theme虽然有些吵，但是能够帮助我集中注意力。打开Apple Music给我的推歌，本来想听点新的流行音乐的，结果全都是新的钢琴曲。感慨。有时候，记忆浮现需要一个契机，对我来说，其实最好的契机反而是嗅觉和听觉，没有视觉那样直白，但更加扣人心弦。</p><p>现在常常回SHS，几乎是每周回一次，去看望czy小姐，和她一起吃顿饭。每次回去我都有一种错觉，总觉得我是在和高三的自己重逢，就像电影里那种转头看见年轻的自己的镜头一样。我很感谢czy小姐在我高三时给我的陪伴，让我的高三生活不至于那样两点一线，给我带来了更多活力。现在，我想陪czy小姐一起度过她的高三，我说实话也并不确定这样经常去看她会不会影响她的学习，但我真的很希望她好，不仅仅是学业上，希望她在高三不要那样苦，依旧开心可爱，也希望我们最终能走到一起。</p><p>怀念SHS的日子</p><p>Po一些照片吧</p><p><img src="https://s2.loli.net/2023/10/17/7abDZFXKY8PRnxp.jpg" alt="CE7D702E-6FAE-40E4-814C-58D2598BE450_1_105_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>万圣节之夜</p><p><img src="https://s2.loli.net/2023/10/17/XPKcpVJRUizQEjt.png" alt="image-20231017234955996"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>拍部门合照时摊出来的一片，中间的是女儿送的抽象生日礼物</p><p><img src="https://s2.loli.net/2023/10/17/znJKaUdGs6vlerk.jpg" alt="6864D126-21CC-4B4D-9DF8-3697C22944B4_4_5005_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>艺术节大合唱被哪个学长拍到的，唱的很投入，撕心裂肺。不论歌有多烂，作为高三大合唱的歌，总会有点感情的</p><p><img src="https://s2.loli.net/2023/10/17/AL3Jkv2BehrRjfE.jpg" alt="9A64FD15-9560-4A9D-8D06-E90E80DEDA8F_1_105_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>再po一次Bill美照</p><p><img src="https://s2.loli.net/2023/10/17/fkdyGCH4QK7E5DW.jpg" alt="66271ABE-8053-49F0-A23B-8EB88DF8E8E8"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>Apple fans和胡老师和两个史蒂夫的合照</p><p><img src="https://s2.loli.net/2023/10/18/4tv3YI8c5Gro62B.jpg" alt="13B87670-4215-480E-A993-F1BB91BA230E_1_105_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="https://s2.loli.net/2023/10/18/QvLBFfrutYMdzcx.jpg" alt="BBB6F067-012B-483F-BFED-FC1BEE25E2A9_1_105_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>给董老师的最好的礼物！！</p><p>不敢发和czy小姐的照片🥹</p><p>哎看到朋友圈那么多合照，突然情绪化，想今晚就写点东西出来，虽然文笔很烂，，，，但是真的怀念怀念</p><p>主要还是照片比较有趣</p><p>最后一张：</p><p>我拍的最好的龙门楼</p><p><img src="https://s2.loli.net/2023/10/18/MWcZg8S6sRq7XKy.jpg" alt="790F8EC7-E544-4DAE-9F8A-29CD6CE4A08F_1_105_c"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>祝下一届高三牲“要去到你心中向往的地方”😁</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;怀念高中&quot;&gt;&lt;a href=&quot;#怀念高中&quot; class=&quot;headerlink&quot; title=&quot;怀念高中&quot;&gt;&lt;/a&gt;怀念高中&lt;/h1&gt;&lt;p&gt;今天看到朋友圈里很多团委后两届小朋友发的部门合照，一下子很感慨，也很怀念SHS。&lt;/p&gt;
&lt;p&gt;说来好笑，高三的时候大家都口</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
    <category term="校园/School" scheme="https://ryanstarfox.github.io/tags/%E6%A0%A1%E5%9B%AD-School/"/>
    
    <category term="高中/High School" scheme="https://ryanstarfox.github.io/tags/%E9%AB%98%E4%B8%AD-High-School/"/>
    
  </entry>
  
  <entry>
    <title>抢果子首发的经历</title>
    <link href="https://ryanstarfox.github.io/2023/09/16/2023/20230915%20%E6%8A%A2%E9%A6%96%E5%8F%91/"/>
    <id>https://ryanstarfox.github.io/2023/09/16/2023/20230915%20%E6%8A%A2%E9%A6%96%E5%8F%91/</id>
    <published>2023-09-16T15:08:00.000Z</published>
    <updated>2023-09-16T15:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抢果子首发的经历"><a href="#抢果子首发的经历" class="headerlink" title="抢果子首发的经历"></a>抢果子首发的经历</h1><p><strong>2023.9.15，晚上8时整，惊心动魄的抢首发环节</strong></p><p><strong>国区参赛选手：Leo, Bill, Ryan</strong></p><p><strong>港区参赛选手：Hertz</strong></p><p><strong>先介绍一下背景：</strong></p><p><strong>Leo: 最富的富哥，竟然是从iPhone13换成iPhone15 pro (2021-&gt;2023)</strong></p><p><strong>Ryan: iPhone X换成iPhone 15 pro （2018-&gt;2023)</strong></p><p><strong>Hertz: 最为重量级，iPhone 6s换成iPhone15 pro（2017-&gt;2023)</strong></p><p><strong>Bill: 最有商业头脑，帮我和Leo抢iPhone pro，多出来的挂闲鱼卖掉</strong></p><p><strong>19:48，Hertz早已蓄势待发，迫不及待，库克告诉他：“我们也同样急不及待（要骗钱）。”</strong></p><p><img src="https://s2.loli.net/2023/09/16/FGhq9B3HwzPuQKi.png" alt="image-20230916222844091"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><strong>我安抚Hertz：</strong></p><p><img src="https://s2.loli.net/2023/09/16/PjZOcrxGoILqUaH.png" alt="image-20230916222937603"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>19:57分，我俩开始倒计时：</p><p><img src="https://s2.loli.net/2023/09/16/IUWmhtsLG4YFHRB.png"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>倒计时十分🌭️，我们俩不约而同地在10s停下了</p><p>然后是沉默的20s</p><p><img src="https://s2.loli.net/2023/09/16/sdBSzhmCqDvpliF.png" alt="image-20230916223123663"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>20s啊！多少操场人已经排在我们前面了！</p><p>万念俱灰时，库克安抚我们：</p><p><img src="https://s2.loli.net/2023/09/15/ct46uSBFTw2mIfR.png" alt="A435A892-2D7A-4AAC-B797-3D6288EEE0AA"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>真是贴心呢，能不能现在就好</p><p>22:03：</p><p><img src="file:///Users/wangshaoyan/Library/Application%20Support/typora-user-images/image-20230916223332902.png?lastModify=1753785655" alt="image-20230916223332902"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>but</p><p><img src="https://s2.loli.net/2023/09/16/tKLpuAyIg9d67NW.png" alt="image-20230916223349847"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>哎哎，更加绝望。Apple store堪比选课平台</p><p>突然，</p><p><img src="https://s2.loli.net/2023/09/16/ZSvsuexr4nibozR.png" alt="image-20230916223707444"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p><img src="https://s2.loli.net/2023/09/16/OJpTSeDIy2dluwn.png" alt="image-20230916223754350"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>除了Leo，大成功</p><p>Leo很🌭️，，我接了电话，Leo告诉我他有钱花不出去</p><p>他的银行卡有限额</p><p>完蛋</p><p>于是他来向别人乞讨</p><p>很🤡</p><p><img src="https://s2.loli.net/2023/09/16/A7rlDMzciQLsnJw.png" alt="image-20230916224058374"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>最后也成功的</p><p><img src="https://s2.loli.net/2023/09/16/OFT6Qr4DVP5Ck7R.png" alt="image-20230916223959529"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>我们都获得订单，但是预计送货时间迟迟不来</p><p>Hertz 第一个获得预计到达时间：9&#x2F;22 第一批！！他第一个上岸</p><p>可是别人杳无音讯</p><p><img src="https://s2.loli.net/2023/09/16/AUmbtM3T8xp6OLP.png" alt="image-20230916224211676"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>在半夜，我写昨天那篇稿子的时候：</p><p><img src="https://s2.loli.net/2023/09/16/qZg6vBWl3bfQYu8.png" alt="image-20230916224308342"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>耳机里突然“叮”一声</p><p>“我抢到了！”吓了那我正在打原神的室友一跳</p><p>战果：四个人抢了5台iPhone，全部成功！全部9&#x2F;22首发！</p><p>其中一台iPhone15 pro max，三台iPhone 15 pro， 全部8+256</p><p>Leo：</p><p><img src="https://s2.loli.net/2023/09/16/KF8f6UyYJteOPal.png" alt="image-20230916224649573"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>由于Bill把抢到的两台iPhone 15 pro寄给我倒卖，我将收到3台iPhone 15 pro倒卖，先成为交大苹果经销商</p><p>以及：</p><p><img src="https://s2.loli.net/2023/09/16/YAP9eKRCxSBkMWp.png" alt="image-20230916224823227"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>如果能靠闲鱼倒卖赚到钱，那明年再抢</p><p><img src="https://s2.loli.net/2023/09/16/6KsIa2g94kGXFCP.png" alt="image-20230916225008002"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>完&#x2F;&#x2F;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;抢果子首发的经历&quot;&gt;&lt;a href=&quot;#抢果子首发的经历&quot; class=&quot;headerlink&quot; title=&quot;抢果子首发的经历&quot;&gt;&lt;/a&gt;抢果子首发的经历&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;2023.9.15，晚上8时整，惊心动魄的抢首发环节&lt;/strong&gt;&lt;/p</summary>
      
    
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="Apple" scheme="https://ryanstarfox.github.io/tags/Apple/"/>
    
    <category term="微信/Wechat" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1-Wechat/"/>
    
  </entry>
  
  <entry>
    <title>好奇心上头</title>
    <link href="https://ryanstarfox.github.io/2023/09/16/2023/20230914%20%E8%8B%B9%E6%9E%9C%E5%8F%91%E5%B8%83%E4%BC%9A/"/>
    <id>https://ryanstarfox.github.io/2023/09/16/2023/20230914%20%E8%8B%B9%E6%9E%9C%E5%8F%91%E5%B8%83%E4%BC%9A/</id>
    <published>2023-09-15T16:03:00.000Z</published>
    <updated>2023-09-15T16:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="好奇心上头"><a href="#好奇心上头" class="headerlink" title="好奇心上头"></a>好奇心上头</h1><p>2023.9.13北京时间凌晨1点，加州来电如约而至，随便聊聊这次发布会：</p><h3 id="iPhone-15-15-plus"><a href="#iPhone-15-15-plus" class="headerlink" title="iPhone 15 &amp;15 plus"></a>iPhone 15 &amp;15 plus</h3><p><img src="https://s2.loli.net/2023/09/15/Awr6Jsh9VqQDlPu.png" alt="1571694791583_.pic_hd"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>iPhone有些无聊，15和15plus又是14pro se 和14 pro max se，如果买15系列真的不如买14pro系列。但是厨子刀法精准，14pro没有type c，15有type c，这就又要斟酌斟酌了。不过有一说一，这次标准版的颜色真的很好看！！有当年iPhone 5C的感觉了。</p><p><img src="https://s2.loli.net/2023/09/15/JBFCliTgkxyec5M.png" alt="1551694791161_.pic_hd"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="iPhone-pro-pro-max"><a href="#iPhone-pro-pro-max" class="headerlink" title="iPhone pro &amp; pro max"></a>iPhone pro &amp; pro max</h3><p><img src="https://s2.loli.net/2023/09/15/yI8xB6iLbngtcDu.png" alt="1591694791752_.pic_hd"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>pro系列换了A17 pro芯片。首先这个命名很有意思，以前的A系列芯片都不会带“pro”后缀，但是这次的名字叫做“A17 pro”，那么A17芯片放在哪里呢？现在用A系列芯片的产品也就只有iPhone全系列、iPad数字系列和iPad mini系列。iPhone 16大概率会使用iPhone 15pro的芯片，iPhone16pro也会有新的A18 pro芯片，而最新的芯片是不太可能下方给iPad数字版的，结合一下发布时间，A17大概率会给iPad mini7？（这次发布会也没有iPad和Mac新品，应当意味着还会有10月发布会。）</p><p>A17pro系列用了3nm的制程，照理说是性能更好，也更节能，但是，按照苹果发布会的说法，CPU只有10%的提升，GPU只有20%的提升，但是NPU（神经网络处理器）有100%的提升，说明苹果非常重视AI的性能了。</p><p>此外，苹果还是是否重视游戏性能的提升，开始支持硬件级光追了，甚至还有自己的dlss了（但忘记叫什么名字了）。生化危机这种3A大作都能跑了！星穹铁道和原神都被请来了。期待更多3A级游戏登陆iOS平台。<img src="https://s2.loli.net/2023/09/15/5PSL4zDBHcIxGfg.jpg" alt="未标题-1"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>（iPhone 15 pro❎Apple switch ✅）</p><p>USB3的type-c口以及摄像支持直接存入硬盘补全了iPhone视频的最后短板。</p><p>Action button和5倍长焦都算是小更新吧，，而且大多数用户又不会去折腾这些的。</p><p><img src="/images/2023/1561694791187_.pic_hd.jpg" alt="1561694791187_.pic_hd"  data-tag='post-image' onload='this.onload=null;this.style.opacity=1;' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><h3 id="Watch"><a href="#Watch" class="headerlink" title="Watch"></a>Watch</h3><p>续航没提升&#x3D;没什么升级</p><p>有一个超宽频技术，没什么用的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;好奇心上头&quot;&gt;&lt;a href=&quot;#好奇心上头&quot; class=&quot;headerlink&quot; title=&quot;好奇心上头&quot;&gt;&lt;/a&gt;好奇心上头&lt;/h1&gt;&lt;p&gt;2023.9.13北京时间凌晨1点，加州来电如约而至，随便聊聊这次发布会：&lt;/p&gt;
&lt;h3 id=&quot;iPhone-1</summary>
      
    
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/categories/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="Apple" scheme="https://ryanstarfox.github.io/tags/Apple/"/>
    
    <category term="微信" scheme="https://ryanstarfox.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>影评：《流浪地球2》</title>
    <link href="https://ryanstarfox.github.io/2023/01/22/2023/20230122%20%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%83/"/>
    <id>https://ryanstarfox.github.io/2023/01/22/2023/20230122%20%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%83/</id>
    <published>2023-01-22T09:27:07.000Z</published>
    <updated>2023-01-22T09:27:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="是好的"><a href="#是好的" class="headerlink" title="是好的"></a>是好的</h1><p>流浪地球2确实比1好很多，首当其冲，感情戏不尴尬，不刻意，不在规训，非常真实，尤其是图桓宇在14年之后重新见到丫丫的那种激动的神态，刘德华真的演得太好了，很令人动容。还有最后老航天人牺牲自己用机械引线引爆核弹，也是非常让人敬畏的。而且这部电影的最大危机不像1那样来的莫名其妙（片尾也解释了1的危机的来源，也算是填坑？），剧情更加完整、连续。</p><p>科幻特效方面，依旧保持了1的水准。各种车辆、飞船都很有机械感，也有设计的连续性。尤其是片首太空电梯的部分，这或许是大银幕上首次展现太空电梯？还有方舟号空间站坠毁的镜头，真的太震撼了！唯有两个特效我不太满意；月球引爆核弹时核弹的动画缺少细节，看上去不像是核弹，只是一个个白色的光球膨胀开来而已。或许没有氧气环境下的核武爆炸是这样的？求科普。另外，月球爆炸那段，总感觉一开始给的远视核弹爆炸的画面没做好。虽然核弹爆炸的范围确实就这么小，但是它的连锁反应是巨大的，应当同一个镜头继续刻画月球爆炸的场景。可是实际上，月球爆炸的镜头被拉近了，导致月球坍塌的画面似乎有些小气。</p><p>缺点也是有的。我尤其不喜欢一个个过场中“xx事件，倒计时xx时间”。它把对于电影的沉浸感完全破坏掉了，就像是在提醒我：这不是真的，你是在电影院里！而且，它像官方剧透一样，我还在想接下来会发生什么呢，它就告诉我了，这不就没有悬疑感了吗？</p><p>这部电影让我失望的一点在于它没有把上传智能的伦理问题探讨。上传智能的伦理问题应该是很有讨论空间的，而且也确实是一个电影的主线之一。关于上传智能是否是人？上传的人和物理的人之间的关系？上传智能被复制了怎么办？似乎电影并没有深入地讨论下去。而且既然上传智能已经几乎成功了，只是缺一个合适地运行环境（550C&#x2F;550W），为什么不把没能进入地下城地人变成上传智能？这些没有肉体的上传智能和地下城居民地矛盾？这其实可以挖得挺深的。</p><p>我觉得电影的色彩也没有做好。不知是否是我去的影院的问题，总感觉对比度好低，亮度也略微有些低，像没有开启HDR一样，总让人感觉不是很舒服</p><p>总之，片子是好片子，值得去巨幕厅一看，没有失掉1的水准。有提升空间，但总体还是不错的。</p><p>可惜片尾不如1的震撼。1的片尾流浪地球在书页中间飞太美了！感觉可以超过漫威的片头。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;是好的&quot;&gt;&lt;a href=&quot;#是好的&quot; class=&quot;headerlink&quot; title=&quot;是好的&quot;&gt;&lt;/a&gt;是好的&lt;/h1&gt;&lt;p&gt;流浪地球2确实比1好很多，首当其冲，感情戏不尴尬，不刻意，不在规训，非常真实，尤其是图桓宇在14年之后重新见到丫丫的那种激动的神态，</summary>
      
    
    
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/categories/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="豆瓣/Douban" scheme="https://ryanstarfox.github.io/tags/%E8%B1%86%E7%93%A3-Douban/"/>
    
  </entry>
  
  <entry>
    <title>影评：《隐入尘烟》</title>
    <link href="https://ryanstarfox.github.io/2022/09/02/2022/20220902%20%E9%9A%90%E5%85%A5%E5%B0%98%E7%83%9F/"/>
    <id>https://ryanstarfox.github.io/2022/09/02/2022/20220902%20%E9%9A%90%E5%85%A5%E5%B0%98%E7%83%9F/</id>
    <published>2022-09-02T15:31:58.000Z</published>
    <updated>2022-09-02T15:31:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="没有感情，只有善意"><a href="#没有感情，只有善意" class="headerlink" title="没有感情，只有善意"></a>没有感情，只有善意</h1><p>今天终于赶上档期的尾巴去院线看了这部电影。确实是好电影，不过我估计电影能过审是因为演员表后有一句“马有铁在政府和热心村民份帮助下，住了新房子，过上了新生活。”</p><p>怎么说呢，看完电影心情复杂。这部电影我感到没有亲情，没有爱情，邻里情有一点点，只有那种最朴素的善良，让人心动，又让人心碎。</p><h2 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h2><p>马有铁和曹贵英之间有爱情吗？我认为自始至终都是没有的。两个农村弃儿的婚姻来源于包办，他们努力生活，挣扎中萌生的不是爱情，而是依赖感和亲情。他们两个人的角色换成兄妹换成朋友完全是不违和的，唯一不同的在于婚姻的责任与郑重——这从那始终不变的“喜喜”上可以看出来。</p><p>他们见面时是冷淡、害怕的，甚至连结婚照上都是满脸的不高兴。突破口在于有铁给侄子拉家具后回来，贵英送开水。在贵英制作孵小鸡的灯，他们发现灯光变成星星点点的时候，情感汹涌而出。在破房子里竟然也有些浪漫。（感动哭了）两个人在雨中抢救泥土砖的时候两人彻底同心意了（又哭了，原谅我多情）。他们终于有了归属感。</p><p>手上印花的图案，草编的驴…这些就是前后呼应的刀了……</p><h2 id="关于亲情"><a href="#关于亲情" class="headerlink" title="关于亲情"></a>关于亲情</h2><p>三哥有爱过四弟吗？没有。四弟只是一个工具人，甚至就像是那一头驴子。从电影中看不出四弟对于三哥的看法，但是却可以看到他对于父母、大哥、二哥的尊重。可是我其实很怀疑三哥对于四弟的态度真是反映了他们还在世时对四弟的态度，多么可悲啊。</p><p>亲情被彻底解构成了“钱”，可笑的是，这种对于亲情的亵渎遮遮掩掩后仍然显得虚情假意。是已经烂到根里了吗？连装都装不出了？</p><h2 id="关于献血"><a href="#关于献血" class="headerlink" title="关于献血"></a>关于献血</h2><p>这不就是一个“吃人肉”的明显的隐喻吗？唯一的缺点就是那个富人的儿子太脸谱化，不过这是一个可以接受的缺点。不表。</p><p>关于马有铁其人</p><p>他就是一个极度善良、对于自己伤害迟钝（或许是隐忍？），对于别人伤害敏感的人。他体谅驴，照顾燕子，还钱爽气。但估计这样的人只会被归结为老实人、憨人和傻子吧？可是，到底是疯子疯了，还是别人全疯了呢？</p><p>他最后卖掉了所有东西，放走了相依为命的驴，似乎已是看穿一切，超然物外。我更喜欢到这里就戛然而止：马有铁放走了驴，在无垠的沙漠上走着，消失了。</p><h2 id="关于运镜"><a href="#关于运镜" class="headerlink" title="关于运镜"></a>关于运镜</h2><p>几个印象很深的镜头（不专业）</p><p>马有铁在前面用驴犁田，后面的邻居用拖拉机</p><p>驴车挡了汽车的路</p><p>背景音乐里不时的燕子叫声</p><p>新房落成，下半是黄色土房，上半竹月色的天</p><p>孵化小鸡灯泡的星光</p><p>暴雨中两人互相扶不起来，一起又哭又笑</p><p>关于暗示与比喻</p><p>我注意到的有两个</p><p>曹贵英不小心挖出了麦苗，马有铁说就丢掉吧，当肥料，这是它的命，就像人一样，曹贵英又把它种了下去</p><p>马有铁和曹贵英蹭电视，再放食人鱼。我觉得是在比喻亲人、有钱人家和部分邻居</p><hr><p>很欣慰看到这样的电影能上线。其实现在我们中国好的剧本不少的，但演得好的真的太少了。到处都是歌颂太平，没人去揭露问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;没有感情，只有善意&quot;&gt;&lt;a href=&quot;#没有感情，只有善意&quot; class=&quot;headerlink&quot; title=&quot;没有感情，只有善意&quot;&gt;&lt;/a&gt;没有感情，只有善意&lt;/h1&gt;&lt;p&gt;今天终于赶上档期的尾巴去院线看了这部电影。确实是好电影，不过我估计电影能过审是因为演</summary>
      
    
    
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/categories/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="豆瓣/Douban" scheme="https://ryanstarfox.github.io/tags/%E8%B1%86%E7%93%A3-Douban/"/>
    
  </entry>
  
  <entry>
    <title>漫谈电子书</title>
    <link href="https://ryanstarfox.github.io/2022/05/09/2022/20220509%20%E7%94%B5%E5%AD%90%E4%B9%A6/"/>
    <id>https://ryanstarfox.github.io/2022/05/09/2022/20220509%20%E7%94%B5%E5%AD%90%E4%B9%A6/</id>
    <published>2022-05-09T04:08:00.000Z</published>
    <updated>2025-06-03T10:18:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漫谈电子书"><a href="#漫谈电子书" class="headerlink" title="漫谈电子书"></a>漫谈电子书</h1><p>第一篇知乎长文，聊聊我以前折腾过的电子书。</p><p>本人kindle voyage重度用户</p><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p>之前我有朋友问我电子书这么多格式有什么区别，我以前的瞎折腾结果和理解如下：</p><ol start="0"><li><p>pdf、docx、txt不是好格式！！！</p></li><li><p>Epub：其为市面上最通用的格式，有广泛支持，但kindle不支持。（亚马逊嫌弃Epub更新太慢，自己过于先进，因此自己创造自由格式）</p></li><li><p>azw3：亚马逊格式，把任何格式的书传到kindle云端，再从kindle下载，这本书的格式就会被自动转换为了azw3。在kindle上可以更换自己喜欢的字体，但不支持直接上传kindle云端，只能用USB拷到kindle里。</p></li><li><p>Mobi：分为两类</p><ul><li>旧版的kf-7，支持上传kindle云端，兼容性更好，但不支持使用自己的字体。网上大多数.mobi文件都是kf-7，据说可以通过calibre把kf-7转换为kf-8，亲测无用，我的方法是先转换为epub，再用kindle官方的kindle previewer转换为kf-8。</li><li>新版kf-8，支持上传kindle云端。支持使用自己的字体。是的，为了好看的字体，我愿意折腾。“自己的字体”指的是我自己拷到电脑的个性化字体，而不是自带的。自带的字体无论什么格式都可以自由转换。（azw3似乎也算一种kf8）</li></ul></li><li><p>Kfx：这个网上应该基本找不到吧？这是亚马逊官方的kindle previewer的内部格式，没啥用，比其他格式用kindle previewer打开更快一些。</p></li><li><p>fb2：似乎是俄罗斯的一种格式？没有用过，不通用。</p></li></ol><p>如果你有kindle，追求最佳的阅读体验——直接买kindle商店里的电子书。</p><p>如果你有kindle，追求最佳阅读体验，但是不想付钱——下载最大的epub格式电子书(可能包含更多图像)，再通过kindle previewer转换为kf-8 mobi。(有时，下载的epub不符合规范协议，无法转换，那么就换几个epub多试试。）</p><p>如果你没有kindle，kf8不是很有必要，几个格式都可。</p><p>apple自带的图书，据说对epub的规范性要求很高，可能需要试很多epub</p><p>有的epub是pdf直接转换来的，格式不规范显得凌乱（有很多奇怪的换行以及突然出现的数字（页码？）），要留个心眼。</p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p>至于哪里找到电子书？（按我自己常用度排名）</p><p><a href="https://zh.singlelogin.app/?from=fr1lib.org">Z-Library</a></p><p><a href="519.best">519资源网</a></p><p><a href="sobooks.cc">sobooks</a></p><p><a href="jiumodiary.com">鸠摩搜索</a></p><p>公众号：吾为书狂、周读书社、心慕流霞、力哥的英语小站</p><p><a href="http://www.gutenberg.org/">Project Gutenberg</a></p><p>强推zlibrary！不过有时会出现一些小问题，解决方法见这篇文章(<a href="https://pangniao.net/Z-Library-meiyouzhaodaokeyongdeyuming.html?replyTo=234">https://pangniao.net/Z-Library-meiyouzhaodaokeyongdeyuming.html?replyTo=234</a>)</p><p>这里给的是zlibrary的登陆窗，因为这个网址是固定的，而主网站网址一直在变</p><p>以及电子书咨询站<a href="https://bookfere.com/">书伴</a>，里面有各类咨询、图书与字典资源、刷机教程、购买指南</p><hr><h2 id="更新："><a href="#更新：" class="headerlink" title="更新："></a>更新：</h2><p>kindle离开中国了，我不离不弃，但是我实在等不下去了，高考之后买了文石leaf2，就无所谓格式了，基本上都能下载到epub<br>kindle真的让我意难平了，尤其是现在：其实我需要的只是一台有实体键和type c的kindle，但是到现在也没有过——我本来期待的是换上type c的Kindle Oasis，结果亚马逊端上来了Kindle Scribe和Kindle ColorSoft<br>文石的体验很好，虽然确实有色偏的问题，但是小问题</p><p>我的kindle voyage: 2015-2023<br>我的boox leaf 2: 2023-？</p><p>换设备了再更新吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漫谈电子书&quot;&gt;&lt;a href=&quot;#漫谈电子书&quot; class=&quot;headerlink&quot; title=&quot;漫谈电子书&quot;&gt;&lt;/a&gt;漫谈电子书&lt;/h1&gt;&lt;p&gt;第一篇知乎长文，聊聊我以前折腾过的电子书。&lt;/p&gt;
&lt;p&gt;本人kindle voyage重度用户&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/categories/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    
    <category term="生活/Life" scheme="https://ryanstarfox.github.io/tags/%E7%94%9F%E6%B4%BB-Life/"/>
    
    <category term="技术/Tech" scheme="https://ryanstarfox.github.io/tags/%E6%8A%80%E6%9C%AF-Tech/"/>
    
    <category term="书影音/Books and Movies" scheme="https://ryanstarfox.github.io/tags/%E4%B9%A6%E5%BD%B1%E9%9F%B3-Books-and-Movies/"/>
    
    <category term="知乎/Zhihu" scheme="https://ryanstarfox.github.io/tags/%E7%9F%A5%E4%B9%8E-Zhihu/"/>
    
  </entry>
  
</feed>
